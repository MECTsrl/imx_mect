diff -urpN qt-everywhere-opensource-src-4.8.1/src/gui/embedded/qwindowsystem_qws.cpp qt-everywhere-opensource-src-4.8.1-new/src/gui/embedded/qwindowsystem_qws.cpp
--- qt-everywhere-opensource-src-4.8.1/src/gui/embedded/qwindowsystem_qws.cpp	2012-03-14 19:31:15.000000000 +0530
+++ qt-everywhere-opensource-src-4.8.1-new/src/gui/embedded/qwindowsystem_qws.cpp	2013-06-17 06:48:25.615251964 +0530
@@ -2213,7 +2213,12 @@ extern int *qt_last_x,*qt_last_y;
 
   \a pos is in device coordinates
 */
-void QWSServer::sendMouseEvent(const QPoint& pos, int state, int wheel)
+/*! Navani Srivastava (navani.srivastava@gmail.com)
+    
+    bRemote is to differentiate between Touchscreen and VNC MouseEvents.
+    true = VNC
+*/
+void QWSServer::sendMouseEvent(const QPoint& pos, int state, int wheel, bool bRemote)
 {
     bool block = qwsServerPrivate->screensaverblockevent(MOUSE, qwsServerPrivate->screensaverinterval, state);
 #ifdef EVENT_BLOCK_DEBUG
@@ -2226,13 +2231,34 @@ void QWSServer::sendMouseEvent(const QPo
     if ( block )
         return;
 
-    QPoint tpos;
+    QPoint tpos = pos;
     // transformations
+//    if (qt_screen->isTransformed()) {
+//        QSize s = QSize(qt_screen->deviceWidth(), qt_screen->deviceHeight());
+//        tpos = qt_screen->mapFromDevice(pos, s);
+//    } else {
+//        tpos = pos;
+//    }
+
     if (qt_screen->isTransformed()) {
-	QSize s = QSize(qt_screen->deviceWidth(), qt_screen->deviceHeight());
-	tpos = qt_screen->mapFromDevice(pos, s);
+        QSize s = QSize(qt_screen->deviceWidth(), qt_screen->deviceHeight());
+        tpos = qt_screen->mapFromDevice(pos, s);
     } else {
-	tpos = pos;
+        // Only in case of Multi Display
+        // If main screen is not transformed, then check if sub screens are transformed
+        QList<QScreen*> screens = qt_screen->subScreens();
+        if (screens.size() && !bRemote) {
+            for (int i = 0; i < screens.size(); ++i) {
+                QScreen *screen = screens.at(i);
+                if (screen->isTransformed()) {
+                    QSize s = QSize(screen->deviceWidth(), screen->deviceHeight());
+                    tpos = screen->mapFromDevice(pos, s);
+                    break;
+                }
+            }
+        } else {
+            tpos = pos;
+        }
     }
 
     if (qt_last_x) {
diff -urpN qt-everywhere-opensource-src-4.8.1/src/gui/embedded/qwindowsystem_qws.h qt-everywhere-opensource-src-4.8.1-new/src/gui/embedded/qwindowsystem_qws.h
--- qt-everywhere-opensource-src-4.8.1/src/gui/embedded/qwindowsystem_qws.h	2012-03-14 19:31:15.000000000 +0530
+++ qt-everywhere-opensource-src-4.8.1-new/src/gui/embedded/qwindowsystem_qws.h	2013-06-17 06:44:46.739244165 +0530
@@ -262,7 +262,7 @@ public:
     static void setDefaultMouse(const char *);
     static void setDefaultKeyboard(const char *);
     static void setMaxWindowRect(const QRect&);
-    static void sendMouseEvent(const QPoint& pos, int state, int wheel = 0);
+    static void sendMouseEvent(const QPoint& pos, int state, int wheel = 0, bool bRemote = false);
 
     static void setBackground(const QBrush &);
 #ifdef QT3_SUPPORT
diff -urpN qt-everywhere-opensource-src-4.8.1/src/plugins/gfxdrivers/vnc/qscreenvnc_qws.cpp qt-everywhere-opensource-src-4.8.1-new/src/plugins/gfxdrivers/vnc/qscreenvnc_qws.cpp
--- qt-everywhere-opensource-src-4.8.1/src/plugins/gfxdrivers/vnc/qscreenvnc_qws.cpp	2012-03-14 19:31:12.000000000 +0530
+++ qt-everywhere-opensource-src-4.8.1-new/src/plugins/gfxdrivers/vnc/qscreenvnc_qws.cpp	2013-06-17 06:44:46.739244166 +0530
@@ -1024,7 +1024,7 @@ void QVNCServer::pointerEvent()
     QRfbPointerEvent ev;
     if (ev.read(client)) {
         const QPoint offset = qvnc_screen->offset();
-        QWSServer::sendMouseEvent(offset + QPoint(ev.x, ev.y), ev.buttons);
+        QWSServer::sendMouseEvent(offset + QPoint(ev.x, ev.y), ev.buttons, 0, true);
         handleMsg = false;
     }
 }
