diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/S10setup skell-1.18.modified/etc/rc.d/init.d/S10setup
--- skell-1.18/etc/rc.d/init.d/S10setup	2012-10-01 16:37:00.325669021 +0200
+++ skell-1.18.modified/etc/rc.d/init.d/S10setup	2012-10-01 14:20:19.795983350 +0200
@@ -2,35 +2,67 @@
 #
 # Load a new setup from USB or reset the PLC/CAN configurations.
 #
+
 countsys=0
 
 mntdir=/tmp/mnt
+
 [ -d $mntdir ] || { mntdir=/tmp/mnt; /bin/mkdir $mntdir; }
 [ -d $mntdir ] || exit 1
+sleep 2
+dmesg > $mntdir/log
+logfile=$mntdir/update.log
 
 start() {
     
-    
     echo -n "Checking for configuration USB key...  "
     sleep 1
-    if /bin/mount -oro /dev/sda1 $mntdir 2>/dev/null; then
-        usbdev=/dev/sda1
-    else
-        /bin/mount -oro /dev/sda $mntdir 2>/dev/null || { echo "  USB device not found."; return; }
-        usbdev=/dev/sda
-    fi
+    echo "" | tee $logfile
+	usb_string=`awk '/sd[a-z]: sd[a-z]/ ' < $mntdir/log`
 
-    if [ -n "$usbdev" ]; then
-        echo "Done."
-    else
-        echo "Not found."	
-        return
-    fi
-    
+	echo "Found scsi device: $usb_string" | tee -a $logfile
+
+	if [ -n "$usb_string" ]; then
+		mntpoint=`echo $usb_string |  awk '{split($0,a,":"); print a[1]'}`
+		#echo "tentative dev=$mntpoint"
+		if /bin/mount -orw /dev/$mntpoint $mntdir 2>/dev/null; then
+			usbdev=/dev/$mntpoint
+			echo "current mount point is $usbdev" | tee -a $logfile
+		else
+			#echo "going to loop...."
+			usb_ok=0		
+			for i in 2 3 4 5 6 7 8 9
+			do
+				#echo "loop number $i"
+				if [ $usb_ok -eq 0 ]; then
+					mntpoint=`echo $usb_string |  awk '{split($0,a," "); print a['$i']'}`
+					#echo $mntpoint
+					if [ -n "$mntpoint" ]; then
+						if /bin/mount -orw /dev/$mntpoint $mntdir 2>/dev/null; then
+							usbdev=/dev/$mntpoint
+							usb_ok=1
+							echo "mounted scsi device in $mntpoint" | tee -a $logfile
+						fi
+					else
+						echo "no valid usb mountpoint found" | tee -a $logfile
+						break;
+					fi
+				else
+					break;
+				fi
+			done
+		fi
+
+	else
+		echo "no usb key found in dmesg" | tee -a $logfile
+		echo "exit from configuration script" 	| tee -a $logfile
+		return
+	fi
 
     echo -n "Starting the configuration process...  "
     if [ -f $mntdir/reset.conf ]; then
-        /bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW.  Aborting device reset."; return; }
+		echo " Resetting all!" | tee -a $logfile
+        /bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW.  Aborting device reset." | tee -a $logfile; return; }
         /bin/rm -f $mntdir/reset.conf
 
         # Just remove all configuration files
@@ -38,58 +70,86 @@
         /bin/rm -f /local/etc/sysconfig/history
         /bin/rm -f /local/etc/sysconfig/mantainance
 
-	#Eventually add other configuration files to be removed for reset operations
+		#Eventually add other configuration files to be removed for reset operations
+		echo " Reset done!" | tee -a $logfile
 
-     else if [ `ls $mntdir | grep sysupdate_ | wc -l` -eq  1 ]; then
+	else if [ `ls $mntdir | grep sysupdate_ | wc -l` -eq  1 ]; then
     
-	echo " Found ONE sysupdate!"
-	countsys=1
-	sysupdatename=`ls $mntdir | grep sysupdate_`
-	/bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting update process."; return; }	
-	/usr/bin/dos2unix $mntdir/$sysupdatename   
-	/bin/sh $mntdir/$sysupdatename
-	echo "$mntdir/$sysupdatename applied!!!"
+		echo " Found one sysupdate!" | tee -a $logfile
+		countsys=1
+		sysupdatename=`ls $mntdir | grep sysupdate_`
+		/bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting update process." | tee -a $logfile; return; }	
+		/usr/bin/dos2unix $mntdir/$sysupdatename 2>&1 | tee -a $logfile
+		/bin/sh $mntdir/$sysupdatename 2>&1 | tee -a $logfile
+		echo " Update '$mntdir/$sysupdatename' applied!!!" | tee -a $logfile
+		/local/root/application -v | tee -a $logfile
+		killall application
 
     else if [ -f $mntdir/sysupdate.sh ] && [ $countsys -eq 0 ]; then
-    	echo " PERFORMING STANDARD sysupdate!"
+    	echo " Performing standard sysupdate!" | tee -a $logfile
     	/bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting update process."; return; }
-	/usr/bin/dos2unix $mntdir/sysupdate.sh
-        /bin/sh $mntdir/sysupdate.sh
-
-
-
+		/usr/bin/dos2unix $mntdir/sysupdate.sh 2>&1 | tee -a $logfile
+        /bin/sh $mntdir/sysupdate.sh 2>&1 | tee -a $logfile
+		echo " Update '$mntdir/sysupdate.sh' applied!!!" | tee -a $logfile
     else
         # Perform any other configurations
-	/bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW. Configuration files will be not deleted."; }
+		/bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW. Configuration files will be not deleted."; }
+
+		if [ -f $mntdir/database.txt ]; then
+			echo " Found the database list file '$mntdir/database.txt'" | tee -a $logfile
+			if [ -f $mntdir/`cat $mntdir/database.txt` ]; then
+				echo " Found database file '$mntdir/`cat $mntdir/database.txt`'" | tee -a $logfile
+				/bin/cp $mntdir/`cat $mntdir/database.txt` /local/etc/sysconfig/val01.sqlite 2>&1 | tee -a $logfile
+				/bin/cp /local/etc/sysconfig/val01.sqlite /local/etc/sysconfig/val01.sqlite.factory 2>&1 | tee -a $logfile
+				echo " Database '$mntdir/`cat $mntdir/database.txt`' updated!" | tee -a $logfile
+			else
+				echo "Error: cannot found database file $mntdir/`cat database.txt`.  Aborting update process."
+				return
+			fi
+		else
+        	if [ -f $mntdir/val01.sqlite ]; then
+				echo " Found database file ' $mntdir/val01.sqlite'" | tee -a $logfile
+            	/bin/cp $mntdir/val01.sqlite /local/etc/sysconfig 2>&1 | tee -a $logfile
+				/bin/cp /local/etc/sysconfig/val01.sqlite /local/etc/sysconfig/val01.sqlite.factory 2>&1 | tee -a $logfile
+				echo " Database '$mntdir/val01.sqlite' updated!" | tee -a $logfile
+    	    fi
+		fi
        
         if [ -f $mntdir/application.conf ]; then
-	    /usr/bin/dos2unix $mntdir/application.conf
-            /bin/cp $mntdir/application.conf /local/etc/sysconfig
-
-            /bin/rm -f $mntdir/application.conf
+			echo " Found a new configuration file '$mntdir/application.conf'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/application.conf 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/application.conf /local/etc/sysconfig 2>&1 | tee -a $logfile
+			echo " Configuration file '$mntdir/application.conf' updated!" | tee -a $logfile
         fi
         if [ -f $mntdir/net.conf ]; then
-	    /usr/bin/dos2unix $mntdir/net.conf
-            /bin/cp $mntdir/net.conf /local/etc/sysconfig
-
-            /bin/rm -f $mntdir/net.conf
+			echo " Found a new network configuration file '$mntdir/net.conf'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/net.conf 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/net.conf /local/etc/sysconfig 2>&1 | tee -a $logfile
+			echo " Network configuration file '$mntdir/net.conf' updated!" | tee -a $logfile
         fi
         if [ -f $mntdir/autoexec ]; then
-	    /bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting autoexec update process."; return; }
-            /usr/bin/dos2unix $mntdir/autoexec
-	    /bin/cp $mntdir/autoexec /usr/bin/autoexec
-	    /bin/mount -oro,remount / 2>/dev/null
-            /bin/rm -f $mntdir/autoexec
+			echo " Found a new autoexec file file '$mntdir/autoexec'" | tee -a $logfile
+			/bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting autoexec update process."; return; }
+            /usr/bin/dos2unix $mntdir/autoexec 2>&1 | tee -a $logfile
+			/bin/cp $mntdir/autoexec /usr/bin/autoexec 2>&1 | tee -a $logfile
+			/bin/mount -oro,remount / 2>&1 | tee -a $logfile
+			echo " Autoexec file '$mntdir/autoexec' updated!" | tee -a $logfile
         fi
 
+	    if [ -f $mntdir/licence.txt ]; then
+			echo " Found licence file..."
+            /bin/cp $mntdir/licence.txt /local/etc/sysconfig/hw.info 2>&1 | tee -a $logfile
+			echo " Licence applyed"
+        fi
     fi
     fi
     fi
-
+    #Sync for ubifs
+    /bin/sync
     /bin/umount $mntdir
  
     echo "  Done."
-}	
+}
 stop() {
     :
 }
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/shadow skell-1.18.modified/etc/shadow
--- skell-1.18/etc/shadow	2012-10-01 16:37:00.297683021 +0200
+++ skell-1.18.modified/etc/shadow	2012-10-01 14:23:56.559550431 +0200
@@ -1,4 +1,4 @@
-root::11851:0:99999:7:::
+root:$1$kmiZb8Op$66xleA/3tYt8y.ktD7H9U1:0:0:99999:7:::
 bin:*:11851:0:99999:7:::
 daemon:*:11851:0:99999:7:::
 adm:*:11851:0:99999:7:::
