RELEASE := 6.6rc0
TOOLCHAIN_FLAG := SOURCERY_GCC=1

# Export RFSDIR to be used in the Makefiles generated by qmake.
ROOTFS := $(CURDIR)/../ltib/rootfs
export RFSDIR = $(ROOTFS)
RPMBASEDIR := $(CURDIR)/../ltib/rpm

LDIR := $(CURDIR)/localfs
SPECDIR := $(CURDIR)/rpm/SPECS

QT_INSTALL_DIR := /opt/Trolltech
QMAKE = $(QT_INSTALL_DIR)/bin/qmake
CC_VERSION = 
CC_DIRECTORY := /opt/CodeSourcery
CC_RADIX := arm-none-linux-gnueabi

SMP_FLAG := -j$(shell grep -c ^processor /proc/cpuinfo)

# Use ccache.
export PATH := /usr/lib/ccache:$(PATH)


# ##########################
#
# Build/deploy all projects

.PHONY: all
all: local_prepare setup_time splash cgic_work ATCMcontrol_RunTimeSystem factory_data localfs_rpm



# ##########################
#
# local_prepare
#

.PHONY: local_prepare
local_prepare: local_prepare_clean local_prepare_build local_prepare_install

.PHONY: local_prepare_build
local_prepare_build:
	mkdir -p $(LDIR)

.PHONY: local_prepare_install
local_prepare_install:
	sudo rpm --nodeps --root $(LDIR) --dbpath /var/lib/rpm --prefix / --ignorearch -Uvh --define '_tmppath /tmp/rpm' $(RPMBASEDIR)/RPMS/arm/skell-lfs-1.18-2.arm.rpm
	sudo chown -R $(USER) $(LDIR)
	sudo rm -rf $(LDIR)/var/lib/rpm
	-sudo rmdir $(LDIR)/var/lib
	-sudo rmdir $(LDIR)/var

.PHONY: local_prepare_clean
local_prepare_clean:
	sudo rm -rf $(LDIR)

# ##########################
#
# setup_time
#

.PHONY: setup_time
setup_time: setup_time_clean setup_time_build setup_time_install

.PHONY: setup_time_build
setup_time_build: PRJDIR := $(CURDIR)/setup_time
setup_time_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); $(QMAKE) -spec qws/linux-arm-gnueabi-g++
	$(MAKE) $(SMP_FLAG) -C $(PRJDIR)

.PHONY: setup_time_install
setup_time_install: PRJDIR := $(CURDIR)/setup_time
setup_time_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/setup_time $(LDIR)/root/setup_time

.PHONY: setup_time_clean
setup_time_clean: PRJDIR := $(CURDIR)/setup_time
setup_time_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && $(MAKE) -C $(PRJDIR) distclean

# ##########################
#
# splash
#

.PHONY: splash
splash: splash_clean splash_build splash_install

.PHONY: splash_build
splash_build: PRJDIR := $(CURDIR)/splash
splash_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); $(QMAKE) -spec qws/linux-arm-gnueabi-g++
	$(MAKE) $(SMP_FLAG) -C $(PRJDIR)

.PHONY: splash_install
splash_install: PRJDIR := $(CURDIR)/splash
splash_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/splash $(LDIR)/root/splash

.PHONY: splash_clean
splash_clean: PRJDIR := $(CURDIR)/splash
splash_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && $(MAKE) -C $(PRJDIR) distclean

# ##########################
#
# cgic_work
#

.PHONY: cgic_work
cgic_work: cgic_work_clean cgic_work_build cgic_work_install

.PHONY: cgic_work_build
cgic_work_build: PRJDIR := $(CURDIR)/cgic_work
cgic_work_build:
	test -n $(PRJDIR)
	$(MAKE) $(SMP_FLAG) -C $(PRJDIR) $(TOOLCHAIN_FLAG)

.PHONY: cgic_work_install
cgic_work_install: PRJDIR := $(CURDIR)/cgic_work
cgic_work_install:
	test -n $(PRJDIR)
	$(MAKE) -C $(PRJDIR) $(TOOLCHAIN_FLAG) install

.PHONY: cgic_work_clean
cgic_work_clean: PRJDIR := $(CURDIR)/cgic_work
cgic_work_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && $(MAKE) -C $(PRJDIR) $(TOOLCHAIN_FLAG) clobber

# ##########################
#
# ATCMcontrol_RunTimeSystem
#

.PHONY: ATCMcontrol_RunTimeSystem
ATCMcontrol_RunTimeSystem: ATCMcontrol_RunTimeSystem_clean ATCMcontrol_RunTimeSystem_build ATCMcontrol_RunTimeSystem_install

.PHONY: ATCMcontrol_RunTimeSystem_build
ATCMcontrol_RunTimeSystem_build: PRJDIR := $(CURDIR)/ATCMcontrol_RunTimeSystem
ATCMcontrol_RunTimeSystem_build:
	test -n $(PRJDIR)
	$(MAKE) -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) ROOTFS='$(ROOTFS)' CC_VERSION='$(CC_VERSION)' CC_DIRECTORY='$(CC_DIRECTORY)' CC_RADIX='$(CC_RADIX)' all

.PHONY: ATCMcontrol_RunTimeSystem_install
ATCMcontrol_RunTimeSystem_install: PRJDIR := $(CURDIR)/ATCMcontrol_RunTimeSystem
ATCMcontrol_RunTimeSystem_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/bin/fcrts $(LDIR)/root/fcrts

.PHONY: ATCMcontrol_RunTimeSystem_clean
ATCMcontrol_RunTimeSystem_clean: PRJDIR := $(CURDIR)/ATCMcontrol_RunTimeSystem
ATCMcontrol_RunTimeSystem_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && $(MAKE) -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) ROOTFS='$(ROOTFS)' CC_VERSION='$(CC_VERSION)' CC_DIRECTORY='$(CC_DIRECTORY)' CC_RADIX='$(CC_RADIX)' clobber

# ##########################
#
# factory_data
#

.PHONY: factory_data
factory_data: factory_data_clean factory_data_build factory_data_install

.PHONY: factory_data_build
factory_data_build: PRJDIR := $(CURDIR)
factory_data_build:
	test -n $(PRJDIR)
	tar czvf $(PRJDIR)/factory_data.tar.gz --exclude=.svn --exclude=.git -C $(PRJDIR)/localfs .

.PHONY: factory_data_install
factory_data_install: PRJDIR := $(CURDIR)
factory_data_install:
	test -n $(PRJDIR)
	mv $(PRJDIR)/factory_data.tar.gz $(LDIR)

.PHONY: factory_data_clean
factory_data_clean: PRJDIR := $(CURDIR)
factory_data_clean:
	test -n $(PRJDIR)
	rm -f $(LDIR)/factory_data.tar.gz

# ##########################
#
# localfs_rpm
#

.PHONY: localfs_rpm
localfs_rpm: localfs_rpm_clean localfs_rpm_build localfs_rpm_install

.PHONY: localfs_rpm_build
localfs_rpm_build: PRJDIR := $(CURDIR)
localfs_rpm_build:
	test -n $(PRJDIR)

.PHONY: localfs_rpm_install
localfs_rpm_install: PRJDIR := $(CURDIR)
localfs_rpm_install:
	test -n $(PRJDIR)
	tar cjvf $(RPMBASEDIR)/SOURCES/local.tar.bz2 --exclude=.svn -C $(LDIR) .
	rm -rf $(RPMTMPDIR)/{*,.??*}
	rpmbuild --define 'rel $(RELEASE)' --define '_topdir $(RPMBASEDIR)' --dbpath $(RPMTMPDIR)/rpmdb --target arm --define '_target_cpu arm' --define '_arch arm' --define '_prefix /' --define '_rpmdir $(RPMBASEDIR)/RPMS' -bb --clean --rmsource $(SPECDIR)/local.spec

.PHONY: localfs_rpm_clean
localfs_rpm_clean: PRJDIR := $(CURDIR)
localfs_rpm_clean:
	test -n $(PRJDIR)



# ##########################
# Utils

.PHONY: clean
clean: ATCMcontrol_RunTimeSystem_clean cgic_work_clean factory_data_clean local_prepare_clean setup_time_clean splash_clean
	sudo rm -rf $(LDIR)
