TARGET := tpac_1007
RELEASE := rel5.3rc2
TOOLCHAIN_FLAG := SOURCERY_GCC=1
TOOLCHAIN := codesourcery

# TODO Get these from parent make
# Export RFSDIR for the Makefiles generated by qmake
export RFSDIR := $(HOME)/mect/github/imx_mect/ltib/rootfs
RPMDIR := ~/mect/github/imx_mect/ltib/rpm

LFSDIR := $(RFSDIR)/../../images-all/$(TARGET)/localfs
LDIR := $(CURDIR)/localfs
RPMROOTDIR := $(CURDIR)/rpmbuild_root
RPMTMPDIR := $(CURDIR)/tmp/rpm

SMP_FLAG := -j$(shell grep -c ^processor /proc/cpuinfo)

export PATH := /usr/lib/ccache:/opt/CodeSourcery/bin:/opt/Trolltech/bin:$(PATH)


# ##########################
#
# Build/deploy all GPL stuff

.PHONY: gpl
gpl: local_prepare setup_time splash cgic_work ATCMControl_runtime_system factory_data

# ##########################
#
# Build/deploy proprietary stuff

.PHONY: mect
mect: local_prepare keyGenerator_noGPL setup_time factory_test_noGPL splash cgic_work systool_noGPL ATCMControl_runtime_system_noGPL factory_data 


# ##########################
#
# Build/deploy what is created by build_img.sh -- NOW OBSOLETE

.PHONY: build_img
build_img: local_prepare keyGenerator_noGPL setup_time factory_test splash cgic_work systool_noGPL fcrts factory_data splashscreen localfs_patch



# ##########################
#
# local_prepare
#

.PHONY: local_prepare
local_prepare: local_prepare_clean local_prepare_build local_prepare_install

.PHONY: local_prepare_build
local_prepare_build:
	mkdir -p $(LDIR)

.PHONY: local_prepare_install
local_prepare_install:
	sudo rpm --nodeps --root $(LDIR) --dbpath /var/lib/rpm --prefix / --ignorearch -Uvh --force --define '_tmppath /tmp/rpm' $(RPMDIR)/RPMS/arm/skell-local-1.18-2.arm.rpm
	sudo chown -R $(USER) $(LDIR)
	sudo rm -rf $(LDIR)/var/lib/rpm
	-sudo rmdir $(LDIR)/var/lib
	-sudo rmdir $(LDIR)/var

.PHONY: local_prepare_clean
local_prepare_clean:
	sudo rm -rf $(LDIR)

# ##########################
#
# keyGenerator_noGPL
#

.PHONY: keyGenerator_noGPL
keyGenerator_noGPL: keyGenerator_noGPL_clean keyGenerator_noGPL_build keyGenerator_noGPL_install

.PHONY: keyGenerator_noGPL_build
keyGenerator_noGPL_build: PRJDIR := $(CURDIR)/keyGenerator_noGPL
keyGenerator_noGPL_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); qmake -spec qws/linux-arm-gnueabi-g++
	make $(SMP_FLAG) -C $(PRJDIR)

.PHONY: keyGenerator_noGPL_install
keyGenerator_noGPL_install: PRJDIR := $(CURDIR)/keyGenerator_noGPL
keyGenerator_noGPL_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/keyGenerator $(LDIR)/root/keyGenerator_noGPL

.PHONY: keyGenerator_noGPL_clean
keyGenerator_noGPL_clean: PRJDIR := $(CURDIR)/keyGenerator_noGPL
keyGenerator_noGPL_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) distclean

# ##########################
#
# setup_time
#

.PHONY: setup_time
setup_time: setup_time_clean setup_time_build setup_time_install

.PHONY: setup_time_build
setup_time_build: PRJDIR := $(CURDIR)/setup_time
setup_time_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); qmake -spec qws/linux-arm-gnueabi-g++
	make $(SMP_FLAG) -C $(PRJDIR)

.PHONY: setup_time_install
setup_time_install: PRJDIR := $(CURDIR)/setup_time
setup_time_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/setup_time $(LDIR)/root/setup_time

.PHONY: setup_time_clean
setup_time_clean: PRJDIR := $(CURDIR)/setup_time
setup_time_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) distclean

# ##########################
#
# splash
#

.PHONY: splash
splash: splash_clean splash_build splash_install

.PHONY: splash_build
splash_build: PRJDIR := $(CURDIR)/splash
splash_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); qmake -spec qws/linux-arm-gnueabi-g++
	make $(SMP_FLAG) -C $(PRJDIR)

.PHONY: splash_install
splash_install: PRJDIR := $(CURDIR)/splash
splash_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/splash $(LDIR)/root/splash

.PHONY: splash_clean
splash_clean: PRJDIR := $(CURDIR)/splash
splash_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) distclean

# ##########################
#
# cgic_work
#

.PHONY: cgic_work
cgic_work: cgic_work_clean cgic_work_build cgic_work_install

.PHONY: cgic_work_build
cgic_work_build: PRJDIR := $(CURDIR)/cgic_work
cgic_work_build:
	test -n $(PRJDIR)
	make $(SMP_FLAG) -C $(PRJDIR) $(TOOLCHAIN_FLAG)

.PHONY: cgic_work_install
cgic_work_install: PRJDIR := $(CURDIR)/cgic_work
cgic_work_install:
	test -n $(PRJDIR)
	make -C $(PRJDIR) $(TOOLCHAIN_FLAG) install

.PHONY: cgic_work_clean
cgic_work_clean: PRJDIR := $(CURDIR)/cgic_work
cgic_work_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) $(TOOLCHAIN_FLAG) clobber

# ##########################
#
# systool_noGPL
#

.PHONY: systool_noGPL
systool_noGPL: systool_noGPL_clean systool_noGPL_build systool_noGPL_install

.PHONY: systool_noGPL_build
systool_noGPL_build: PRJDIR := $(CURDIR)/systool_noGPL
systool_noGPL_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); qmake -spec qws/linux-arm-gnueabi-g++ systool.pro -o Makefile -nodepend
	make $(SMP_FLAG) -C $(PRJDIR) $(TOOLCHAIN_FLAG) systool

.PHONY: systool_noGPL_install
systool_noGPL_install: PRJDIR := $(CURDIR)/systool_noGPL
systool_noGPL_install:
	test -n $(PRJDIR)
	make -C $(PRJDIR) $(TOOLCHAIN_FLAG) install
	mv $(LDIR)/root/systool $(LDIR)/root/systool_noGPL
	if test $(TARGET) = "ATN01"; then \
		chmod a+x $(LDIR)/root/systool_noGPL; \
	else \
		chmod a-x $(LDIR)/root/systool_noGPL; \
	fi

.PHONY: systool_noGPL_clean
systool_noGPL_clean: PRJDIR := $(CURDIR)/systool_noGPL
systool_noGPL_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) distclean

# ##########################
#
# ATCMControl_runtime_system_noGPL
#

.PHONY: ATCMControl_runtime_system_noGPL
ATCMControl_runtime_system_noGPL: ATCMControl_runtime_system_noGPL_clean ATCMControl_runtime_system_noGPL_build ATCMControl_runtime_system_noGPL_install

.PHONY: ATCMControl_runtime_system_noGPL_build
ATCMControl_runtime_system_noGPL_build: PRJDIR := $(CURDIR)/ATCMControl_runtime_system_noGPL
ATCMControl_runtime_system_noGPL_build:
	test -n $(PRJDIR)
	make -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) all

.PHONY: ATCMControl_runtime_system_noGPL_install
ATCMControl_runtime_system_noGPL_install: PRJDIR := $(CURDIR)/ATCMControl_runtime_system_noGPL
ATCMControl_runtime_system_noGPL_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/bin/fcrts $(LDIR)/root/fcrts_noGPL

.PHONY: ATCMControl_runtime_system_noGPL_clean
ATCMControl_runtime_system_noGPL_clean: PRJDIR := $(CURDIR)/ATCMControl_runtime_system_noGPL
ATCMControl_runtime_system_noGPL_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) clobber

# ##########################
#
# ATCMControl_runtime_system
#

.PHONY: ATCMControl_runtime_system
ATCMControl_runtime_system: ATCMControl_runtime_system_clean ATCMControl_runtime_system_build ATCMControl_runtime_system_install

.PHONY: ATCMControl_runtime_system_build
ATCMControl_runtime_system_build: PRJDIR := $(CURDIR)/ATCMControl_runtime_system
ATCMControl_runtime_system_build:
	test -n $(PRJDIR)
	make -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) all

.PHONY: ATCMControl_runtime_system_install
ATCMControl_runtime_system_install: PRJDIR := $(CURDIR)/ATCMControl_runtime_system
ATCMControl_runtime_system_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/bin/fcrts $(LDIR)/root/fcrts

.PHONY: ATCMControl_runtime_system_clean
ATCMControl_runtime_system_clean: PRJDIR := $(CURDIR)/ATCMControl_runtime_system
ATCMControl_runtime_system_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -j1 -C $(PRJDIR) -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" $(TOOLCHAIN_FLAG) clobber

# ##########################
#
# factory_data
#

.PHONY: factory_data
factory_data: factory_data_clean factory_data_build factory_data_install

.PHONY: factory_data_build
factory_data_build: PRJDIR := $(CURDIR)
factory_data_build:
	test -n $(PRJDIR)
	tar czvf $(PRJDIR)/factory_data.tar.gz --exclude=.svn --exclude=.git -C $(PRJDIR)/localfs local

.PHONY: factory_data_install
factory_data_install: PRJDIR := $(CURDIR)
factory_data_install:
	test -n $(PRJDIR)
	mv $(PRJDIR)/factory_data.tar.gz $(LDIR)

.PHONY: factory_data_clean
factory_data_clean: PRJDIR := $(CURDIR)
factory_data_clean:
	test -n $(PRJDIR)
	rm -f $(LDIR)/factory_data.tar.gz

# ##########################
#
# localfs_patch
#

.PHONY: localfs_patch
localfs_patch: localfs_patch_clean localfs_patch_build localfs_patch_install localfs_patch_rpm

.PHONY: localfs_patch_build
localfs_patch_build: PRJDIR := $(CURDIR)/atn01/file_system/local
localfs_patch_build:
	test -n $(PRJDIR)
	mkdir -p $(LFSDIR)

.PHONY: localfs_patch_install
localfs_patch_install: PRJDIR := $(CURDIR)/atn01/file_system/local
localfs_patch_install:
	test -n $(PRJDIR)
	tar cjvf $(LFSDIR)/../local_patch.tar.bz2 --exclude=.svn -C $(PRJDIR) .

.PHONY: localfs_patch_rpm
localfs_patch_rpm: PRJDIR := $(CURDIR)/atn01/file_system/local
localfs_patch_rpm:
	test -n $(PRJDIR)
	rm -rf $(RPMROOTDIR); mkdir -p $(RPMROOTDIR)/SOURCES
	rm -rf $(RPMTMPDIR); mkdir -p $(RPMTMPDIR)
	cp $(LFSDIR)/../local_patch.tar.bz2 $(RPMROOTDIR)/SOURCES
	rpmbuild --define '_topdir $(RPMROOTDIR)' --dbpath $(RPMTMPDIR)/rpmdb --target arm --define '_target_cpu arm' --define '_arch arm' --define '_prefix /' --define '_rpmdir $(RPMTMPDIR)/RPMS' -bb --clean --rmsource rpm_specs/local.spec

.PHONY: localfs_patch_clean
localfs_patch_clean: PRJDIR := $(CURDIR)/atn01/file_system/local
localfs_patch_clean:
	test -n $(PRJDIR)

# ##########################
#
# splashscreen
#

.PHONY: splashscreen
splashscreen: splashscreen_clean splashscreen_build splashscreen_install

.PHONY: splashscreen_build
splashscreen_build: PRJDIR := $(CURDIR)/qt_atcm/qt_templates/ATCM-template-project/config
splashscreen_build:
	test -n $(PRJDIR)

.PHONY: splashscreen_install
splashscreen_install: PRJDIR := $(CURDIR)/qt_atcm/qt_templates/ATCM-template-project/config
splashscreen_install:
	test -n $(PRJDIR)
	install -D -m 0644 $(PRJDIR)/splash.png $(LDIR)/etc/sysconfig/img/splash.png
	install -D -m 0644 $(PRJDIR)/systool.png $(LDIR)/etc/sysconfig/img/systool.png

.PHONY: splashscreen_clean
splashscreen_clean: PRJDIR := $(CURDIR)/qt_atcm/qt_templates/ATCM-template-project/config
splashscreen_clean:
	test -n $(PRJDIR)

# ##########################
#
# factory_test_noGPL
#
# NOTE: Proprietary code (Trama)
#

.PHONY: factory_test_noGPL
factory_test_noGPL: factory_test_noGPL_clean factory_test_noGPL_build factory_test_noGPL_install

.PHONY: factory_test_noGPL_build
factory_test_noGPL_build: PRJDIR := $(CURDIR)/factory_test_noGPL
factory_test_noGPL_build:
	test -n $(PRJDIR)
	cd $(PRJDIR); qmake -spec qws/linux-arm-gnueabi-g++ -config $(TOOLCHAIN)
	make $(SMP_FLAG) -C $(PRJDIR)

.PHONY: factory_test_noGPL_install
factory_test_noGPL_install: PRJDIR := $(CURDIR)/factory_test_noGPL
factory_test_noGPL_install:
	test -n $(PRJDIR)
	install -D -m 0755 $(PRJDIR)/factory_test $(LDIR)/root/factory_test_noGPL

.PHONY: factory_test_noGPL_clean
factory_test_noGPL_clean: PRJDIR := $(CURDIR)/factory_test_noGPL
factory_test_noGPL_clean:
	test -n $(PRJDIR)
	-test -d $(PRJDIR) && make -C $(PRJDIR) distclean
	-test -d $(PRJDIR) && make -C $(PRJDIR)/trama $(TOOLCHAIN_FLAG) distclean


# ##########################
#
# Housekeeping

.PHONY: clean
clean: ATCMControl_runtime_system_clean ATCMControl_runtime_system_noGPL_clean cgic_work_clean factory_data_clean factory_test_noGPL_clean keyGenerator_noGPL_clean local_prepare_clean setup_time_clean splash_clean systool_noGPL_clean
	sudo rm -rf $(LFSDIR) $(LDIR)

