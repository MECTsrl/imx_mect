/****************************************************************************
**
** Copyright (c) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of Qt Creator
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage index.html
    \previouspage creator-os-supported-platforms.html
    \page creator-project-other.html
    \nextpage creator-project-cmake.html

    \title Using Other Build Systems

    \QC project wizards create projects that are configured to use qmake. Most
    of the instructions in this manual apply to using qmake.

    \list

        \li \l{Setting Up a CMake Project}

            CMake is an alternative to qmake for automating the generation of
            build configurations.

        \li \l{Setting Up a Qbs Project}

            Qt Build Suite (Qbs) is a new build tool for Qt. It is an all-in-one
            tool that generates a build graph from a high-level project
            description (like qmake or CMake do) and executes the commands in
            the low-level build graph (like make does). Qbs is still
            experimental, but you can use it to build \QC, for example.

        \li \l{Setting Up an Autotools Project}

            \QC can open projects that use the Autotools build system. You can
            build and run the projects directly from \QC.

        \li \l{Setting Up a Generic Project}

            \QC supports generic projects, so you can import existing projects
            that do not use qmake or CMake. This enables you to use \QC as a
            code editor and to fully control the steps and commands used to
            build the project.

    \endlist

*/
