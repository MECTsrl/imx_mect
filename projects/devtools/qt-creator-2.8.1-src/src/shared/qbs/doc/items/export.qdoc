/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt Build Suite.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/
/*!
    \contentspage index.html
    \previouspage module-cpp.html
    \page export-item.html
    \nextpage filetagger-item.html

    \title Export Item

    An \c Export item can appear inside a \l{Product Item}. The properties attached to it will
    take effect in all products that depend on the product inside which the product module is defined.
    As an example, consider these two products:
    \code
    Product {
        name: "A"
        Export {
            Depends { name: "cpp" }
            cpp.includePaths: "."
        }
    }

    Product {
        name: "B"
        Depends { name: "A" }
    }
    \endcode

    The sources in product B will be able to use headers from product A without specifiying
    the full path to them, because the include path has been made known to the compiler via
    A's product module.

    \note This relationship is transitive, so a product C depending on product B will also
    get the include paths via A's product module.
*/
