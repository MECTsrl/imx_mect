.\" Automatically generated by Pod::Man version 1.02
.\" Sat Jul 21 11:16:32 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "RPM 3"
.TH RPM 3 "perl v5.6.0" "2001-04-27" "User Contributed Perl Documentation"
.UC
.SH "NAME"
\&\s-1RPM\s0 \- Perl interface to the \s-1API\s0 for the \s-1RPM\s0 Package Manager
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBPerl-RPM\fR package is an extension for natively linking the
functionality of the \fB\s-1RPM\s0 Package Manager\fR with the extension facility of
Perl. The aim is to offer all the functionality made available via the C
\&\s-1API\s0 in the form of Perl object classes.
.PP
At present, the package-manipulation functionality is not yet implemented.
The \fB\s-1RPM:\s0:Database\fR and \fB\s-1RPM:\s0:Header\fR packages do provide access to the
information contained within the database of installed packages, and
individual package headers, respectively. The \fB\s-1RPM:\s0:Error\fR package is
available, which provides support routines for signaling and catching
errors. Additionally, there is the \fB\s-1RPM:\s0:Constants\fR package which provides
a number of values from the \fBrpm\fR library, referred to by the same name used
at the C level.
.SH "UTILITY FUNCTIONS"
.IX Header "UTILITY FUNCTIONS"
The following utility functions are exported by default from \fB\s-1RPM\s0\fR:
.Ip "rpm_osname" 4
.IX Item "rpm_osname"
Returns the text name of the O/S, as derived from the \fBrpm\fR configuration
files. This is the O/S token that \fBrpm\fR will use to refer to the running
system.
.Ip "rpm_archname" 4
.IX Item "rpm_archname"
As above, but returns the architecture string instead. Again, this may not
directly match the running system, but rather is the value that \fBrpm\fR is
using. \fBrpm\fR will use the lowest-matching architecture whenever possible,
for maximum cross-platform compatibility.
.PP
The following utility function may be explicitly requested via \fBuse\fR or
\&\fBimport\fR:
.Sp
Allows RPM-style comparison of version/release pairs without having the full
\&\fB\s-1RPM:\s0:Header\fR objects in memory. This enables programs to compare versions
without having to worry about how \s-1RPM\s0 handles the mixture of alphanumeric
cases that are supported internally. The return value is \-1, 0 or 1, as with
any comparison operator. This is purposefully named differently from the
\&\fBcmpver\fR method in \fB\s-1RPM:\s0:Header\fR so as to avoid confusion.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
When an error occurs in either the C-level \fBrpm\fR library or internally
within these libraries, it is made available via a special dual-nature
variable \fB$RPM::err\fR. When evaluated in a numeric context, it returns the
integer code value of the error. When taken in a string context, it returns
the text message associated with the error. This is intended to closely
mimic the behavior of the special Perl variable "\f(CW\*(C`$!\*(C'\fR".
.SH "CAVEATS"
.IX Header "CAVEATS"
This is currently regarded as alpha-quality software. The interface is
subject to change in future releases.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the RPM::Constants manpage, the RPM::Database manpage, the RPM::Error manpage, the RPM::Header manpage,
the perl manpage, the rpm manpage
.SH "AUTHOR"
.IX Header "AUTHOR"
Randy J. Ray <rjray@blackperl.com>
