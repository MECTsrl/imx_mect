.\" Automatically generated by Pod::Man version 1.02
.\" Sat Jul 21 11:16:32 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "RPM::Database 3"
.TH RPM::Database 3 "perl v5.6.0" "2001-04-27" "User Contributed Perl Documentation"
.UC
.SH "NAME"
\&\s-1RPM:\s0:Database \- Access to the \s-1RPM\s0 database of installed packages
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use RPM::Database;
.Ve
.Vb 1
\&    tie %RPM, "RPM::Database" or die "$RPM::err";
.Ve
.Vb 4
\&    for (sort keys %RPM)
\&    {
\&        ...
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fB\s-1RPM:\s0:Database\fR package provides access to the database of installed
packages on a system. The database may be accessed as either a tied hash
or as a blessed reference to a hash. The keys of the hash represent
packages on the system. The order in which they are returned by any of
\&\f(CW\*(C`keys\*(C'\fR, \f(CW\*(C`each\*(C'\fR or \f(CW\*(C`values\*(C'\fR, is determined by the internal database
ordering. Unlike the keys in \fB\s-1RPM:\s0:Header\fR (see the RPM::Header manpage), the
keys here are in fact case-sensitive.
.PP
The return value corresponding to each key is a reference to a
\&\fB\s-1RPM:\s0:Header\fR object. The header object is marked read-only, as the
\&\s-1RPM\s0 database is not directly modifiable via this interface.
.PP
There are also a number of class methods implemented, which are described in
the next section.
.SH "USAGE"
.IX Header "USAGE"
.Sh "Creating an Object"
.IX Subsection "Creating an Object"
An object may be created one of two ways:
.PP
.Vb 1
\&    tie %D, "RPM::Database";
.Ve
.Vb 1
\&    $dataref = new RPM::Database;
.Ve
The latter approach offers more direct access to the class methods, while
also permitting the usual tied-hash operations such as fetching:
.PP
.Vb 1
\&    $dataref->{package}    # Such as "rpm" or "perl"
.Ve
.Sh "Class Methods"
.IX Subsection "Class Methods"
The following methods are available to objects of this class, in addition to
the tied-hash suite of operations. If the object is a hash instead of a
hash reference, it can be used to call these methods via:
.PP
.Vb 1
\&    (tied %hash)->method_name(...)
.Ve
.Ip "init" 4
.IX Item "init"
This causes a complete initialization of the \s-1RPM\s0 database. It must be run
with sufficient permissions to create/update the relevant files. It must
also be called as a static method, to avoid having any file descriptors
open on the database at the time.
.Ip "rebuild" 4
.IX Item "rebuild"
This rebuilds the database (same as \*(L"rpm \-\-rebuilddb\*(R"). As with \fBinit\fR
above, this requires adequate permissions and must be invoked as a static
method.
.Ip "find_by_file(file)" 4
.IX Item "find_by_file(file)"
Returns a list of \fB\s-1RPM:\s0:Header\fR objects that correspond to the \fIpackage\fR\|(s)
claiming ownership of the file \*(L"file\*(R".
.Ip "find_by_group(group)" 4
.IX Item "find_by_group(group)"
Returns of a list of headers for all packages flagged as being in the
group specified.
.Ip "find_what_provides(provides)" 4
.IX Item "find_what_provides(provides)"
Search as above, but based on which \fIpackage\fR\|(s) provide the functionality
specified as \*(L"provides\*(R".
.Ip "find_what_requires(requires)" 4
.IX Item "find_what_requires(requires)"
Return a list of headers for the packages that directly depend on the
specified package for installation and operation. The specified package should
be just the name, no version or release information.
.Ip "find_what_conflicts(conflicts)" 4
.IX Item "find_what_conflicts(conflicts)"
List those packages that have conflicts based on the value of \*(L"conflicts\*(R".
.Ip "find_by_package(package)" 4
.IX Item "find_by_package(package)"
This performs the search by a specific package name. This is the \s-1API\s0 call
used by the \s-1FETCH\s0 tied-hash method, but this differs in that if there is
in fact more than one matching record, all are returned.
.PP
Any of the \f(CW\*(C`find_*\*(C'\fR routines can take an \fB\s-1RPM:\s0:Header\fR object as an argument,
in which case the package name will be retrieved and used for the argument. In
some cases (such as \f(CW\*(C`find_by_file\*(C'\fR), this is probably not what you want. But
in other cases such as \f(CW\*(C`find_what_requires\*(C'\fR, it may be exactly what you want.
.Sh "Importable Defaults"
.IX Subsection "Importable Defaults"
Given that there may be only one concurrent process with the rpm database
open, and given that such would lead to a lot of program code starting with
the same sequence of use/tie or use/new, the following identifiers may be
imported from the package:
.Ip "%RPM" 4
.IX Item "%RPM"
A hash pre-tied to the \s-1RPM:\s0:Database package (and thus the rpm database).
.Ip "$RPM" 4
.IX Item "$RPM"
A \s-1RPM:\s0:Database object, referencing a hash tied to the rpm database.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Direct binding to the internal error-management of \fBrpm\fR is still under
development. At present, most operations generate their diagnostics to
\&\s-1STDERR\s0.
.SH "CAVEATS"
.IX Header "CAVEATS"
This is currently regarded as alpha-quality software. The interface is
subject to change in future releases.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the RPM manpage, the RPM::Header manpage, the perl manpage, the rpm manpage
.SH "AUTHOR"
.IX Header "AUTHOR"
Randy J. Ray <rjray@blackperl.com>
