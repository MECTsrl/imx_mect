# Component project makefile generated by the project manager
#


## core information


CONFIGLETTE	= compConfig.c
TGT_DIR        = $(WIND_BASE)/target
EXTERNAL_BINARIES_DIR      =  $(PRJ_DIR)/extbin/$(BUILD_SPEC)
COMPONENT_NAME = __DB_APPLICATION_NAME__
.PHONY:         defaultTarget
defaultTarget:        $(COMPONENT_NAME).cm

#
# default definition for CPU and TOOL (needed by defs.project)
#

CPU              = PENTIUM2
TOOL             = gnu


## CPU and TOOL info for build specification 'PENTIUM2gnu.debug'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.debug)
CPU              = PENTIUM2
TOOL             = gnu
SYS_OBJ_DIR   =  $(WIND_BASE)/target/lib/obj$(CPU)$(TOOL)vx
USER_OBJ_DIR   =  $(WIND_BASE)/target/user/objs/obj$(CPU)$(TOOL)
PRJ_OBJS    = __DB_APPLICATION_NAME__.o \
		compConfig.o
COMPONENT_OBJS    = __DB_APPLICATION_NAME__.o
DEPENDENCY_FILES    = __DB_APPLICATION_NAME__.d \
		compConfig.d
NUMBER_OF_COMPONENT_OBJS = $(words $(COMPONENT_OBJS))
endif


## CPU and TOOL info for build specification 'PENTIUM2gnu.release'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.release)
CPU              = PENTIUM2
TOOL             = gnu
SYS_OBJ_DIR   =  $(WIND_BASE)/target/lib/obj$(CPU)$(TOOL)vx
USER_OBJ_DIR   =  $(WIND_BASE)/target/user/objs/obj$(CPU)$(TOOL)
PRJ_OBJS    = __DB_APPLICATION_NAME__.o \
		compConfig.o
COMPONENT_OBJS    = __DB_APPLICATION_NAME__.o
DEPENDENCY_FILES    = __DB_APPLICATION_NAME__.d \
		compConfig.d
NUMBER_OF_COMPONENT_OBJS = $(words $(COMPONENT_OBJS))
endif


## CPU and TOOL info for build specification 'PENTIUMgnu.debug'

ifeq ($(BUILD_SPEC),PENTIUMgnu.debug)
CPU              = PENTIUM
TOOL             = gnu
SYS_OBJ_DIR   =  $(WIND_BASE)/target/lib/obj$(CPU)$(TOOL)vx
USER_OBJ_DIR   =  $(WIND_BASE)/target/user/objs/obj$(CPU)$(TOOL)
PRJ_OBJS    = __DB_APPLICATION_NAME__.o \
		compConfig.o
COMPONENT_OBJS    = __DB_APPLICATION_NAME__.o
DEPENDENCY_FILES    = __DB_APPLICATION_NAME__.d \
		compConfig.d
NUMBER_OF_COMPONENT_OBJS = $(words $(COMPONENT_OBJS))
endif


include $(TGT_DIR)/h/make/defs.project


## build-configuration info for build specification 'PENTIUM2gnu.debug'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.debug)

## macros

AR               = arpentium
AS               = ccpentium
CC               = ccpentium
CFLAGS           = -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2
CFLAGS_AS        = -mcpu=pentiumpro -march=pentiumpro -ansi -g -nostdlib -fno-builtin -fno-defer-pop -P -x assembler-with-cpp -Wall -I. -I$(WIND_BASE)/target/h -DCPU=PENTIUM2
CPP              = ccpentium -E -P
CPPFILT          = c++filtpentium --strip-underscores
LD               = ldpentium
LDFLAGS          = -X
LDPARTIAL        = ccpentium -B$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/ -nostdlib -r -Wl,-X
LD_PARTIAL_FLAGS = -X -r
NM               = nmpentium -g
OPTION_DEFINE_MACRO = -D
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
RELEASE          = 0
SIZE             = sizepentium
POST_BUILD_RULE  = 

## end build-configuration info for build specification 'PENTIUM2gnu.debug'

endif


## build-configuration info for build specification 'PENTIUM2gnu.release'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.release)

## macros

AR               = arpentium
AS               = ccpentium
CC               = ccpentium
CFLAGS           = -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -O2 -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2
CFLAGS_AS        = -mcpu=pentiumpro -march=pentiumpro -ansi -O2 -nostdlib -fno-builtin -fno-defer-pop -P -x assembler-with-cpp -Wall -I. -I$(WIND_BASE)/target/h -DCPU=PENTIUM2
CPP              = ccpentium -E -P
CPPFILT          = c++filtpentium --strip-underscores
LD               = ldpentium
LDFLAGS          = -X
LDPARTIAL        = ccpentium -B$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/ -nostdlib -r -Wl,-X
LD_PARTIAL_FLAGS = -X -r
NM               = nmpentium -g
OPTION_DEFINE_MACRO = -D
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
RELEASE          = 1
SIZE             = sizepentium
POST_BUILD_RULE  = 

## end build-configuration info for build specification 'PENTIUM2gnu.release'

endif


## build-configuration info for build specification 'PENTIUMgnu.debug'

ifeq ($(BUILD_SPEC),PENTIUMgnu.debug)

## macros

AR               = arpentium
AS               = ccpentium
CC               = ccpentium
CFLAGS           = -mcpu=pentium -march=pentium -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM
CFLAGS_AS        = -mcpu=pentium -march=pentium -ansi -g -nostdlib -fno-builtin -fno-defer-pop -P -x assembler-with-cpp -Wall -I. -I$(WIND_BASE)/target/h -DCPU=PENTIUM
CPP              = ccpentium -E -P
CPPFILT          = c++filtpentium --strip-underscores
LD               = ldpentium
LDFLAGS          = -X
LDPARTIAL        = ccpentium -B$(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/ -nostdlib -r -Wl,-X
LD_PARTIAL_FLAGS = -X -r
NM               = nmpentium -g
OPTION_DEFINE_MACRO = -D
OPTION_GENERATE_DEPENDENCY_FILE = -MD
OPTION_INCLUDE_DIR = -I
RELEASE          = 0
SIZE             = sizepentium
POST_BUILD_RULE  = 

## end build-configuration info for build specification 'PENTIUMgnu.debug'

endif

# override make definitions only below this line


# override make definitions only above this line

include $(TGT_DIR)/h/make/rules.project


#
# Dummy target to force external make
#

FORCE_EXTERNAL_MAKE:



#
# Custom makefile
#

include $(PRJ_DIR)/Makefile.custom


## build rules for build specification 'PENTIUM2gnu.debug'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.debug)

%.o : $(PRJ_DIR)/%.c
	$(CC) -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 -c $<

%.d : $(PRJ_DIR)/%.c
	ccpentium -E -P -M -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 $< > $@

%.o : $(PRJ_DIR)/../%.c
	$(CC) -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 -c $<

%.d : $(PRJ_DIR)/../%.c
	ccpentium -E -P -M -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 $< > $@


## end build rules for build specification 'PENTIUM2gnu.debug'

endif


## build rules for build specification 'PENTIUM2gnu.release'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.release)

%.o : $(PRJ_DIR)/%.c
	$(CC) -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -O2 -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 -c $<

%.d : $(PRJ_DIR)/%.c
	ccpentium -E -P -M -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -O2 -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 $< > $@

%.o : $(PRJ_DIR)/../%.c
	$(CC) -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -O2 -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 -c $<

%.d : $(PRJ_DIR)/../%.c
	ccpentium -E -P -M -mcpu=pentiumpro -march=pentiumpro -ansi -DRW_MULTI_THREAD -D_REENTRANT -O2 -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM2 $< > $@


## end build rules for build specification 'PENTIUM2gnu.release'

endif


## build rules for build specification 'PENTIUMgnu.debug'

ifeq ($(BUILD_SPEC),PENTIUMgnu.debug)

%.o : $(PRJ_DIR)/%.c
	$(CC) -mcpu=pentium -march=pentium -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM -c $<

%.d : $(PRJ_DIR)/%.c
	ccpentium -E -P -M -mcpu=pentium -march=pentium -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM $< > $@

%.o : $(PRJ_DIR)/../%.c
	$(CC) -mcpu=pentium -march=pentium -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -MD -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM -c $<

%.d : $(PRJ_DIR)/../%.c
	ccpentium -E -P -M -mcpu=pentium -march=pentium -ansi -DRW_MULTI_THREAD -D_REENTRANT -g -nostdlib -fno-builtin -fno-defer-pop -Wall -I. -I$(WIND_BASE)/target/h -I$(PRJ_DIR)/../.. -I$(PRJ_DIR)/../../../include -I$(PRJ_DIR)/../../../include_auto -DCPU=PENTIUM $< > $@


## end build rules for build specification 'PENTIUMgnu.debug'

endif


#
# Rule for configurable, binary component
#
# Downloadable component module build rules
#
__DB_APPLICATION_NAME__.cm: $(PRJ_OBJS) mxrDoc.nm depend
#
# Partially link all __DB_APPLICATION_NAME__ modules together
# including the configlette modules
#
	$(LD) -r -o $@ $(PRJ_OBJS) $(CC_LIB)
#
# Generate _vxMain and _vxExit by munching
#
	$(NM) $@ | $(MUNCH) > __DB_APPLICATION_NAME__.c
	$(COMPILE_TRADITIONAL) __DB_APPLICATION_NAME___ctdt.c -o __DB_APPLICATION_NAME___ctdt.o
	$(LD) -r -o __DB_APPLICATION_NAME__.tmp $@ __DB_APPLICATION_NAME___ctdt.o
	$(RM) $@
	$(MV) __DB_APPLICATION_NAME__.tmp $@
#
# Adds entry point table section to __DB_APPLICATION_NAME__ component
#
	$(PD_EPT_DDE_ADD) $@ $(PRJ_DIR)/$(PRJ_FILE) INDEX $(BUILD_SPEC)


#
# Partial link build rules
# Partially link all __DB_APPLICATION_NAME__ modules together
# If no source files, then generates dummy.c
#

ifeq ($(COMPONENT_OBJS),)
dummy.c:
	$(CFG_GEN) $(PRJ_DIR)/$(PRJ_FILE) dummyCGen $(PRJ_TYPE)

__DB_APPLICATION_NAME__.pl: dummy.o mxrDoc.nm depend
	$(LD) -r -o $@ dummy.o
else
__DB_APPLICATION_NAME__.pl: $(COMPONENT_OBJS) mxrDoc.nm depend
	$(LD) -r -o $@ $(COMPONENT_OBJS) 
endif

#
# nm file containing symbol information for all component objects
#

EXTERNAL_BINARIES_DIR_PATTERN_1 =  $(subst \,\\,$(PRJ_DIR)/extbin/$(BUILD_SPEC)/)
EXTERNAL_BINARIES_DIR_PATTERN =  $(subst /,\/,$(EXTERNAL_BINARIES_DIR_PATTERN_1))

mxrDoc.nm: mxrDoc.size $(COMPONENT_OBJS) 
	$(RM) $@
# if there are no object files, make a blank mxr doc
ifeq ($(NUMBER_OF_COMPONENT_OBJS),0)
	@$(ECHO) "" >> $@
else
# make sure object file name is in mxrDoc.nm even if there
# is only one object file
	$(ECHO) __DB_APPLICATION_NAME__.o: >> $@
	$(NM) __DB_APPLICATION_NAME__.o | sed -e "s|$(EXTERNAL_BINARIES_DIR_PATTERN)||g" >> $@
endif

#
# size file containing size information for all component objects
#
mxrDoc.size: $(COMPONENT_OBJS) $(PRJ_DIR)/component.cdf
	$(RM) $@
ifeq ($(NUMBER_OF_COMPONENT_OBJS),0)
	@$(ECHO) "" > $@
else
	$(SIZE) __DB_APPLICATION_NAME__.o | sed -e "s|$(EXTERNAL_BINARIES_DIR_PATTERN)||g" >> $@
endif


## user-defined rules for build specification 'PENTIUM2gnu.debug'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.debug)

## end user-defined rules for build specification 'PENTIUM2gnu.debug'

endif


## user-defined rules for build specification 'PENTIUM2gnu.release'

ifeq ($(BUILD_SPEC),PENTIUM2gnu.release)

## end user-defined rules for build specification 'PENTIUM2gnu.release'

endif


## user-defined rules for build specification 'PENTIUMgnu.debug'

ifeq ($(BUILD_SPEC),PENTIUMgnu.debug)

## end user-defined rules for build specification 'PENTIUMgnu.debug'

endif


#
# Recursive clean
#

rclean : clean

