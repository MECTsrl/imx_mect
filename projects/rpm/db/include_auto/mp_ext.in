/* DO NOT EDIT: automatically built by dist/s_include. */
#ifndef	_mp_ext_h_
#define	_mp_ext_h_
#if defined(__cplusplus)
extern "C" {
#endif
#define	__memp_alloc __memp_alloc@DB_VERSION_UNIQUE_NAME@
int __memp_alloc __P((DB_MPOOL *, REGINFO *, MPOOLFILE *, size_t, roff_t *, void *));
#define	__memp_bhwrite __memp_bhwrite@DB_VERSION_UNIQUE_NAME@
int __memp_bhwrite __P((DB_MPOOL *, MPOOLFILE *, BH *, int, int *, int *));
#define	__memp_pgread __memp_pgread@DB_VERSION_UNIQUE_NAME@
int __memp_pgread __P((DB_MPOOLFILE *, BH *, int));
#define	__memp_pgwrite __memp_pgwrite@DB_VERSION_UNIQUE_NAME@
int __memp_pgwrite __P((DB_MPOOL *, DB_MPOOLFILE *, BH *, int *, int *));
#define	__memp_pg __memp_pg@DB_VERSION_UNIQUE_NAME@
int __memp_pg __P((DB_MPOOLFILE *, BH *, int));
#define	__memp_bhfree __memp_bhfree@DB_VERSION_UNIQUE_NAME@
void __memp_bhfree __P((DB_MPOOL *, BH *, int));
#define	__memp_fget __memp_fget@DB_VERSION_UNIQUE_NAME@
int __memp_fget __P((DB_MPOOLFILE *, db_pgno_t *, u_int32_t, void *));
#define	__memp_fcreate __memp_fcreate@DB_VERSION_UNIQUE_NAME@
int __memp_fcreate __P((DB_ENV *, DB_MPOOLFILE **, u_int32_t));
#define	__memp_fopen_int __memp_fopen_int@DB_VERSION_UNIQUE_NAME@
int __memp_fopen_int __P((DB_MPOOLFILE *, MPOOLFILE *, const char *, u_int32_t, int, size_t, int));
#define	__memp_fclose_int __memp_fclose_int@DB_VERSION_UNIQUE_NAME@
int __memp_fclose_int __P((DB_MPOOLFILE *, u_int32_t, int));
#define	__memp_mf_discard __memp_mf_discard@DB_VERSION_UNIQUE_NAME@
void __memp_mf_discard __P((DB_MPOOL *, MPOOLFILE *));
#define	__memp_fn __memp_fn@DB_VERSION_UNIQUE_NAME@
char * __memp_fn __P((DB_MPOOLFILE *));
#define	__memp_fns __memp_fns@DB_VERSION_UNIQUE_NAME@
char * __memp_fns __P((DB_MPOOL *, MPOOLFILE *));
#define	__memp_fput __memp_fput@DB_VERSION_UNIQUE_NAME@
int __memp_fput __P((DB_MPOOLFILE *, void *, u_int32_t));
#define	__memp_fset __memp_fset@DB_VERSION_UNIQUE_NAME@
int __memp_fset __P((DB_MPOOLFILE *, void *, u_int32_t));
#define	__memp_dbenv_create __memp_dbenv_create@DB_VERSION_UNIQUE_NAME@
void __memp_dbenv_create __P((DB_ENV *));
#define	__memp_open __memp_open@DB_VERSION_UNIQUE_NAME@
int __memp_open __P((DB_ENV *));
#define	__memp_dbenv_refresh __memp_dbenv_refresh@DB_VERSION_UNIQUE_NAME@
int __memp_dbenv_refresh __P((DB_ENV *));
#define	__mpool_region_destroy __mpool_region_destroy@DB_VERSION_UNIQUE_NAME@
void __mpool_region_destroy __P((DB_ENV *, REGINFO *));
#define	__memp_register __memp_register@DB_VERSION_UNIQUE_NAME@
int __memp_register __P((DB_ENV *, int, int (*)(DB_ENV *, db_pgno_t, void *, DBT *), int (*)(DB_ENV *, db_pgno_t, void *, DBT *)));
#define	__memp_stat __memp_stat@DB_VERSION_UNIQUE_NAME@
int __memp_stat __P((DB_ENV *, DB_MPOOL_STAT **, DB_MPOOL_FSTAT ***, u_int32_t));
#define	__memp_dump_region __memp_dump_region@DB_VERSION_UNIQUE_NAME@
int __memp_dump_region __P((DB_ENV *, char *, FILE *));
#define	__memp_sync __memp_sync@DB_VERSION_UNIQUE_NAME@
int __memp_sync __P((DB_ENV *, DB_LSN *));
#define	__memp_fsync __memp_fsync@DB_VERSION_UNIQUE_NAME@
int __memp_fsync __P((DB_MPOOLFILE *));
#define	__mp_xxx_fh __mp_xxx_fh@DB_VERSION_UNIQUE_NAME@
int __mp_xxx_fh __P((DB_MPOOLFILE *, DB_FH **));
#define	__memp_close_flush_files __memp_close_flush_files@DB_VERSION_UNIQUE_NAME@
int __memp_close_flush_files __P((DB_MPOOL *));
#define	__memp_trickle __memp_trickle@DB_VERSION_UNIQUE_NAME@
int __memp_trickle __P((DB_ENV *, int, int *));
#if defined(__cplusplus)
}
#endif
#endif /* _mp_ext_h_ */
