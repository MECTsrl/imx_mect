Rename CONFIG_NOUVEAU_DEBUG and CONFIG_NOUVEAU_DEBUG_DEFAULT to
CONFIG_COMPAT_*.

--- a/drivers/gpu/drm/nouveau/core/core/option.c
+++ b/drivers/gpu/drm/nouveau/core/core/option.c
@@ -86,7 +86,7 @@ nouveau_boolopt(const char *optstr, cons
 int
 nouveau_dbgopt(const char *optstr, const char *sub)
 {
-	int mode = 1, level = CONFIG_NOUVEAU_DEBUG_DEFAULT;
+	int mode = 1, level = CONFIG_COMPAT_NOUVEAU_DEBUG_DEFAULT;
 
 	while (optstr) {
 		int len = strcspn(optstr, ",=");
--- a/drivers/gpu/drm/nouveau/core/include/core/client.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/client.h
@@ -15,7 +15,7 @@ struct nouveau_client {
 static inline struct nouveau_client *
 nv_client(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_CLIENT_CLASS)))
 		nv_assert("BAD CAST -> NvClient, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/device.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/device.h
@@ -97,7 +97,7 @@ nv_device(void *obj)
 	if (device->parent)
 		device = device->parent;
 
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(device, NV_SUBDEV_CLASS) ||
 		     (nv_hclass(device) & 0xff) != NVDEV_SUBDEV_DEVICE)) {
 		nv_assert("BAD CAST -> NvDevice, 0x%08x 0x%08x",
--- a/drivers/gpu/drm/nouveau/core/include/core/engctx.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/engctx.h
@@ -20,7 +20,7 @@ struct nouveau_engctx {
 static inline struct nouveau_engctx *
 nv_engctx(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_ENGCTX_CLASS)))
 		nv_assert("BAD CAST -> NvEngCtx, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/engine.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/engine.h
@@ -22,7 +22,7 @@ struct nouveau_engine {
 static inline struct nouveau_engine *
 nv_engine(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_ENGINE_CLASS)))
 		nv_assert("BAD CAST -> NvEngine, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/gpuobj.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/gpuobj.h
@@ -27,7 +27,7 @@ struct nouveau_gpuobj {
 static inline struct nouveau_gpuobj *
 nv_gpuobj(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_GPUOBJ_CLASS)))
 		nv_assert("BAD CAST -> NvGpuObj, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/namedb.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/namedb.h
@@ -14,7 +14,7 @@ struct nouveau_namedb {
 static inline struct nouveau_namedb *
 nv_namedb(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_NAMEDB_CLASS)))
 		nv_assert("BAD CAST -> NvNameDB, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/object.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/object.h
@@ -20,7 +20,7 @@ struct nouveau_object {
 	struct nouveau_object *engine;
 	atomic_t refcount;
 	atomic_t usecount;
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 #define NOUVEAU_OBJECT_MAGIC 0x75ef0bad
 	struct list_head list;
 	u32 _magic;
@@ -30,7 +30,7 @@ struct nouveau_object {
 static inline struct nouveau_object *
 nv_object(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (likely(obj)) {
 		struct nouveau_object *object = obj;
 		if (unlikely(object->_magic != NOUVEAU_OBJECT_MAGIC))
--- a/drivers/gpu/drm/nouveau/core/include/core/parent.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/parent.h
@@ -29,7 +29,7 @@ struct nouveau_parent {
 static inline struct nouveau_parent *
 nv_parent(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!(nv_iclass(obj, NV_PARENT_CLASS))))
 		nv_assert("BAD CAST -> NvParent, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/core/printk.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/printk.h
@@ -19,7 +19,7 @@ void __printf(4, 5)
 nv_printk_(struct nouveau_object *, const char *, int, const char *, ...);
 
 #define nv_printk(o,l,f,a...) do {                                             \
-	if (NV_DBG_##l <= CONFIG_NOUVEAU_DEBUG)                                \
+	if (NV_DBG_##l <= CONFIG_COMPAT_NOUVEAU_DEBUG)                                \
 		nv_printk_(nv_object(o), NV_PRINTK_##l, NV_DBG_##l, f, ##a);   \
 } while(0)
 
@@ -32,7 +32,7 @@ nv_printk_(struct nouveau_object *, cons
 #define nv_spam(o,f,a...) nv_printk((o), SPAM, f, ##a)
 
 #define nv_assert(f,a...) do {                                                 \
-	if (NV_DBG_FATAL <= CONFIG_NOUVEAU_DEBUG)                              \
+	if (NV_DBG_FATAL <= CONFIG_COMPAT_NOUVEAU_DEBUG)                              \
 		nv_printk_(NULL, NV_PRINTK_FATAL, NV_DBG_FATAL, f "\n", ##a);  \
 	BUG_ON(1);                                                             \
 } while(0)
--- a/drivers/gpu/drm/nouveau/core/include/core/subdev.h
+++ b/drivers/gpu/drm/nouveau/core/include/core/subdev.h
@@ -20,7 +20,7 @@ struct nouveau_subdev {
 static inline struct nouveau_subdev *
 nv_subdev(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_SUBDEV_CLASS)))
 		nv_assert("BAD CAST -> NvSubDev, %08x", nv_hclass(obj));
 #endif
--- a/drivers/gpu/drm/nouveau/core/include/subdev/instmem.h
+++ b/drivers/gpu/drm/nouveau/core/include/subdev/instmem.h
@@ -16,7 +16,7 @@ struct nouveau_instobj {
 static inline struct nouveau_instobj *
 nv_memobj(void *obj)
 {
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+#if CONFIG_COMPAT_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
 	if (unlikely(!nv_iclass(obj, NV_MEMOBJ_CLASS)))
 		nv_assert("BAD CAST -> NvMemObj, %08x", nv_hclass(obj));
 #endif
