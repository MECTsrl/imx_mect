diff --exclude CVS --exclude .git -uNr libsocketcan-0.0.8/src/libsocketcan.c libsocketcan-0.0.8.modified/src/libsocketcan.c
--- libsocketcan-0.0.8/src/libsocketcan.c	2010-02-14 20:18:49.000000000 +0100
+++ libsocketcan-0.0.8.modified/src/libsocketcan.c	2011-10-04 10:17:21.035965193 +0200
@@ -32,6 +32,7 @@
 
 #include <linux/rtnetlink.h>
 #include <linux/netlink.h>
+#include <linux/if_link.h>
 
 #include <libsocketcan.h>
 
@@ -360,6 +361,7 @@
 		return ret;
 	}
 
+	nl_msg = (struct nlmsghdr *)nlbuf;
 	for (nl_msg = (struct nlmsghdr *)nlbuf;
 	     NLMSG_OK(nl_msg, u_msglen);
 	     nl_msg = NLMSG_NEXT(nl_msg, u_msglen)) {
@@ -472,7 +474,7 @@
 			fprintf(stderr, "unknown acquire mode\n");
 		}
 	}
-	return ret;
+	return 0;
 }
 
 /**
@@ -497,11 +499,17 @@
 
 	fd = open_nl_sock();
 	if (fd < 0)
+	{
+		perror("ERROR open_nl_sock\n");
 		goto err_out;
+	}
 
 	err = do_get_nl_link(fd, acquire, name, res);
 	if (err < 0)
+	{
+		perror("ERROR do_get_nl_link");
 		goto close_out;
+	}
 
 close_out:
 	close(fd);
@@ -547,7 +555,7 @@
 
 	req.i.ifi_index = if_nametoindex(name);
 	if (req.i.ifi_index == 0) {
-		fprintf(stderr, "Cannot find device \"%s\"\n", name);
+		fprintf(stderr, "[%s] - Cannot find device \"%s\"\n", __func__, name);
 		return -1;
 	}
 
@@ -712,6 +720,7 @@
 	} else if (state != CAN_STATE_BUS_OFF) {
 		fprintf(stderr,
 			"Device is not in BUS_OFF," " no use to restart\n");
+		err = 0;
 		goto err_out;
 	}
 
@@ -723,6 +732,7 @@
 		fprintf(stderr,
 			"auto restart with %ums interval is turned on,"
 			" no use to restart\n", restart_ms);
+		err = 0;
 		goto err_out;
 	}
 
