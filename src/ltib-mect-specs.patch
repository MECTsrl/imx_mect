diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/4c_runtime/4c_runtime.spec ltib/dist/lfs-5.1/4c_runtime/4c_runtime.spec
--- ltib.reference/dist/lfs-5.1/4c_runtime/4c_runtime.spec
+++ ltib/dist/lfs-5.1/4c_runtime/4c_runtime.spec
@@ -0,0 +1,117 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : ATCM control runtime system application
+Name            : 4c_runtime
+Version         : v2.021
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just the run-times needed in the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+%description rfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%Package lfs
+Summary         : Trimmed %{name} to just the run-times needed in the local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+Prefix          : %{pfx}/local
+AutoReqProv     : no
+
+%description lfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%description
+ATCM control runtime system provides the run-time execution
+environment for the PLC applications built using the ATCM
+control engineering SDK.
+
+
+%prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+
+# Sources not available
+if test -d ../../../../projects/%{name}; then
+	rsync -av --inplace ../../../../projects/%{name}/ ./
+fi
+
+
+%build
+export LC_ALL
+LC_ALL=C
+
+export MECT_RFSDIR
+MECT_RFSDIR=$DEV_IMAGE
+export MECT_CSXCDIR
+MECT_CSXCDIR=$TOOLCHAIN_PATH
+export MECT_CC_DIRECTORY
+MECT_CC_DIRECTORY=$TOOLCHAIN_PATH
+export MECT_CC_VERSION
+MECT_CC_VERSION= 
+export MECT_CC_RADIX
+MECT_CC_RADIX=$CFGHOST
+
+# Nothing to build
+test -r _fcrts.mak || exit 0
+
+make -j1 -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" MECT_ROOTFS=$MECT_RFSDIR MECT_CC_VERSION=$MECT_CC_VERSION MECT_CC_DIRECTORY=$MECT_CC_DIRECTORY MECT_CC_RADIX=$MECT_CC_RADIX clobber
+make -j1 -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" MECT_ROOTFS=$MECT_RFSDIR MECT_CC_VERSION=$MECT_CC_VERSION MECT_CC_DIRECTORY=$MECT_CC_DIRECTORY MECT_CC_RADIX=$MECT_CC_RADIX all
+
+
+%install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+mkdir -p $RPM_BUILD_ROOT/%{pfx}/local
+
+if ! test -r bin/fcrts; then
+	# Target was not build, create dummy placeholder.
+        install -D -m 0644 /dev/null $RPM_BUILD_ROOT/%{pfx}/usr/bin/fcrts
+else
+	# Install the real thing.
+        install -D -m 0755 bin/fcrts $RPM_BUILD_ROOT/%{pfx}/usr/bin/fcrts
+fi
+install -d -m 0755 $RPM_BUILD_ROOT/%{pfx}/local/root
+ln -s /usr/bin/fcrts $RPM_BUILD_ROOT/%{pfx}/local/root/fcrts
+
+
+%clean
+sudo rm -rf $RPM_BUILD_ROOT
+
+
+%files
+%defattr(-,root,root)
+%{pfx}/local/root/fcrts
+%{pfx}/usr/bin/fcrts
+
+%files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/fcrts
+
+%files lfs
+%defattr(-,root,root)
+%{pfx}/local/root/fcrts
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/ATCMcontrol_RunTimeSystem/ATCMcontrol_RunTimeSystem.spec ltib/dist/lfs-5.1/ATCMcontrol_RunTimeSystem/ATCMcontrol_RunTimeSystem.spec
--- ltib.reference/dist/lfs-5.1/ATCMcontrol_RunTimeSystem/ATCMcontrol_RunTimeSystem.spec
+++ ltib/dist/lfs-5.1/ATCMcontrol_RunTimeSystem/ATCMcontrol_RunTimeSystem.spec
@@ -0,0 +1,103 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : ATCM control runtime system application
+Name            : ATCMcontrol_RunTimeSystem
+Version         : v2.021
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just the run-times needed in the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+%description rfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%Package lfs
+Summary         : Trimmed %{name} to just the run-times needed in the local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+Prefix          : %{pfx}/local
+AutoReqProv     : no
+
+%description lfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%description
+ATCM control runtime system provides the run-time execution
+environment for the PLC applications built using the ATCM
+control engineering SDK.
+
+
+%prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace ../../../../projects/%{name}/ ./
+
+
+%build
+export LC_ALL
+LC_ALL=C
+
+export MECT_RFSDIR
+MECT_RFSDIR=$DEV_IMAGE
+export MECT_CSXCDIR
+MECT_CSXCDIR=$TOOLCHAIN_PATH
+export MECT_CC_DIRECTORY
+MECT_CC_DIRECTORY=$TOOLCHAIN_PATH
+export MECT_CC_VERSION
+MECT_CC_VERSION= 
+export MECT_CC_RADIX
+MECT_CC_RADIX=$CFGHOST
+
+make -j1 -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" MECT_ROOTFS=$MECT_RFSDIR MECT_CC_VERSION=$MECT_CC_VERSION MECT_CC_DIRECTORY=$MECT_CC_DIRECTORY MECT_CC_RADIX=$MECT_CC_RADIX clobber
+make -j1 -f _fcrts.mak TARGET=4CPC DEBUG=0 PRODUCT="USE_CROSSTABLE" MECT_ROOTFS=$MECT_RFSDIR MECT_CC_VERSION=$MECT_CC_VERSION MECT_CC_DIRECTORY=$MECT_CC_DIRECTORY MECT_CC_RADIX=$MECT_CC_RADIX all
+
+
+%install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+mkdir -p $RPM_BUILD_ROOT/%{pfx}/local
+install -D -m 0755 bin/fcrts $RPM_BUILD_ROOT/%{pfx}/usr/bin/fcrts
+install -d -m 0755 $RPM_BUILD_ROOT/%{pfx}/local/root
+ln -s /usr/bin/fcrts $RPM_BUILD_ROOT/%{pfx}/local/root/fcrts
+
+
+%clean
+sudo rm -rf $RPM_BUILD_ROOT
+
+
+%files
+%defattr(-,root,root)
+%{pfx}/local/root/fcrts
+%{pfx}/usr/bin/fcrts
+
+%files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/fcrts
+
+%files lfs
+%defattr(-,root,root)
+%{pfx}/local/root/fcrts
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/SDcard/SDcard.spec ltib/dist/lfs-5.1/SDcard/SDcard.spec
--- ltib.reference/dist/lfs-5.1/SDcard/SDcard.spec
+++ ltib/dist/lfs-5.1/SDcard/SDcard.spec
@@ -0,0 +1,71 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : GUI for SD card settings
+Name            : SDcard
+Version         : 1.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just runtimes
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target system.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n SDcard
+rsync -av --inplace ../../../../projects/SDcard/ ./
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+test -r Makefile && make clean
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+install -D -m 0755 SDcard $RPM_BUILD_ROOT%{pfx}/usr/bin/SDcard
+
+cd %{_builddir}/%{name}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/alsa-lib/alsa-lib.spec ltib/dist/lfs-5.1/alsa-lib/alsa-lib.spec
--- ltib.reference/dist/lfs-5.1/alsa-lib/alsa-lib.spec
+++ ltib/dist/lfs-5.1/alsa-lib/alsa-lib.spec
@@ -13,34 +13,148 @@
 #Patch1          : alsa-lib-1.0.18-relink.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 #%patch0 -p1
 #%patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 config_args="--disable-python"
-if [ "$GNUTARCH" = m68knommu ]
-then
-    config_args="$config_args --disable-shared" 
-fi
+test "$GNUTARCH" = m68knommu && config_args="$config_args --disable-shared" 
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} $config_args
-make
+make -j$(nproc)
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
 rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/alsa-lib/*/*.la
 
 %Clean
-rm -rf $RPM_BUILD_ROOT
+export LC_ALL
+LC_ALL=C
 
+rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/aserver
+%{pfx}/usr/lib/alsa-lib
+%{pfx}/usr/lib/alsa-lib/smixer
+%{pfx}/usr/lib/alsa-lib/smixer/smixer-ac97.so
+%{pfx}/usr/lib/alsa-lib/smixer/smixer-hda.so
+%{pfx}/usr/lib/alsa-lib/smixer/smixer-sbase.so
+%{pfx}/usr/lib/libasound.so
+%{pfx}/usr/lib/libasound.so.2
+%{pfx}/usr/lib/libasound.so.2.0.0
+%{pfx}/usr/share/aclocal
+%{pfx}/usr/share/aclocal/alsa.m4
+%{pfx}/usr/share/alsa
+%{pfx}/usr/share/alsa/alsa.conf
+%{pfx}/usr/share/alsa/cards
+%{pfx}/usr/share/alsa/cards/AACI.conf
+%{pfx}/usr/share/alsa/cards/aliases.alisp
+%{pfx}/usr/share/alsa/cards/aliases.conf
+%{pfx}/usr/share/alsa/cards/ATIIXP.conf
+%{pfx}/usr/share/alsa/cards/ATIIXP-MODEM.conf
+%{pfx}/usr/share/alsa/cards/ATIIXP-SPDMA.conf
+%{pfx}/usr/share/alsa/cards/AU8810.conf
+%{pfx}/usr/share/alsa/cards/AU8820.conf
+%{pfx}/usr/share/alsa/cards/AU8830.conf
+%{pfx}/usr/share/alsa/cards/Audigy2.conf
+%{pfx}/usr/share/alsa/cards/Audigy.conf
+%{pfx}/usr/share/alsa/cards/Aureon51.conf
+%{pfx}/usr/share/alsa/cards/Aureon71.conf
+%{pfx}/usr/share/alsa/cards/CA0106.conf
+%{pfx}/usr/share/alsa/cards/CMI8338.conf
+%{pfx}/usr/share/alsa/cards/CMI8338-SWIEC.conf
+%{pfx}/usr/share/alsa/cards/CMI8738-MC6.conf
+%{pfx}/usr/share/alsa/cards/CMI8738-MC8.conf
+%{pfx}/usr/share/alsa/cards/CMI8788.conf
+%{pfx}/usr/share/alsa/cards/CS46xx.conf
+%{pfx}/usr/share/alsa/cards/EMU10K1.conf
+%{pfx}/usr/share/alsa/cards/EMU10K1X.conf
+%{pfx}/usr/share/alsa/cards/ENS1370.conf
+%{pfx}/usr/share/alsa/cards/ENS1371.conf
+%{pfx}/usr/share/alsa/cards/ES1968.conf
+%{pfx}/usr/share/alsa/cards/FM801.conf
+%{pfx}/usr/share/alsa/cards/GUS.conf
+%{pfx}/usr/share/alsa/cards/HDA-Intel.conf
+%{pfx}/usr/share/alsa/cards/ICE1712.conf
+%{pfx}/usr/share/alsa/cards/ICE1724.conf
+%{pfx}/usr/share/alsa/cards/ICH4.conf
+%{pfx}/usr/share/alsa/cards/ICH.conf
+%{pfx}/usr/share/alsa/cards/ICH-MODEM.conf
+%{pfx}/usr/share/alsa/cards/Maestro3.conf
+%{pfx}/usr/share/alsa/cards/NFORCE.conf
+%{pfx}/usr/share/alsa/cards/PC-Speaker.conf
+%{pfx}/usr/share/alsa/cards/PMac.conf
+%{pfx}/usr/share/alsa/cards/PMacToonie.conf
+%{pfx}/usr/share/alsa/cards/PS3.conf
+%{pfx}/usr/share/alsa/cards/RME9636.conf
+%{pfx}/usr/share/alsa/cards/RME9652.conf
+%{pfx}/usr/share/alsa/cards/SB-XFi.conf
+%{pfx}/usr/share/alsa/cards/SI7018
+%{pfx}/usr/share/alsa/cards/SI7018.conf
+%{pfx}/usr/share/alsa/cards/SI7018/sndoc-mixer.alisp
+%{pfx}/usr/share/alsa/cards/SI7018/sndop-mixer.alisp
+%{pfx}/usr/share/alsa/cards/TRID4DWAVENX.conf
+%{pfx}/usr/share/alsa/cards/USB-Audio.conf
+%{pfx}/usr/share/alsa/cards/VIA686A.conf
+%{pfx}/usr/share/alsa/cards/VIA8233A.conf
+%{pfx}/usr/share/alsa/cards/VIA8233.conf
+%{pfx}/usr/share/alsa/cards/VIA8237.conf
+%{pfx}/usr/share/alsa/cards/VX222.conf
+%{pfx}/usr/share/alsa/cards/VXPocket440.conf
+%{pfx}/usr/share/alsa/cards/VXPocket.conf
+%{pfx}/usr/share/alsa/cards/YMF744.conf
+%{pfx}/usr/share/alsa/pcm
+%{pfx}/usr/share/alsa/pcm/center_lfe.conf
+%{pfx}/usr/share/alsa/pcm/default.conf
+%{pfx}/usr/share/alsa/pcm/dmix.conf
+%{pfx}/usr/share/alsa/pcm/dpl.conf
+%{pfx}/usr/share/alsa/pcm/dsnoop.conf
+%{pfx}/usr/share/alsa/pcm/front.conf
+%{pfx}/usr/share/alsa/pcm/hdmi.conf
+%{pfx}/usr/share/alsa/pcm/iec958.conf
+%{pfx}/usr/share/alsa/pcm/modem.conf
+%{pfx}/usr/share/alsa/pcm/rear.conf
+%{pfx}/usr/share/alsa/pcm/side.conf
+%{pfx}/usr/share/alsa/pcm/surround40.conf
+%{pfx}/usr/share/alsa/pcm/surround41.conf
+%{pfx}/usr/share/alsa/pcm/surround50.conf
+%{pfx}/usr/share/alsa/pcm/surround51.conf
+%{pfx}/usr/share/alsa/pcm/surround71.conf
+%{pfx}/usr/share/alsa/smixer.conf
+%{pfx}/usr/share/alsa/sndo-mixer.alisp
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/alsa-utils/alsa-utils.spec ltib/dist/lfs-5.1/alsa-utils/alsa-utils.spec
--- ltib.reference/dist/lfs-5.1/alsa-utils/alsa-utils.spec
+++ ltib/dist/lfs-5.1/alsa-utils/alsa-utils.spec
@@ -13,6 +13,20 @@
 #Patch2          : alsa-utils-1.0.11rc2-ldl.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
 
 %Description
 %{summary}
@@ -21,34 +35,70 @@
 #   (see linux/include/sound/version.h)
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 #%patch1 -p1
 #%patch2 -p1
 
 %Build
-if [ -n "$UCLIBC" ]
-then
-    config_opts='gt_cv_func_gnugettext1_libintl=no'
-fi
-if [ "$GNUTARCH" = m68knommu ]
-then
-eval $config_opts \
-./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} -C --disable-shared
+export LC_ALL
+LC_ALL=C
+
+test -n "$UCLIBC" && config_opts='gt_cv_func_gnugettext1_libintl=no'
+if [ "$GNUTARCH" = m68knommu ]; then
+    eval $config_opts \
+        ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} -C --disable-shared
 else
-eval $config_opts \
-./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} -C --disable-xmlto --with-curses=ncurses
+    eval $config_opts \
+        ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} -C --disable-xmlto --with-curses=ncurses
 fi
-make
+make -j$(nproc)
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
 
 %Clean
-rm -rf $RPM_BUILD_ROOT
+export LC_ALL
+LC_ALL=C
 
+rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/aconnect
+%{pfx}/usr/bin/alsaloop
+%{pfx}/usr/bin/alsamixer
+%{pfx}/usr/bin/alsaucm
+%{pfx}/usr/bin/amidi
+%{pfx}/usr/bin/amixer
+%{pfx}/usr/bin/aplay
+%{pfx}/usr/bin/aplaymidi
+%{pfx}/usr/bin/arecord
+%{pfx}/usr/bin/arecordmidi
+%{pfx}/usr/bin/aseqdump
+%{pfx}/usr/bin/aseqnet
+%{pfx}/usr/bin/iecset
+%{pfx}/usr/bin/speaker-test
+%{pfx}/usr/sbin/alsaconf
+%{pfx}/usr/sbin/alsactl
+%{pfx}/usr/share/alsa
+%{pfx}/usr/share/alsa/init
+%{pfx}/usr/share/alsa/init/00main
+%{pfx}/usr/share/alsa/init/default
+%{pfx}/usr/share/alsa/init/hda
+%{pfx}/usr/share/alsa/init/help
+%{pfx}/usr/share/alsa/init/info
+%{pfx}/usr/share/alsa/init/test
+%{pfx}/usr/share/alsa/speaker-test
+%{pfx}/usr/share/alsa/speaker-test/sample_map.csv
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/base_libs/base_libs.spec ltib/dist/lfs-5.1/base_libs/base_libs.spec
--- ltib.reference/dist/lfs-5.1/base_libs/base_libs.spec
+++ ltib/dist/lfs-5.1/base_libs/base_libs.spec
@@ -11,6 +11,19 @@
 Group           : System Environment/Libraries
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed base_libs for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+%Description rfs
+base_libs package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
@@ -18,6 +31,9 @@
 %Prep
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 cat <<TXT
 PKG_LIBC_WANT_SHARED_LIBS   : $PKG_LIBC_WANT_SHARED_LIBS
 PKG_LIBC_WANT_CRT_FILES     : $PKG_LIBC_WANT_CRT_FILES
@@ -35,7 +51,7 @@
 # strip "bin/"
 set +e
 ${TOOLCHAIN_PREFIX}gcc -v 2>&1 | grep -q "prefix=/usr"
-if (( $? ))
+if test $? -ne 0
 then
 TC_PREFIX="`which ${TOOLCHAIN_PREFIX}gcc | perl -p -e 's,/bin/'${TOOLCHAIN_PREFIX}'gcc,,'`"
 else
@@ -45,6 +61,9 @@
 
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 X_DIR=`echo $TOOLCHAIN_PREFIX | sed -e 's,-$,,'`
 
@@ -53,7 +72,7 @@
 # strip "bin/"
 set +e
 ${TOOLCHAIN_PREFIX}gcc -v 2>&1 | grep -q "prefix=/usr"
-if (( $? ))
+if test $? -ne 0
 then
 TC_PREFIX="`which ${TOOLCHAIN_PREFIX}gcc | perl -p -e 's,/bin/'${TOOLCHAIN_PREFIX}'gcc,,'`"
 SYSROOT_TC="no"
@@ -122,12 +141,12 @@
     #       is a symbolic link to lib! - Stevep
     if [ "${TC_TYPE}" != "UCLIBC" ]
     then
-        cp -dp $SHARED_LIBS_DIR/../usr/lib/*.so* $RPM_BUILD_ROOT/%{pfx}/usr/lib/
+        cp -dp $SHARED_LIBS_DIR/../usr/lib/*.so* $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
     fi
     rm -f $RPM_BUILD_ROOT/%{pfx}/lib/libstdc++*.so*
-    rm -f $RPM_BUILD_ROOT/%{pfx}/usr/lib/libstdc++*.so*
+    rm -f $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libstdc++*.so*
     rm -f $RPM_BUILD_ROOT/%{pfx}/lib/libgcc*.so*
-    rm -f $RPM_BUILD_ROOT/%{pfx}/usr/lib/libgcc*.so*
+    rm -f $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libgcc*.so*
 
     # Only needed if gcc native is selected.
     #
@@ -157,9 +176,9 @@
         do
             if [ "$TC_TYPE" = "XTOOL" ]
             then
-                cp -dpf $TC_PREFIX/$X_DIR/$i/bin/${file} $RPM_BUILD_ROOT/%{pfx}/usr/bin
+                cp -dpf $TC_PREFIX/$X_DIR/$i/bin/${file} $RPM_BUILD_ROOT/%{pfx}%{_prefix}/bin
             else
-                cp -dpf $TC_PREFIX/$X_DIR/$i/usr/bin/${file} $RPM_BUILD_ROOT/%{pfx}/usr/bin
+                cp -dpf $TC_PREFIX/$X_DIR/$i/usr/bin/${file} $RPM_BUILD_ROOT/%{pfx}%{_prefix}/bin
             fi
         done
         for file in ldconfig sln
@@ -170,54 +189,54 @@
         do
             if [ "$TC_TYPE" = "XTOOL" ]
             then
-                cp -dpf $TC_PREFIX/$X_DIR/$i/sbin/${file} $RPM_BUILD_ROOT/%{pfx}/usr/sbin
+                cp -dpf $TC_PREFIX/$X_DIR/$i/sbin/${file} $RPM_BUILD_ROOT/%{pfx}%{_prefix}/sbin
             else
-                cp -dpf $TC_PREFIX/$X_DIR/$i/usr/sbin/${file} $RPM_BUILD_ROOT/%{pfx}/usr/sbin
+                cp -dpf $TC_PREFIX/$X_DIR/$i/usr/sbin/${file} $RPM_BUILD_ROOT/%{pfx}%{_prefix}/sbin
             fi
         done
     else
-        cp $TC_PREFIX/$X_DIR/$i/target_utils/ldd $RPM_BUILD_ROOT/%{pfx}/usr/bin
+        cp $TC_PREFIX/$X_DIR/$i/target_utils/ldd $RPM_BUILD_ROOT/%{pfx}%{_prefix}/bin
     fi
     set -e
 fi
 
 if [ -n "$PKG_LIBC_WANT_CRT_FILES" ]
 then 
-    cp -dp $CRT_FILES_DIR/*crt*.o $RPM_BUILD_ROOT/%{pfx}/usr/lib/
+    cp -dp $CRT_FILES_DIR/*crt*.o $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
 fi
 
 if [ -n "$PKG_LIBC_WANT_HEADERS1" ]
 then
     if [ "$TC_TYPE" = "CSL" ]
     then 
-        cp -a $TC_PREFIX/$X_DIR/libc/usr/include $RPM_BUILD_ROOT/%{pfx}/usr
+        cp -a $TC_PREFIX/$X_DIR/libc/usr/include $RPM_BUILD_ROOT/%{pfx}%{_prefix}
     elif [ "$TC_TYPE" = "EGLIBC" ]
     then
-        cp -a $TC_PREFIX/$X_DIR/sysroot/usr/include $RPM_BUILD_ROOT/%{pfx}/usr
+        cp -a $TC_PREFIX/$X_DIR/sysroot/usr/include $RPM_BUILD_ROOT/%{pfx}%{_prefix}
     elif [ "$TC_TYPE" = "XTOOL-SYSROOT" ]
     then
-        cp -a $TC_PREFIX/$X_DIR/sys-root/usr/include $RPM_BUILD_ROOT/%{pfx}/usr
+        cp -a $TC_PREFIX/$X_DIR/sys-root/usr/include $RPM_BUILD_ROOT/%{pfx}%{_prefix}
     elif [ "${TC_TYPE}" = "UCLIBC-SYSROOT" ]
     then
-        cp -a ${TC_PREFIX}/usr/include ${RPM_BUILD_ROOT}/%{pfx}/usr
+        cp -a ${TC_PREFIX}/usr/include ${RPM_BUILD_ROOT}/%{pfx}%{_prefix}
     else
         for i in $TC_PREFIX/$X_DIR/include $TC_PREFIX/include
         do
             if [ -f $i/stdio.h ]
             then
-                cp -a $i $RPM_BUILD_ROOT/%{pfx}/usr
+                cp -a $i $RPM_BUILD_ROOT/%{pfx}%{_prefix}
                 break
             fi
         done
-        rm -rf $RPM_BUILD_ROOT/%{pfx}/usr/include/c++
+        rm -rf $RPM_BUILD_ROOT/%{pfx}%{_prefix}/include/c++
     fi
 fi
 
 if [ -n "$PKG_LIBC_WANT_STATIC_LIBS" ]
 then 
-    cp -dp $STATIC_LIBS_DIR/*.a $RPM_BUILD_ROOT/%{pfx}/usr/lib/
-    rm -f $RPM_BUILD_ROOT/%{pfx}/usr/lib/libstdc++*a*
-    rm -f $RPM_BUILD_ROOT/%{pfx}/usr/lib/libsupc++*a*
+    cp -dp $STATIC_LIBS_DIR/*.a $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
+    rm -f $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libstdc++*a*
+    rm -f $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libsupc++*a*
 fi
 
 if [ -n "$PKG_LIBC_WANT_C_LOCALES" ]
@@ -225,7 +244,7 @@
     set +e
     if [ -n "$UCLIBC" ]
     then
-        cp -a $TC_PREFIX/usr/share/locale $RPM_BUILD_ROOT/%{pfx}/usr/share
+        cp -a $TC_PREFIX/usr/share/locale $RPM_BUILD_ROOT/%{pfx}%{_prefix}/share
     else
         if [ "$TC_TYPE" = "CSL" ]
         then
@@ -241,16 +260,16 @@
             i=
         fi
 
-        cp -a $TC_PREFIX/$X_DIR/$i/lib/locale $RPM_BUILD_ROOT/%{pfx}/usr/lib
-        cp -a $TC_PREFIX/$X_DIR/$i/info $RPM_BUILD_ROOT/%{pfx}/usr
-        cp -a $TC_PREFIX/$X_DIR/$i/share/locale $RPM_BUILD_ROOT/%{pfx}/usr/share
-        cp -a $TC_PREFIX/$X_DIR/$i/share/i18n $RPM_BUILD_ROOT/%{pfx}/usr/share
-        cp -a $TC_PREFIX/$X_DIR/$i/share/zoneinfo $RPM_BUILD_ROOT/%{pfx}/usr/share
+        cp -a $TC_PREFIX/$X_DIR/$i/lib/locale $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib
+        cp -a $TC_PREFIX/$X_DIR/$i/info $RPM_BUILD_ROOT/%{pfx}%{_prefix}
+        cp -a $TC_PREFIX/$X_DIR/$i/share/locale $RPM_BUILD_ROOT/%{pfx}%{_prefix}/share
+        cp -a $TC_PREFIX/$X_DIR/$i/share/i18n $RPM_BUILD_ROOT/%{pfx}%{_prefix}/share
+        cp -a $TC_PREFIX/$X_DIR/$i/share/zoneinfo $RPM_BUILD_ROOT/%{pfx}%{_prefix}/share
         for j in tzselect locale localedef
         do
-            cp -a $TC_PREFIX/$X_DIR/$i/bin/$j $RPM_BUILD_ROOT/%{pfx}/usr/bin/
+            cp -a $TC_PREFIX/$X_DIR/$i/bin/$j $RPM_BUILD_ROOT/%{pfx}%{_prefix}/bin/
         done
-        cp -a $TC_PREFIX/$X_DIR/$i/$SLIBS/gconv $RPM_BUILD_ROOT/%{pfx}/usr/lib/
+        cp -a $TC_PREFIX/$X_DIR/$i/$SLIBS/gconv $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
     fi
     set -e
 fi
@@ -277,13 +296,13 @@
     else
         i= 
     fi
-    cp -a $TC_PREFIX/$i/include/c++ $RPM_BUILD_ROOT/%{pfx}/usr/include
+    cp -a $TC_PREFIX/$i/include/c++ $RPM_BUILD_ROOT/%{pfx}%{_prefix}/include
 fi
 
 if [ -n "$PKG_CXX_WANT_STATIC_LIBS" ]
 then 
-    cp -dp $CPP_LIB_DIR/libstdc++*.a $RPM_BUILD_ROOT/%{pfx}/usr/lib/
-    cp -dp $CPPSUP_LIB_DIR/libsupc++*.a $RPM_BUILD_ROOT/%{pfx}/usr/lib/
+    cp -dp $CPP_LIB_DIR/libstdc++*.a $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
+    cp -dp $CPPSUP_LIB_DIR/libsupc++*.a $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/
 fi
 
 if [ -n "$PKG_GCC_WANT_LIBGCC_SHARED" ]
@@ -296,7 +315,7 @@
 
 # remove absolute paths from text search files (if they exist)
 perl -w -e '
-    @ARGV = grep { `file $_` =~ m,ASCII C program text, } @ARGV;
+    @ARGV = grep { `file $_` =~ m,ASCII\s+.*text, } @ARGV;
     exit(0) unless @ARGV;
     $^I = ".bak";
     while(<>) {
@@ -305,14 +324,14 @@
     }
     ' $RPM_BUILD_ROOT/%{pfx}/lib/libc.so \
       $RPM_BUILD_ROOT/%{pfx}/lib/libpthread.so \
-      $RPM_BUILD_ROOT/%{pfx}/usr/lib/libc.so \
-      $RPM_BUILD_ROOT/%{pfx}/usr/lib/libpthread.so
+      $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libc.so \
+      $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libpthread.so
 
 cd $RPM_BUILD_ROOT/%{pfx}
 # this is necessary to avoid annoying warnings from ldd about no execute
 # permissions for some malformed uClibc toolchains
 find $RPM_BUILD_ROOT/%{pfx}/lib     | xargs chmod 755
-find $RPM_BUILD_ROOT/%{pfx}/usr/lib | xargs chmod 755
+find $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib | xargs chmod 755
 
 # relocate all symlink .so (linker files) to usr/lib
 cd lib
@@ -333,9 +352,21 @@
    }
 ' 
 
+cd %{_builddir}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( -not -type d \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,%{pfx}%{_includedir}, d;
+    \,\.bak$, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/bison/bison.spec ltib/dist/lfs-5.1/bison/bison.spec
--- ltib.reference/dist/lfs-5.1/bison/bison.spec
+++ ltib/dist/lfs-5.1/bison/bison.spec
@@ -20,7 +20,7 @@
 
 %Build
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --mandir=%{_mandir}
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 %Install
 rm -rf $RPM_BUILD_ROOT
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/boa/boa.spec ltib/dist/lfs-5.1/boa/boa.spec
--- ltib.reference/dist/lfs-5.1/boa/boa.spec
+++ ltib/dist/lfs-5.1/boa/boa.spec
@@ -12,47 +12,82 @@
 Group           : System/Servers
 Source          : %{name}-%{version}.tar.gz
 Patch1          : boa-0.94.14rc21-nommu.patch
+Patch2          : boa-0.94.14rc21-defines.patch
+Patch3          : boa-0.94.14rc21-1416842658.patch
+Patch4          : boa-0.94.14rc21-use_cgi_for_index.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Servers
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
-This is the uclinux version extracted from uClinux-dist-test-20050906.tar.gz
-at http://www.uclinux.org/pub/uClinux/dist/
+This is the uclinux version extracted
+from uClinux-dist-test-20050906.tar.gz at
+http://www.uclinux.org/pub/uClinux/dist/
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1 
+%patch2 -p1
+%patch3 -p1 
+%patch4 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ac_cv_func_setvbuf_reversed=no \
 CFLAGS="-DSERVER_ROOT='\"/etc\"' -g -Os" \
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
-make
+make -j1
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{base}/etc/conf
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{base}/var/log/boa
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin
-install -m 755 src/boa $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin/
-install -m 755 src/boa_indexer $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin/
-install -m 644 examples/boa.conf $RPM_BUILD_ROOT/%{pfx}/%{base}/etc/conf/
-ln -s conf/boa.conf $RPM_BUILD_ROOT/%{pfx}/%{base}/etc/boa.conf
-ln -s boa $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin/boa_d
-perl -ni -e '
-    m,#ServerName,  &&  do { $_ = "ServerName localhost\n" } ;
-    m,^DocumentRoot, && do { $_ = "DocumentRoot /var/www/html\n" };
-    m,^DirectoryMaker, && do { $_ = "DirectoryMaker %{_prefix}/sbin/boa_indexer\n" };
-    m,^DefaultType, && do { $_ = "DefaultType text/html\n" };
-    m,^ScriptAlias, &&  do { $_ = "ScriptAlias /cgi-bin/ /var/www/cgi-bin/\n"};
-    print;
-    ' $RPM_BUILD_ROOT/%{pfx}/%{base}/etc/conf/boa.conf
+
+mkdir -p $RPM_BUILD_ROOT%{pfx}/%{base}/etc/conf
+mkdir -p $RPM_BUILD_ROOT%{pfx}/%{base}/var/log/boa
+mkdir -p $RPM_BUILD_ROOT%{pfx}/%{_prefix}/sbin
+install -m 755 src/boa $RPM_BUILD_ROOT%{pfx}/%{_prefix}/sbin/
+install -m 755 src/boa_indexer $RPM_BUILD_ROOT%{pfx}/%{_prefix}/sbin/
+ln -s conf/boa.conf $RPM_BUILD_ROOT%{pfx}/%{base}/etc/boa.conf
+ln -s boa $RPM_BUILD_ROOT%{pfx}/%{_prefix}/sbin/boa_d
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
+
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/etc/boa.conf
+%{pfx}/etc/conf
+%{pfx}/usr/sbin/boa
+%{pfx}/usr/sbin/boa_d
+%{pfx}/usr/sbin/boa_indexer
+%{pfx}/var/log/boa
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/boot_stream/boot_stream.spec ltib/dist/lfs-5.1/boot_stream/boot_stream.spec
--- ltib.reference/dist/lfs-5.1/boot_stream/boot_stream.spec
+++ ltib/dist/lfs-5.1/boot_stream/boot_stream.spec
@@ -8,39 +8,100 @@
 Vendor          : Freescale
 Packager        : Terry Lv
 Group           : Tools
-Source          : %{name}-%{version}-%{release}.tar.gz
+Source          : %{name}-11.01.00.tar.gz
+Source1         : updater_ivt.sb
+Patch1          : imx-bootlets-src-11.01.00-1315841439.patch
+Patch2          : imx-bootlets-src-11.01.00-1332172356.patch
+Patch3          : imx-bootlets-src-11.01.00-1337962710.patch
+Patch4          : imx-bootlets-src-11.01.00-1412693346.patch
+Patch5          : imx-bootlets-src-11.01.00-1418123773.patch
+Patch6          : imx-bootlets-src-11.01.00-1418123774.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
 
+
+%Package mfg
+Summary         : Trimmed imx-bootlets-src for manufacturing tool requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Tools
+AutoReqProv     : no
+
+%Description mfg
+imx-bootlets-src package contents restricted to the files
+needed to program the target.
+
+
+# patch1 imx-bootlets-src-11.01.00-1315841439.patch: modify the boot arguments in order to boot from flash instead of memory card.
+# patch2 imx-bootlets-src-11.01.00-1332172356.patch: modify power prep to not use battery for boot but to keep battery values updated in the battmonitor register.
+# patch3 : modifies boot_stream preparation to write results in a diffrent directory based on the current selected kernel
+# patch4: modifies boot_stream to drive the GPMI nand flash by ref_gpmi and not ref_xtal
 %Description
 %{summary}
 
 %Prep
-%setup -n %{name}-%{version}-%{release}
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{name}-11.01.00
+%patch1 -p1
+%patch2 -p1
+%patch3 -p1
+%patch4 -p1
+%patch5 -p1
+%patch6 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 export CMDLINE1="$PKG_BOOT_STREAM_CMDLINE1"
 export CMDLINE2="$PKG_BOOT_STREAM_CMDLINE2"
 export CMDLINE3="$PKG_BOOT_STREAM_CMDLINE3"
 export CMDLINE4="$PKG_BOOT_STREAM_CMDLINE4"
 
 PLATFORMSHORTNAME=`echo $PLATFORM | sed "s,imx\([0-9]*\).*,MX\1,g"`
-if [ "x$PLATFORMSHORTNAME" = "xMX233" ]
-then
+if test "$PLATFORMSHORTNAME" = "MX233"; then
     make -j1 MEM_TYPE="${PKG_BOOT_STREAM_MEMTYPE_PRECONFIG}"
 else
     make -j1 MEM_TYPE="${PKG_BOOT_STREAM_MEMTYPE_PRECONFIG}" BOARD=iMX28_EVK
 fi
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/boot
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}/boot
 
+install -m 644 %{SOURCE1} $RPM_BUILD_ROOT/%{pfx}/boot
+
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make clean
 
+
 %Files
 %defattr(-,root,root)
-%{pfx}/*
+%{pfx}/boot/boot_prep
+%{pfx}/boot/create_updater.sh
+%{pfx}/boot/imx28_ivt_linux.sb
+%{pfx}/boot/imx28_ivt_uboot.sb
+%{pfx}/boot/imx28_linux.sb
+%{pfx}/boot/imx28_uboot.sb
+%{pfx}/boot/linux_prep
+%{pfx}/boot/power_prep
+%{pfx}/boot/updater.bd
+%{pfx}/boot/updater_ivt.bd
+%{pfx}/boot/updater_ivt.sb
+
+%Files mfg
+%defattr(-,root,root)
+%{pfx}/boot/imx28_ivt_linux.sb
+%{pfx}/boot/updater_ivt.sb
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/busybox/busybox.spec ltib/dist/lfs-5.1/busybox/busybox.spec
--- ltib.reference/dist/lfs-5.1/busybox/busybox.spec
+++ ltib/dist/lfs-5.1/busybox/busybox.spec
@@ -3,24 +3,46 @@
 
 Summary         : A small executable that replaces many UNIX utilities
 Name            : busybox
-Version         : 1.20.2
+Version         : 1.15.0
 Release         : 1
 License         : GPL
 URL             : http://www.busybox.net/
 Vendor          : Freescale
 Packager        : Steve Papacharalambous/Stuart Hughes
 Group           : System Environment/Shells
-Source          : %{name}-%{version}.tar.bz2
+Source          : %{name}-%{version}.tar.gz
+Patch1          : %{name}-%{version}-getty-nobaud-1.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed busybox for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Shells
+AutoReqProv     : no
+
+%Description rfs
+busybox package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
+%patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 PKG_BUSYBOX_PRECONFIG=${PKG_BUSYBOX_PRECONFIG:-busybox.config}
 if [ -f "$PLATFORM_PATH/${PKG_BUSYBOX_PRECONFIG}" ]
 then
@@ -45,6 +67,9 @@
 make HOSTCC="$BUILDCC" $MAKE_EXTRA
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 install -d $RPM_BUILD_ROOT/%{pfx}/%{base}/bin
 make HOSTCC="$BUILDCC" CONFIG_PREFIX=$RPM_BUILD_ROOT/%{pfx}/%{base} install
@@ -71,10 +96,21 @@
 EOF
 chmod 644 $RPM_BUILD_ROOT/%{pfx}/%{base}/etc/busybox.conf
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%attr(4755,root,root) %{pfx}/%{base}/bin/busybox
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/bzip2/bzip2.spec ltib/dist/lfs-5.1/bzip2/bzip2.spec
--- ltib.reference/dist/lfs-5.1/bzip2/bzip2.spec
+++ ltib/dist/lfs-5.1/bzip2/bzip2.spec
@@ -15,31 +15,65 @@
 Patch2          : %{name}-%{version}-armv7a-cross-compile-fix.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed bzip2 for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+bzip2 package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch0 -p1
 %patch1 -p1
 %patch2 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make -f Makefile-libbz2_so
 make clean
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install PREFIX=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
+make install PREFIX=$RPM_BUILD_ROOT%{pfx}%{_prefix}
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/share/man, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
-
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/can-festival/can-festival.spec ltib/dist/lfs-5.1/can-festival/can-festival.spec
--- ltib.reference/dist/lfs-5.1/can-festival/can-festival.spec
+++ ltib/dist/lfs-5.1/can-festival/can-festival.spec
@@ -0,0 +1,99 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : CANopen stack implementation
+Name            : can-festival
+Version         : 3.0
+Release         : rc3
+License         : LGPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/System
+URL             : http://www.canfestival.org/
+Source          : CanFestival-%{version}-%{release}.tgz
+Patch0          : can-festival-build.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents trimmed to just the files
+needed at run time on the target.
+
+
+%description
+CANopen is a CAN based highter layer protocol. It defines some
+protocols to:
+- Configure a CAN network.
+- Transmit data to a specific node or in broadcast.
+- Administrate the network. For example detecting a not
+  responding node.
+
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -n CanFestival-%{version}-%{release}
+%patch0 -p1
+
+ROOTFS=${DEV_IMAGE} ./configure \
+	--target=unix \
+	--arch=${LINTARCH} \
+	--timers=xeno \
+	--prefix=/usr \
+	--can=socket
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+make \
+	PROG_CFLAGS=-I${DEV_IMAGE}/usr/xenomai/include \
+	EXE_CFLAGS_PATH="-L${DEV_IMAGE}/usr/xenomai/lib -lxenomai"
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make \
+	PROG_CFLAGS=-I${DEV_IMAGE}/usr/xenomai/include \
+	EXE_CFLAGS_PATH="-L${DEV_IMAGE}/usr/xenomai/lib -lxenomai" \
+	PREFIX=$RPM_BUILD_ROOT%{pfx}/usr \
+	install
+
+### %define  LIBPATH ${RPM_BUILD_ROOT}%{_elinos_install_dir}/%{_elinos_conftarget}/lib
+### %define  BINPATH ${RPM_BUILD_ROOT}%{_elinos_target_dir}/%{_elinos_libc}/default/usr/bin
+### 
+### install -d -m 755 %{LIBPATH}
+### install -d -m 755 %{BINPATH}
+### 
+### make -C CanOpen/CanOpenMain -f MakefileLinux LIBPATH=%{LIBPATH} install
+### make -C CanOpen/CanOpenDriverLinux -f MakefileLinux LIBPATH=%{LIBPATH} install
+### make -C CanOpen/CanOpenDriverLinuxPeak -f MakefileLinux LIBPATH=%{LIBPATH} install
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/lib/libcanfestival_can_socket.so
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/cantest/cantest.spec ltib/dist/lfs-5.1/cantest/cantest.spec
--- ltib.reference/dist/lfs-5.1/cantest/cantest.spec
+++ ltib/dist/lfs-5.1/cantest/cantest.spec
@@ -9,18 +9,35 @@
 Packager        : Chen Hongjun
 Group           : Applications/System
 Source          : %{name}-%{version}.tar.gz
+URL             : http://svn.berlios.de/svnroot/repos/socketcan/trunk/can-utils/
 Patch0		: cantest-1.0.patch
 Patch1          : cantest-1.0-uClinux.patch
 Patch2          : cantest-1.0-cansend-1.patch
 Patch3          : cantest-1.0-cansend-debug.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
-URL             : http://svn.berlios.de/svnroot/repos/socketcan/trunk/can-utils/
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed cantest for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+cantest package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n %{name}-%{version}
 %patch0 -p1
 %patch1 -p1
@@ -30,16 +47,34 @@
 fi
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/usr/bin
-cp cantest $RPM_BUILD_ROOT/%{pfx}/usr/bin
+mkdir -p $RPM_BUILD_ROOT%{pfx}%{_prefix}/bin
+cp cantest $RPM_BUILD_ROOT%{pfx}%{_prefix}/bin
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/cgic_work/cgic_work.spec ltib/dist/lfs-5.1/cgic_work/cgic_work.spec
--- ltib.reference/dist/lfs-5.1/cgic_work/cgic_work.spec
+++ ltib/dist/lfs-5.1/cgic_work/cgic_work.spec
@@ -0,0 +1,116 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Support for web-based reporting and configuration
+Name            : cgic_work
+Version         : 0.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Servers
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just the run-times needed in the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Servers
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%Description
+%{summary}
+
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace ../../../../projects/%{name}/ ./
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+export MECT_RFSDIR
+MECT_RFSDIR=$DEV_IMAGE
+
+test -r Makefile && make clean
+make -j1
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make -j1 INSTALL_ROOT=$RPM_BUILD_ROOT%{pfx} install
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/share/www/alarms_manager.cgi
+%{pfx}/usr/share/www/changepwd.cgi
+%{pfx}/usr/share/www/checkpwd.cgi
+%{pfx}/usr/share/www/config_manager.cgi
+%{pfx}/usr/share/www/date_time.cgi
+%{pfx}/usr/share/www/display.cgi
+%{pfx}/usr/share/www/display_csv.cgi
+%{pfx}/usr/share/www/display_setup.cgi
+%{pfx}/usr/share/www/extract
+%{pfx}/usr/share/www/factory_reset.cgi
+%{pfx}/usr/share/www/factory_reset_confirm.cgi
+%{pfx}/usr/share/www/filebrowser.cgi
+%{pfx}/usr/share/www/filesmanager.cgi
+%{pfx}/usr/share/www/formatsdcard.cgi
+%{pfx}/usr/share/www/getdatesinterval
+%{pfx}/usr/share/www/get_log.cgi
+%{pfx}/usr/share/www/get_trends.cgi
+%{pfx}/usr/share/www/index.cgi
+%{pfx}/usr/share/www/info.cgi
+%{pfx}/usr/share/www/lan_config.cgi
+%{pfx}/usr/share/www/lan_setup.cgi
+%{pfx}/usr/share/www/load.cgi
+%{pfx}/usr/share/www/login.cgi
+%{pfx}/usr/share/www/logout.cgi
+%{pfx}/usr/share/www/logs_extractor.cgi
+%{pfx}/usr/share/www/logs_filter.cgi
+%{pfx}/usr/share/www/logs_manager.cgi
+%{pfx}/usr/share/www/managepwd.cgi
+%{pfx}/usr/share/www/menu.cgi
+%{pfx}/usr/share/www/.passwd
+%{pfx}/usr/share/www/reboot.cgi
+%{pfx}/usr/share/www/recipes_manager.cgi
+%{pfx}/usr/share/www/reset_mass_storage.cgi
+%{pfx}/usr/share/www/reset_passwords.cgi
+%{pfx}/usr/share/www/select
+%{pfx}/usr/share/www/select-template.html
+%{pfx}/usr/share/www/style.css
+%{pfx}/usr/share/www/trend_manager.cgi
+%{pfx}/usr/share/www/underconstruction.cgi
+%{pfx}/usr/share/www/updateall.cgi
+%{pfx}/usr/share/www/updatetime.cgi
+%{pfx}/usr/share/www/upgrade.cgi
+%{pfx}/usr/share/www/upload.cgi
+%{pfx}/usr/share/www/webmi
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/cloner/cloner.spec ltib/dist/lfs-5.1/cloner/cloner.spec
--- ltib.reference/dist/lfs-5.1/cloner/cloner.spec
+++ ltib/dist/lfs-5.1/cloner/cloner.spec
@@ -0,0 +1,77 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+
+Summary         : Clone/restore MECT TPAC software
+Name            : cloner
+Version         : 3.3.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Tools
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Tools
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
+
+%Description
+Graphical stand-alone tool that allow to clone and restore
+all software and configuration of an i.MX28-based TPAC device.
+
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace --exclude .git ../../../../projects/%{name}/ ./
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+export VERSION='\"%{version}\"'
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx
+make
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+install -m 755 -D cloner $RPM_BUILD_ROOT%{pfx}/sbin/cloner
+install -m 644 -D excludes_localfs.lst $RPM_BUILD_ROOT%{pfx}/usr/share/cloner/excludes_localfs.lst
+install -m 644 -D excludes_rootfs.lst $RPM_BUILD_ROOT%{pfx}/usr/share/cloner/excludes_rootfs.lst
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/sbin/cloner
+%{pfx}/usr/share/cloner/excludes_localfs.lst
+%{pfx}/usr/share/cloner/excludes_rootfs.lst
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/dhcp/dhcp.spec ltib/dist/lfs-5.1/dhcp/dhcp.spec
--- ltib.reference/dist/lfs-5.1/dhcp/dhcp.spec
+++ ltib/dist/lfs-5.1/dhcp/dhcp.spec
@@ -10,36 +10,65 @@
 Packager        : John Faith
 Group           : Applications/Internet
 Source          : dhcp-3.0.3b1.tgz
+URL             : http://www.isc.org/sw/dhcp/
 Patch1          : dhcp-3.0.3b1-sip.patch
 Patch2          : dhcp-3.0.3b1-defaults.patch
 Patch3          : dhcp-3.0.3b1-types.patch
 Patch4          : dhcp-3.0.3b1-usesockets.patch
 Patch5          : dhcp-3.0.3b1-compat-with-linux-3.0.patch
+Patch6          : dhcp-3.0.3b1-fix_string_tests_script.patch
+Patch7          : dhcp-3.0.3b1-kernel_version_check_above_2.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
-URL             : http://www.isc.org/sw/dhcp/
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed dhcp for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+dhcp package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n %{name}-%{version}
 %patch1 -p1
 %patch2 -p1
 %patch3 -p1
 %patch4 -p1
 %patch5 -p1
+%patch6 -p1
+%patch7 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install prefix=$RPM_BUILD_ROOT/%{pfx}
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/share
-mv $RPM_BUILD_ROOT/%{pfx}/usr/man  $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/share
-chmod 755 $RPM_BUILD_ROOT/%{pfx}/%base/sbin/dhclient-script
+
+make install prefix=$RPM_BUILD_ROOT%{pfx}
+
+mkdir -p $RPM_BUILD_ROOT%{pfx}%{_prefix}/share
+mv $RPM_BUILD_ROOT%{pfx}%{_prefix}/man  $RPM_BUILD_ROOT%{pfx}%{_prefix}/share
+chmod 755 $RPM_BUILD_ROOT%{pfx}/%base/sbin/dhclient-script
 
 for i in %pfx/%base/etc/test %pfx/%base/etc/rc.d \
          %pfx/%base/sbin/S30dhclient %pfx/%_prefix/local
@@ -47,8 +76,7 @@
     rm -rf $RPM_BUILD_ROOT/$i
 done
 
-if [ -z "$PKG_DHCP_WANT_CLIENT" ]
-then
+if [ -z "$PKG_DHCP_WANT_CLIENT" ]; then
     for i in %pfx/%base/etc/dhclient.conf \
              %pfx/%base/var/state/dhcp/dhclient.leases \
              %pfx/%base/sbin/dhclient-script \
@@ -61,11 +89,11 @@
              %pfx/%_mandir/man8/dhclient-script.8 \
              %pfx/%_mandir/man8/dhclient.8
     do
-        rm -rf $RPM_BUILD_ROOT/$i
+        rm -rf $RPM_BUILD_ROOT$i
     done
 fi
-if [ -z "$PKG_DHCP_WANT_SERVER" ]
-then
+
+if [ -z "$PKG_DHCP_WANT_SERVER" ]; then
     for i in %pfx/%base/etc/dhcpd.conf \
              %pfx/%_bindir/omshell \
              %pfx/%_mandir/man1/omshell.1 \
@@ -82,14 +110,26 @@
              %pfx/%_sbindir/dhcrelay \
              %pfx/%base/var/state/dhcp/dhcpd.leases
      do
-        rm -rf $RPM_BUILD_ROOT/$i
+        rm -rf $RPM_BUILD_ROOT$i
      done
 fi
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/share/man, d;
+    \,^%{pfx}%{_sysconfdir}/dhclient.conf, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/dropbear/dropbear.spec ltib/dist/lfs-5.1/dropbear/dropbear.spec
--- ltib.reference/dist/lfs-5.1/dropbear/dropbear.spec
+++ ltib/dist/lfs-5.1/dropbear/dropbear.spec
@@ -2,61 +2,99 @@
 
 Summary         : Dropbear SSH server and client (embedded)
 Name            : dropbear
-Version         : 0.52
+Version         : 2016.73
 Release         : 1
 License         : MIT
 Vendor          : Freescale
 Packager        : Stuart Hughes
 Group           : Applications/Internet
-Source          : %{name}-%{version}.tar.gz
+Source          : %{name}-%{version}.tar.bz2
 Source1         : dropbear_hackable_rsa_host_key
+Source2         : dropbear_rsa_host_key
+Patch0          : dropbear-2016.73-max_packet_to_qt_creator_size.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed dropbear for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+dropbear package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
-%setup 
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%patch0 -p1
 
 %Build
-if [ "$PKG_DROPBEAR_WANT_URANDOM_DEV" = "y" ]
-then
-    perl -pi -e 's,^#define DROPBEAR_RANDOM_DEV.*,#define DROPBEAR_RANDOM_DEV "/dev/urandom",; ' options.h
-fi
-if [ "$PKG_DROPBEAR_WANT_NO_REV_DNS" = "y" ]
-then
-    perl -pi -e 's,^(#define DO_HOST_LOOKUP),//\1,; ' options.h
-fi
-if [ "$PKG_DROPBEAR_WANT_NO_X11FWD" = "y" ]
-then
-    perl -pi -e 's,^(#define ENABLE_X11FWD),//\1,; ' options.h
-fi
+export LC_ALL
+LC_ALL=C
+
+test "$PKG_DROPBEAR_WANT_URANDOM_DEV" = "y" && perl -pi -e 's,^#define DROPBEAR_RANDOM_DEV.*,#define DROPBEAR_RANDOM_DEV "/dev/urandom",; ' options.h
+
+test "$PKG_DROPBEAR_WANT_NO_REV_DNS" = "y" && perl -pi -e 's,^(#define DO_HOST_LOOKUP),//\1,; ' options.h
+
+test "$PKG_DROPBEAR_WANT_NO_X11FWD" = "y" && perl -pi -e 's,^(#define ENABLE_X11FWD),//\1,; ' options.h
 
 LD=gcc ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
 make PROGRAMS="dropbear dbclient dropbearkey dropbearconvert scp" MULTI=1 SCPPROGRESS=1
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-for i in bin sbin
-do
-    mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/$i
-done
+
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/etc/dropbear
-cp dropbearmulti $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin/
+for d in bin sbin; do
+    mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/$d
+done
+
+install -m755 dropbearmulti $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin
+
 ln -s %{_prefix}/sbin/dropbearmulti $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin/dropbear
-for i in dbclient dropbearconvert dropbearkey scp
-do
+for i in dbclient dropbearconvert dropbearkey scp ssh; do
     ln -s %{_prefix}/sbin/dropbearmulti $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/bin/$i
 done
-if [ "$PKG_DROPBEAR_WANT_HACKABLE_KEY" = "y" ]; then
-    mkdir -p $RPM_BUILD_ROOT/%{pfx}/etc/dropbear
-    cp %{SOURCE1} $RPM_BUILD_ROOT/%{pfx}/etc/dropbear/dropbear_rsa_host_key
-fi
+
+test "$PKG_DROPBEAR_WANT_HACKABLE_KEY" = "y" && install -m644 -D %{SOURCE1} $RPM_BUILD_ROOT/%{pfx}/etc/dropbear/dropbear_rsa_host_key
+
+# Set custom host key.
+install -m644 -D %{SOURCE2} $RPM_BUILD_ROOT%{pfx}/etc/dropbear/dropbear_rsa_host_key
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
+
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%dir %{pfx}/etc/dropbear
+%{pfx}/etc/dropbear/dropbear_rsa_host_key
+%{pfx}/usr/bin/dbclient
+%{pfx}/usr/bin/dropbearconvert
+%{pfx}/usr/bin/dropbearkey
+%{pfx}/usr/bin/scp
+%{pfx}/usr/bin/ssh
+%{pfx}/usr/sbin/dropbear
+%{pfx}/usr/sbin/dropbearmulti
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/e2fsprogs/e2fsprogs.spec ltib/dist/lfs-5.1/e2fsprogs/e2fsprogs.spec
--- ltib.reference/dist/lfs-5.1/e2fsprogs/e2fsprogs.spec
+++ ltib/dist/lfs-5.1/e2fsprogs/e2fsprogs.spec
@@ -13,25 +13,65 @@
 Patch1          : e2fsprogs-1.41.4-fix-lib-links.patch
 BuildRoot	: %{_tmppath}/%{name}
 Prefix		: %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed e2fsprogs for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+e2fsprogs package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 BUILD_CC=$BUILDCC ./configure --host=$CFGHOST --enable-elf-shlibs
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make DESTDIR=$RPM_BUILD_ROOT/%{pfx} install install-libs
+make DESTDIR=$RPM_BUILD_ROOT%{pfx} install install-libs
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/share/locale, d;
+    \,^%{pfx}%{_prefix}/share/info, d;
+    \,^%{pfx}%{_prefix}/share/man, d;
+    \,^%{pfx}%{_prefix}/lib/pkgconfig, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-, root, root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-, root, root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/elftosb/elftosb.spec ltib/dist/lfs-5.1/elftosb/elftosb.spec
--- ltib.reference/dist/lfs-5.1/elftosb/elftosb.spec
+++ ltib/dist/lfs-5.1/elftosb/elftosb.spec
@@ -9,6 +9,7 @@
 Packager        : Frank Li
 Group           : System Environment/Libraries
 Source          : %{name}-%{version}-%{release}.tar.gz
+Patch1		: elftosb-missing-lm.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
 Autoreq		: no
@@ -19,6 +20,7 @@
 
 %Prep
 %setup -n %{name}-%{version}-%{release}
+%patch1 -p1
 
 %Build
 make
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/expat/expat.spec ltib/dist/lfs-5.1/expat/expat.spec
--- ltib.reference/dist/lfs-5.1/expat/expat.spec
+++ ltib/dist/lfs-5.1/expat/expat.spec
@@ -14,30 +14,64 @@
 Patch2          : expat-1.95.8-man1dir.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed expat for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Publishing/XML
+AutoReqProv     : no
+
+%Description rfs
+expat package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch0 -p1
 %patch1 -p1
 %patch2 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --mandir=%{_mandir}
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install DESTDIR=$RPM_BUILD_ROOT/%{pfx} install
-rm $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
+make install DESTDIR=$RPM_BUILD_ROOT%{pfx} install
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/share/man, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/fake-provides/fake-provides.spec ltib/dist/lfs-5.1/fake-provides/fake-provides.spec
--- ltib.reference/dist/lfs-5.1/fake-provides/fake-provides.spec
+++ ltib/dist/lfs-5.1/fake-provides/fake-provides.spec
@@ -5,83 +5,93 @@
 %define __os_install_post %{nil}
 %define  pfx /opt/freescale/rootfs/%{_target_cpu}
 
-Name     : fake-provides
-Version  : 1.0
-Release  : 5
-Group    : Bootstrap
-Summary  : Fake provides to satisfy package dependancies
-License  : GPL
-Packager : Stuart Hughes, Steve Papacharalambous
-Vendor   : Freescale Corp
-Buildroot: /tmp/%{name}-%{version}
-Prefix   : %{pfx}
-
-Provides : /bin/sh
-Provides : /bin/bash
-Provides : /bin/csh
-Provides : /bin/tcsh
-Provides : /usr/bin/env
-Provides : /usr/bin/perl
-Provides : /usr/local/bin/perl
-Provides : libgcc_s.so.1
-Provides : libgcc_s.so.1(GCC_3.0)
-Provides : libgcc_s.so.1(GLIBC_2.0)
+Name            : fake-provides
+Version         : 1.0
+Release         : 5
+Group           : Bootstrap
+Summary         : Fake provides to satisfy package dependancies
+License         : GPL
+Packager        : Stuart Hughes, Steve Papacharalambous
+Vendor          : Freescale Corp
+Buildroot       : /tmp/%{name}-%{version}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+Provides        : /bin/sh
+Provides        : /bin/bash
+Provides        : /bin/csh
+Provides        : /bin/tcsh
+Provides        : /usr/bin/env
+Provides        : /usr/bin/perl
+Provides        : /usr/local/bin/perl
+Provides        : libgcc_s.so.1
+Provides        : libgcc_s.so.1(GCC_3.0)
+Provides        : libgcc_s.so.1(GLIBC_2.0)
 %ifarch ppc ppc64
-Provides : linux-vdso32.so.1
+Provides        : linux-vdso32.so.1
 %endif
 %ifarch ppc64
-Provides : linux-vdso64.so.1
+Provides        : linux-vdso64.so.1
 %endif
-Provides : /bin/gawk
-Provides : /usr/bin/nawk
-Provides : /usr/bin/awk
-Provides : /usr/bin/bash
-Provides : perl 5.8.0
-Provides : perl(Getopt::Long)
-Provides : perl(Getopt::Std)
-Provides : perl(constant)
-Provides : perl(getopts.pl)
-Provides : perl(strict)
-Provides : perl(vars)
-Provides : perl(Carp)
-Provides : perl(Cwd)
-Provides : perl(Data::Dumper)
-Provides : perl(DynaLoader)
-Provides : perl(Exporter)
-Provides : perl(File::Basename)
-Provides : perl(File::Compare)
-Provides : perl(File::Copy)
-Provides : perl(File::Find)
-Provides : perl(File::Spec)
-Provides : perl(File::stat)
-Provides : perl(IO::File)
-Provides : perl(POSIX)
-Provides : perl(Text::ParseWords)
-Provides : libstdc++.so.5
-Provides : libstdc++.so.5(CXXABI_1.2)
-Provides : libstdc++.so.5(GLIBCPP_3.2)
-Provides : libstdc++.so.5(GLIBCPP_3.2.1)
-Provides : /bin/rm
-Provides : /sbin/ldconfig
-Provides : /sbin/chkconfig
-Provides : linux-gate.so.1
+Provides        : /bin/gawk
+Provides        : /usr/bin/nawk
+Provides        : /usr/bin/awk
+Provides        : /usr/bin/bash
+Provides        : perl 5.8.0
+Provides        : perl(Getopt::Long)
+Provides        : perl(Getopt::Std)
+Provides        : perl(constant)
+Provides        : perl(getopts.pl)
+Provides        : perl(strict)
+Provides        : perl(vars)
+Provides        : perl(Carp)
+Provides        : perl(Cwd)
+Provides        : perl(Data::Dumper)
+Provides        : perl(DynaLoader)
+Provides        : perl(Exporter)
+Provides        : perl(File::Basename)
+Provides        : perl(File::Compare)
+Provides        : perl(File::Copy)
+Provides        : perl(File::Find)
+Provides        : perl(File::Spec)
+Provides        : perl(File::stat)
+Provides        : perl(IO::File)
+Provides        : perl(POSIX)
+Provides        : perl(Text::ParseWords)
+Provides        : libstdc++.so.5
+Provides        : libstdc++.so.5(CXXABI_1.2)
+Provides        : libstdc++.so.5(GLIBCPP_3.2)
+Provides        : libstdc++.so.5(GLIBCPP_3.2.1)
+Provides        : /bin/rm
+Provides        : /sbin/ldconfig
+Provides        : /sbin/chkconfig
+Provides        : linux-gate.so.1
 
 %Description
-
 These are horrible hacks to take care of the fact that some
 packages do indeed depend directly on some things outside the
 root file system.  This is unavoidable unless we change the packages.
 
-
 %Prep
+export LC_ALL
+LC_ALL=C
+
 
 %Build
+export LC_ALL
+LC_ALL=C
+
+
+%Install
+export LC_ALL
+LC_ALL=C
 
-%install
 rm -rf $RPM_BUILD_ROOT
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
-
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/fontconfig/fontconfig.spec ltib/dist/lfs-5.1/fontconfig/fontconfig.spec
--- ltib.reference/dist/lfs-5.1/fontconfig/fontconfig.spec
+++ ltib/dist/lfs-5.1/fontconfig/fontconfig.spec
@@ -10,27 +10,53 @@
 Group           : System Environment/Libraries
 Source          : %{name}-%{version}.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
-Prefix		    : %{pfx}
+Prefix		: %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed fontconfig for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+fontconfig package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup 
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 # we don't have docbook-utils in the distribution
 ac_cv_prog_HASDOCBOOK=no \
 ac_cv_prog_CC_FOR_BUILD="${BUILDCC}" \
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} \
             --with-arch=$GNUTARCH --sysconfdir=%{_sysconfdir} \
-            --with-freetype-config="$DEV_IMAGE/usr/bin/freetype-config --prefix=$DEV_IMAGE/usr"
+            --with-freetype-config="$DEV_IMAGE%{_prefix}/bin/freetype-config --prefix=$DEV_IMAGE%{_prefix}"
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install DESTDIR=$RPM_BUILD_ROOT/%{pfx} 
-rm -rf $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
+make install DESTDIR=$RPM_BUILD_ROOT%{pfx} 
+
+rm -rf $RPM_BUILD_ROOT%{pfx}%{_prefix}/lib/*.la
+rm -rf $RPM_BUILD_ROOT%{pfx}%{_prefix}/share/doc
+rm -rf $RPM_BUILD_ROOT%{pfx}%{_prefix}/lib/pkgconfig
 
 perl -pi -e 's,^</fontconfig>,
 <dir>%{_prefix}/X11R6/lib/X11/fonts/TTF</dir>
@@ -38,13 +64,25 @@
 <dir>%{_prefix}/X11R6/lib/X11/fonts/truetype</dir>
 </fontconfig>
 ,;
-        ' $RPM_BUILD_ROOT/%{pfx}/%{_sysconfdir}/fonts/local.conf
+        ' $RPM_BUILD_ROOT%{pfx}%{_sysconfdir}/fonts/local.conf
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/share/man, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/freetype/freetype.spec ltib/dist/lfs-5.1/freetype/freetype.spec
--- ltib.reference/dist/lfs-5.1/freetype/freetype.spec
+++ ltib/dist/lfs-5.1/freetype/freetype.spec
@@ -12,29 +12,63 @@
 Patch1          : proper-armel-asm-declaration.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed freetype for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+freetype package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 export CC_BUILD="$BUILDCC"
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
 make 
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make DESTDIR=$RPM_BUILD_ROOT/%{pfx} install
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_includedir}, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/git/git.spec ltib/dist/lfs-5.1/git/git.spec
--- ltib.reference/dist/lfs-5.1/git/git.spec
+++ ltib/dist/lfs-5.1/git/git.spec
@@ -27,7 +27,7 @@
 config_opts='ac_cv_c_c99_format=yes ac_cv_fread_reads_directories=no ac_cv_snprintf_returns_bogus=no' 
 eval $config_opts \
 ./configure  --prefix=%{_prefix} --host=$CFGHOST
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 
 %Install
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/glib2/glib2.spec ltib/dist/lfs-5.1/glib2/glib2.spec
--- ltib.reference/dist/lfs-5.1/glib2/glib2.spec
+++ ltib/dist/lfs-5.1/glib2/glib2.spec
@@ -1,47 +1,82 @@
 %define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define archname glib
 
 Summary         : A library of functions used by GDK, GTK+, and many applications
 Name            : glib2
-Version         : 2.22.1
+Version         : 2.18.1
 Release         : 1
 License         : LGPL
 Vendor          : Freescale
 Packager        : Stuart Hughes/Kurt Mahan
 Group           : System Environment/Libraries
-Source          : glib-%{version}.tar.bz2
-Patch1          : glib2-2.12.11-relink.patch
+Source          : %{archname}-%{version}.tar.bz2
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed glib2 for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+glib2 package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
-%setup -n glib-%{version}
-#%patch1 -p1
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{archname}-%{version}
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 # prevent configure from trying to compile and
 # run test binaries for the target.
 glib_cv_stack_grows=no \
 glib_cv_uscore=no \
 ac_cv_func_posix_getpwuid_r=yes \
 ac_cv_func_posix_getgrgid_r=yes \
-glib_cv_long_long_format=ll \
-ac_cv_func_printf_unix98=yes \
-ac_cv_func_vsnprintf_c99=yes \
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-find $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib -name "*.la" | xargs rm -f
+make install DESTDIR=$RPM_BUILD_ROOT%{pfx}
+
+cd %{_builddir}/%{archname}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_datadir}/gtk-doc, d;
+    \,^%{pfx}%{_datadir}/locale, d;
+    \,^%{pfx}%{_mandir}, d;
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_libdir}/glib-2.0, d;
+    \,^%{pfx}%{_includedir}, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/hotplug/hotplug.spec ltib/dist/lfs-5.1/hotplug/hotplug.spec
--- ltib.reference/dist/lfs-5.1/hotplug/hotplug.spec
+++ ltib/dist/lfs-5.1/hotplug/hotplug.spec
@@ -13,26 +13,60 @@
 Patch2          : hotplug-2004_03_29-dash.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed hotplug for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Kernel
+AutoReqProv     : no
+
+%Description rfs
+hotplug package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 %patch2 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install prefix=$RPM_BUILD_ROOT/%{pfx}
+make install prefix=$RPM_BUILD_ROOT%{pfx}
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_mandir}, d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%attr(755,root,root)  %{pfx}/var/run/usb
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/iproute/iproute.spec ltib/dist/lfs-5.1/iproute/iproute.spec
--- ltib.reference/dist/lfs-5.1/iproute/iproute.spec
+++ ltib/dist/lfs-5.1/iproute/iproute.spec
@@ -1,18 +1,37 @@
 %define base %(echo %{_prefix} | sed -e s,/usr.*$,,)
 %define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define verrel 050330
 
 Summary         : Advanced IP routing and network device configuration tools
 Name            : iproute
-Version         : 2.6.38
+Version         : 2.6.37
 Release         : 1
 License         : GPL
 Vendor          : Freescale
 Packager        : Jaksa Djordjevic, Stuart Hughes
 Group           : Applications/System
-Source          : %{name}2-%{version}.tar.bz2
-Patch0          : iproute2-do-not-build-arpd.patch
+Source          : %{name}2-%{version}-%{verrel}.tar.bz2
+Patch0          : iproute-2.6.11-socket_h_warning.patch
+Patch1          : iproute2-paretonormal-overflow.patch
+Patch2          : iproute-2.6.37-1317825720.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+# iproute-2.6.37-1317825720.patch : exclude arpd from compilation cause db_185.h problems
+
+
+%Package rfs
+Summary         : Trimmed iproute for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+iproute package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
@@ -22,20 +41,43 @@
 capabilities of the Linux kernel.
 
 %Prep
-%setup -n %{name}2-%{version}
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{name}2-%{version}-%{verrel}
 %patch0 -p1
+%patch1 -p0
+%patch2 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
 
 make -j1 KERNEL_INCLUDE=$DEV_IMAGE/usr/src/linux HOSTCC="$BUILDCC"
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make -j1 install SBINDIR=%{base}/sbin DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 
+cd %{_builddir}/%{name}2-%{version}-%{verrel}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}/share/doc, d;
+    \,^%{pfx}/share/man, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/iptables/iptables.spec ltib/dist/lfs-5.1/iptables/iptables.spec
--- ltib.reference/dist/lfs-5.1/iptables/iptables.spec
+++ ltib/dist/lfs-5.1/iptables/iptables.spec
@@ -14,45 +14,235 @@
 Patch1		: iptables-1.4.2-libxt_TOS.patch
 BuildRoot	: %{_tmppath}/%{name}
 Prefix		: %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group		: System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
-iptables is the userspace command line program used to configure the Linux
-2.4.x and 2.6.x IPv4 packet filtering ruleset. It is targeted towards system
-administrators
+iptables is the userspace command line program used to configure
+the Linux 2.4.x and 2.6.x IPv4 packet filtering ruleset. It
+is targeted towards system administrators
 
-Since Network Address Translation is also configured from the packet filter
-ruleset, iptables is used for this, too
+Since Network Address Translation is also configured from the
+packet filter ruleset, iptables is used for this, too
 
-The iptables package also includes ip6tables. ip6tables is used for configuring
-the IPv6 packet filter
+The iptables package also includes ip6tables. ip6tables is
+used for configuring the IPv6 packet filter
 
-iptables requires a kernel that features the ip_tables packet filter. This
-includes all 2.4.x and 2.6.x kernel releases
+iptables requires a kernel that features the ip_tables packet
+filter. This includes all 2.4.x and 2.6.x kernel releases
 
 Main Features
-		* listing the contents of the packet filter ruleset
-		* adding/removing/modifying rules in the packet filter ruleset
-		* listing/zeroing per-rule counters of the packet filter ruleset
+* listing the contents of the packet filter ruleset
+* adding/removing/modifying rules in the packet filter ruleset
+* listing/zeroing per-rule counters of the packet filter ruleset
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
+
 %patch0 -p1
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 find $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/ -name "*.la" | xargs rm -f
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
-%{pfx}/*
+%{pfx}/usr/bin/iptables-xml
+%{pfx}/usr/include/xtables.h
+%{pfx}/usr/lib/libxtables.so
+%{pfx}/usr/lib/libxtables.so.0
+%{pfx}/usr/lib/libxtables.so.0.0.0
+%{pfx}/usr/lib/pkgconfig/xtables.pc
+%{pfx}/usr/libexec/xtables/libip6t_HL.so
+%{pfx}/usr/libexec/xtables/libip6t_LOG.so
+%{pfx}/usr/libexec/xtables/libip6t_REJECT.so
+%{pfx}/usr/libexec/xtables/libip6t_ah.so
+%{pfx}/usr/libexec/xtables/libip6t_dst.so
+%{pfx}/usr/libexec/xtables/libip6t_eui64.so
+%{pfx}/usr/libexec/xtables/libip6t_frag.so
+%{pfx}/usr/libexec/xtables/libip6t_hbh.so
+%{pfx}/usr/libexec/xtables/libip6t_hl.so
+%{pfx}/usr/libexec/xtables/libip6t_icmp6.so
+%{pfx}/usr/libexec/xtables/libip6t_ipv6header.so
+%{pfx}/usr/libexec/xtables/libip6t_mh.so
+%{pfx}/usr/libexec/xtables/libip6t_policy.so
+%{pfx}/usr/libexec/xtables/libip6t_rt.so
+%{pfx}/usr/libexec/xtables/libipt_CLUSTERIP.so
+%{pfx}/usr/libexec/xtables/libipt_DNAT.so
+%{pfx}/usr/libexec/xtables/libipt_ECN.so
+%{pfx}/usr/libexec/xtables/libipt_LOG.so
+%{pfx}/usr/libexec/xtables/libipt_MASQUERADE.so
+%{pfx}/usr/libexec/xtables/libipt_MIRROR.so
+%{pfx}/usr/libexec/xtables/libipt_NETMAP.so
+%{pfx}/usr/libexec/xtables/libipt_REDIRECT.so
+%{pfx}/usr/libexec/xtables/libipt_REJECT.so
+%{pfx}/usr/libexec/xtables/libipt_SAME.so
+%{pfx}/usr/libexec/xtables/libipt_SET.so
+%{pfx}/usr/libexec/xtables/libipt_SNAT.so
+%{pfx}/usr/libexec/xtables/libipt_TTL.so
+%{pfx}/usr/libexec/xtables/libipt_ULOG.so
+%{pfx}/usr/libexec/xtables/libipt_addrtype.so
+%{pfx}/usr/libexec/xtables/libipt_ah.so
+%{pfx}/usr/libexec/xtables/libipt_ecn.so
+%{pfx}/usr/libexec/xtables/libipt_icmp.so
+%{pfx}/usr/libexec/xtables/libipt_policy.so
+%{pfx}/usr/libexec/xtables/libipt_realm.so
+%{pfx}/usr/libexec/xtables/libipt_recent.so
+%{pfx}/usr/libexec/xtables/libipt_set.so
+%{pfx}/usr/libexec/xtables/libipt_ttl.so
+%{pfx}/usr/libexec/xtables/libipt_unclean.so
+%{pfx}/usr/libexec/xtables/libxt_CLASSIFY.so
+%{pfx}/usr/libexec/xtables/libxt_CONNMARK.so
+%{pfx}/usr/libexec/xtables/libxt_CONNSECMARK.so
+%{pfx}/usr/libexec/xtables/libxt_DSCP.so
+%{pfx}/usr/libexec/xtables/libxt_MARK.so
+%{pfx}/usr/libexec/xtables/libxt_NFLOG.so
+%{pfx}/usr/libexec/xtables/libxt_NFQUEUE.so
+%{pfx}/usr/libexec/xtables/libxt_NOTRACK.so
+%{pfx}/usr/libexec/xtables/libxt_RATEEST.so
+%{pfx}/usr/libexec/xtables/libxt_SECMARK.so
+%{pfx}/usr/libexec/xtables/libxt_TCPMSS.so
+%{pfx}/usr/libexec/xtables/libxt_TCPOPTSTRIP.so
+%{pfx}/usr/libexec/xtables/libxt_TOS.so
+%{pfx}/usr/libexec/xtables/libxt_TRACE.so
+%{pfx}/usr/libexec/xtables/libxt_comment.so
+%{pfx}/usr/libexec/xtables/libxt_connbytes.so
+%{pfx}/usr/libexec/xtables/libxt_connlimit.so
+%{pfx}/usr/libexec/xtables/libxt_connmark.so
+%{pfx}/usr/libexec/xtables/libxt_conntrack.so
+%{pfx}/usr/libexec/xtables/libxt_dccp.so
+%{pfx}/usr/libexec/xtables/libxt_dscp.so
+%{pfx}/usr/libexec/xtables/libxt_esp.so
+%{pfx}/usr/libexec/xtables/libxt_hashlimit.so
+%{pfx}/usr/libexec/xtables/libxt_helper.so
+%{pfx}/usr/libexec/xtables/libxt_iprange.so
+%{pfx}/usr/libexec/xtables/libxt_l7pm.so
+%{pfx}/usr/libexec/xtables/libxt_length.so
+%{pfx}/usr/libexec/xtables/libxt_limit.so
+%{pfx}/usr/libexec/xtables/libxt_mac.so
+%{pfx}/usr/libexec/xtables/libxt_mark.so
+%{pfx}/usr/libexec/xtables/libxt_multiport.so
+%{pfx}/usr/libexec/xtables/libxt_owner.so
+%{pfx}/usr/libexec/xtables/libxt_physdev.so
+%{pfx}/usr/libexec/xtables/libxt_pkttype.so
+%{pfx}/usr/libexec/xtables/libxt_quota.so
+%{pfx}/usr/libexec/xtables/libxt_rateest.so
+%{pfx}/usr/libexec/xtables/libxt_sctp.so
+%{pfx}/usr/libexec/xtables/libxt_standard.so
+%{pfx}/usr/libexec/xtables/libxt_state.so
+%{pfx}/usr/libexec/xtables/libxt_statistic.so
+%{pfx}/usr/libexec/xtables/libxt_string.so
+%{pfx}/usr/libexec/xtables/libxt_tcp.so
+%{pfx}/usr/libexec/xtables/libxt_tcpmss.so
+%{pfx}/usr/libexec/xtables/libxt_time.so
+%{pfx}/usr/libexec/xtables/libxt_tos.so
+%{pfx}/usr/libexec/xtables/libxt_u32.so
+%{pfx}/usr/libexec/xtables/libxt_udp.so
+%{pfx}/usr/sbin/ip6tables
+%{pfx}/usr/sbin/ip6tables-multi
+%{pfx}/usr/sbin/ip6tables-restore
+%{pfx}/usr/sbin/ip6tables-save
+%{pfx}/usr/sbin/iptables
+%{pfx}/usr/sbin/iptables-multi
+%{pfx}/usr/sbin/iptables-restore
+%{pfx}/usr/sbin/iptables-save
+%{pfx}/usr/share/man/man8/ip6tables-restore.8
+%{pfx}/usr/share/man/man8/ip6tables-save.8
+%{pfx}/usr/share/man/man8/ip6tables.8
+%{pfx}/usr/share/man/man8/iptables-restore.8
+%{pfx}/usr/share/man/man8/iptables-save.8
+%{pfx}/usr/share/man/man8/iptables-xml.8
+%{pfx}/usr/share/man/man8/iptables.8
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/libexec/xtables/libipt_icmp.so
+%{pfx}/usr/libexec/xtables/libxt_CLASSIFY.so
+%{pfx}/usr/libexec/xtables/libxt_comment.so
+%{pfx}/usr/libexec/xtables/libxt_connbytes.so
+%{pfx}/usr/libexec/xtables/libxt_connlimit.so
+%{pfx}/usr/libexec/xtables/libxt_connmark.so
+%{pfx}/usr/libexec/xtables/libxt_CONNMARK.so
+%{pfx}/usr/libexec/xtables/libxt_CONNSECMARK.so
+%{pfx}/usr/libexec/xtables/libxt_conntrack.so
+%{pfx}/usr/libexec/xtables/libxt_dccp.so
+%{pfx}/usr/libexec/xtables/libxt_dscp.so
+%{pfx}/usr/libexec/xtables/libxt_DSCP.so
+%{pfx}/usr/libexec/xtables/libxt_esp.so
+%{pfx}/usr/libexec/xtables/libxt_hashlimit.so
+%{pfx}/usr/libexec/xtables/libxt_helper.so
+%{pfx}/usr/libexec/xtables/libxt_iprange.so
+%{pfx}/usr/libexec/xtables/libxt_l7pm.so
+%{pfx}/usr/libexec/xtables/libxt_length.so
+%{pfx}/usr/libexec/xtables/libxt_limit.so
+%{pfx}/usr/libexec/xtables/libxt_mac.so
+%{pfx}/usr/libexec/xtables/libxt_mark.so
+%{pfx}/usr/libexec/xtables/libxt_MARK.so
+%{pfx}/usr/libexec/xtables/libxt_multiport.so
+%{pfx}/usr/libexec/xtables/libxt_NFLOG.so
+%{pfx}/usr/libexec/xtables/libxt_NFQUEUE.so
+%{pfx}/usr/libexec/xtables/libxt_NOTRACK.so
+%{pfx}/usr/libexec/xtables/libxt_owner.so
+%{pfx}/usr/libexec/xtables/libxt_physdev.so
+%{pfx}/usr/libexec/xtables/libxt_pkttype.so
+%{pfx}/usr/libexec/xtables/libxt_quota.so
+%{pfx}/usr/libexec/xtables/libxt_rateest.so
+%{pfx}/usr/libexec/xtables/libxt_RATEEST.so
+%{pfx}/usr/libexec/xtables/libxt_sctp.so
+%{pfx}/usr/libexec/xtables/libxt_SECMARK.so
+%{pfx}/usr/libexec/xtables/libxt_standard.so
+%{pfx}/usr/libexec/xtables/libxt_state.so
+%{pfx}/usr/libexec/xtables/libxt_statistic.so
+%{pfx}/usr/libexec/xtables/libxt_string.so
+%{pfx}/usr/libexec/xtables/libxt_tcpmss.so
+%{pfx}/usr/libexec/xtables/libxt_TCPMSS.so
+%{pfx}/usr/libexec/xtables/libxt_TCPOPTSTRIP.so
+%{pfx}/usr/libexec/xtables/libxt_tcp.so
+%{pfx}/usr/libexec/xtables/libxt_time.so
+%{pfx}/usr/libexec/xtables/libxt_tos.so
+%{pfx}/usr/libexec/xtables/libxt_TOS.so
+%{pfx}/usr/libexec/xtables/libxt_TRACE.so
+%{pfx}/usr/libexec/xtables/libxt_u32.so
+%{pfx}/usr/libexec/xtables/libxt_udp.so
+%{pfx}/usr/lib/libxtables.so
+%{pfx}/usr/lib/libxtables.so.0
+%{pfx}/usr/lib/libxtables.so.0.0.0
+%{pfx}/usr/sbin/iptables
+%{pfx}/usr/sbin/iptables-multi
+%{pfx}/usr/sbin/iptables-restore
+%{pfx}/usr/sbin/iptables-save
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/kernel/kernel-common.tmpl ltib/dist/lfs-5.1/kernel/kernel-common.tmpl
--- ltib.reference/dist/lfs-5.1/kernel/kernel-common.tmpl
+++ ltib/dist/lfs-5.1/kernel/kernel-common.tmpl
@@ -182,10 +182,10 @@
 #
 # build the kernel and optionally the modules
 #
-make $LOCV ARCH=$LINTARCH CROSS_COMPILE= HOSTCC="$BUILDCC" $SYSCFG_KTARG
+make -j`grep -c ^processor /proc/cpuinfo` $LOCV ARCH=$LINTARCH CROSS_COMPILE= HOSTCC="$BUILDCC" $SYSCFG_KTARG
 if grep -q '^CONFIG_MODULES=' $KBOUT/.config
 then
-    make $LOCV ARCH=$LINTARCH CROSS_COMPILE= HOSTCC="$BUILDCC" modules
+    make -j`grep -c ^processor /proc/cpuinfo` $LOCV ARCH=$LINTARCH CROSS_COMPILE= HOSTCC="$BUILDCC" modules
 fi
 
 # cscope index
@@ -261,6 +261,7 @@
 
 if grep -q '^CONFIG_MODULES=' $KBOUT/.config
 then
+    mkdir -p $RPM_BUILD_ROOT/%{pfx}/lib/firmware
     make $LOCV ARCH=$LINTARCH CROSS_COMPILE= HOSTCC="$BUILDCC" DEPMOD=/bin/true INSTALL_MOD_PATH=$RPM_BUILD_ROOT/%{pfx} modules_install
     KERNEL_VER=`ls $RPM_BUILD_ROOT/%{pfx}/lib/modules`
     for i in build source
@@ -333,6 +334,14 @@
     fi
 fi
 
+cd %{_builddir}/%{pkg_name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}/boot, d;
+    \,^%{pfx}%{_prefix}/src, d;
+    \,^%{pfx}/%{_lib}/modules/%{version}-[^/]*/kernel/drivers/usb/serial/, d;
+' all_files.lst > rfs_files.lst
+cd -
 
 %Clean
 rm -rf $RPM_BUILD_ROOT
@@ -341,6 +350,200 @@
     rm -f $RPM_BUILD_DIR/linux
 fi
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
+
+%Files rfs-usbserial
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/usbserial.ko
+
+%Files rfs-usbserial-aircable
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/aircable.ko
+
+%Files rfs-usbserial-ark3116
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ark3116.ko
+
+%Files rfs-usbserial-belkin_sa
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/belkin_sa.ko
+
+%Files rfs-usbserial-ch341
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ch341.ko
+
+%Files rfs-usbserial-cp210x
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/cp210x.ko
+
+%Files rfs-usbserial-cyberjack
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/cyberjack.ko
+
+%Files rfs-usbserial-cypress_m8
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/cypress_m8.ko
+
+%Files rfs-usbserial-digi_acceleport
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/digi_acceleport.ko
+
+%Files rfs-usbserial-empeg
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/empeg.ko
+
+%Files rfs-usbserial-ftdi_sio
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ftdi_sio.ko
+
+%Files rfs-usbserial-funsoft
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/funsoft.ko
+
+%Files rfs-usbserial-garmin_gps
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/garmin_gps.ko
+
+%Files rfs-usbserial-hp4x
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/hp4x.ko
+
+%Files rfs-usbserial-io_edgeport
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/io_edgeport.ko
+
+%Files rfs-usbserial-io_ti
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/io_ti.ko
+
+%Files rfs-usbserial-ipaq
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ipaq.ko
+
+%Files rfs-usbserial-ipw
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ipw.ko
+
+%Files rfs-usbserial-ir
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ir-usb.ko
+
+%Files rfs-usbserial-iuu_phoenix
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/iuu_phoenix.ko
+
+%Files rfs-usbserial-keyspan
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/keyspan.ko
+
+%Files rfs-usbserial-keyspan_pda
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/keyspan_pda.ko
+
+%Files rfs-usbserial-kl5kusb105
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/kl5kusb105.ko
+
+%Files rfs-usbserial-kobil_sct
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/kobil_sct.ko
+
+%Files rfs-usbserial-mct_u232
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/mct_u232.ko
+
+%Files rfs-usbserial-mos7720
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/mos7720.ko
+
+%Files rfs-usbserial-mos7840
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/mos7840.ko
+
+%Files rfs-usbserial-moto_modem
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/moto_modem.ko
+
+%Files rfs-usbserial-navman
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/navman.ko
+
+%Files rfs-usbserial-omninet
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/omninet.ko
+
+%Files rfs-usbserial-opticon
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/opticon.ko
+
+%Files rfs-usbserial-option
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/option.ko
+
+%Files rfs-usbserial-oti6858
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/oti6858.ko
+
+%Files rfs-usbserial-pl2303
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/pl2303.ko
+
+%Files rfs-usbserial-qcaux
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/qcaux.ko
+
+%Files rfs-usbserial-qcserial
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/qcserial.ko
+
+%Files rfs-usbserial-safe_serial
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/safe_serial.ko
+
+%Files rfs-usbserial-siemens_mpi
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/siemens_mpi.ko
+
+%Files rfs-usbserial-sierra
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/sierra.ko
+
+%Files rfs-usbserial-spcp8x5
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/spcp8x5.ko
+
+%Files rfs-usbserial-symbolserial
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/symbolserial.ko
+
+%Files rfs-usbserial-ti_3410_5052
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/ti_usb_3410_5052.ko
+
+%Files rfs-usbserial-debug
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/usb_debug.ko
+
+%Files rfs-usbserial-wwan
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/usb_wwan.ko
+
+%Files rfs-usbserial-visor
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/visor.ko
+
+%Files rfs-usbserial-vivopay-serial
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/vivopay-serial.ko
+
+%Files rfs-usbserial-whiteheat
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/whiteheat.ko
+
+%Files rfs-usbserial-zio
+%defattr(-,root,root)
+%{pfx}/%{_lib}/modules/%{version}/kernel/drivers/usb/serial/zio.ko
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/last-kernel-build/last-kernel-build.spec ltib/dist/lfs-5.1/last-kernel-build/last-kernel-build.spec
--- ltib.reference/dist/lfs-5.1/last-kernel-build/last-kernel-build.spec
+++ ltib/dist/lfs-5.1/last-kernel-build/last-kernel-build.spec
@@ -0,0 +1,39 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Used to timestamp of the last kernel build.
+Name            : last-kernel-build
+Version         : 1.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/System
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+
+%Files
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libmodbus/libmodbus.spec ltib/dist/lfs-5.1/libmodbus/libmodbus.spec
--- ltib.reference/dist/lfs-5.1/libmodbus/libmodbus.spec
+++ ltib/dist/lfs-5.1/libmodbus/libmodbus.spec
@@ -0,0 +1,68 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : A Modbus library
+Name            : libmodbus
+Version         : 3.0.6
+Release         : 1
+License         : LGPLv2+
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.gz
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+make
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/lib/libmodbus.so
+%{pfx}/usr/lib/libmodbus.so.5
+%{pfx}/usr/lib/libmodbus.so.5.0.5
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libpng/libpng.spec ltib/dist/lfs-5.1/libpng/libpng.spec
--- ltib.reference/dist/lfs-5.1/libpng/libpng.spec
+++ ltib/dist/lfs-5.1/libpng/libpng.spec
@@ -12,23 +12,52 @@
 Patch1          : libpng-1.2.8-link_to_proper_libs-1.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 
+
 %Build
+export LC_ALL
+LC_ALL=C
+
 make prefix=%{_prefix} -f scripts/makefile.linux
 
+
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix} 
 make prefix=$RPM_BUILD_ROOT/%{pfx}/%{_prefix} install -f scripts/makefile.linux
 
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
@@ -36,3 +65,11 @@
 %defattr(-,root,root)
 %{pfx}/*
 
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/lib/libpng.so
+%{pfx}/usr/lib/libpng.so.3
+%{pfx}/usr/lib/libpng.so.3.1.2.8
+%{pfx}/usr/lib/libpng12.so
+%{pfx}/usr/lib/libpng12.so.0
+%{pfx}/usr/lib/libpng12.so.0.1.2.8
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libqrencode/libqrencode.spec ltib/dist/lfs-5.1/libqrencode/libqrencode.spec
--- ltib.reference/dist/lfs-5.1/libqrencode/libqrencode.spec
+++ ltib/dist/lfs-5.1/libqrencode/libqrencode.spec
@@ -0,0 +1,73 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Generate QR 2D barcodes
+Name            : libqrencode
+Version         : 3.4.2
+Release         : 1
+License         : LGPLv2+
+Vendor          : ...
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
+make
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/qrencode
+%{pfx}/usr/lib/libqrencode.la
+%{pfx}/usr/lib/libqrencode.so
+%{pfx}/usr/lib/libqrencode.so.3
+%{pfx}/usr/lib/libqrencode.so.3.4.2
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libsocketcan/libsocketcan.spec ltib/dist/lfs-5.1/libsocketcan/libsocketcan.spec
--- ltib.reference/dist/lfs-5.1/libsocketcan/libsocketcan.spec
+++ ltib/dist/lfs-5.1/libsocketcan/libsocketcan.spec
@@ -0,0 +1,77 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Library to allow control of basic functions in socketcan from userspace
+Name            : libsocketcan
+Version         : 0.0.8
+Release         : 0
+License         : GNU LGPLv2.1
+Vendor          : Freescale
+Packager        : Rogerio Pimentel
+Group           : System Environment/Libraries
+Source          : %{name}-%{version}.tar.gz
+URL             : http://www.pengutronix.de/software/libsocketcan/download/
+Patch1          : libsocketcan-0.0.8-1317716454.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed libsocketcan for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+libsocketcan package contents restricted to just the files
+that are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+%patch1 -p1
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
+#./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} CC=/opt/freescale/usr/local/gcc-4.4.4-glibc-2.11.1-multilib-1.0/arm-fsl-linux-gnueabi/bin/arm-fsl-linux-gnueabi-gcc
+
+make
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_datadir}/doc, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libtermcap/libtermcap.spec ltib/dist/lfs-5.1/libtermcap/libtermcap.spec
--- ltib.reference/dist/lfs-5.1/libtermcap/libtermcap.spec
+++ ltib/dist/lfs-5.1/libtermcap/libtermcap.spec
@@ -1,4 +1,5 @@
 %define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define archname termcap
 
 Summary         : A basic system library for accessing the termcap database.
 Name            : libtermcap
@@ -8,21 +9,35 @@
 Vendor          : Freescale Inc
 Packager        : Steve Papacharalambous
 Group           : System Environment/Libraries
-Source          : termcap-2.0.8.tar.bz2
-Patch0: termcap-2.0.8-shared.patch
-Patch1: termcap-2.0.8-setuid.patch
-Patch2: termcap-2.0.8-instnoroot.patch
-Patch3: termcap-2.0.8-compat21.patch
-Patch4: termcap-2.0.8-xref.patch
-Patch5: termcap-2.0.8-fix-tc.patch
-Patch6: termcap-2.0.8-ignore-p.patch
-Patch7: termcap-buffer.patch
-Patch8: termcap-2.0.8-bufsize.patch
-Patch9: termcap-2.0.8-colon.patch
-Patch10: libtermcap-aaargh.patch
-Patch11: termcap-2.0.8-glibc22.patch
+Source          : %{archname}-%{version}.tar.bz2
+Patch0          : %{archname}-%{version}-shared.patch
+Patch1          : %{archname}-%{version}-setuid.patch
+Patch2          : %{archname}-%{version}-instnoroot.patch
+Patch3          : %{archname}-%{version}-compat21.patch
+Patch4          : %{archname}-%{version}-xref.patch
+Patch5          : %{archname}-%{version}-fix-tc.patch
+Patch6          : %{archname}-%{version}-ignore-p.patch
+Patch7          : %{archname}-buffer.patch
+Patch8          : %{archname}-%{version}-bufsize.patch
+Patch9          : %{archname}-%{version}-colon.patch
+Patch10         : libtermcap-aaargh.patch
+Patch11         : %{archname}-%{version}-glibc22.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed libtermcap for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+libtermcap package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 The libtermcap package contains a basic system library needed to
@@ -31,7 +46,10 @@
 displays in a terminal-independent manner.
 
 %Prep
-%setup -q -n termcap-2.0.8
+export LC_ALL
+LC_ALL=C
+
+%setup -q -n %{archname}-%{version}
 %patch0 -p1 
 %patch1 -p1
 %patch2 -p1
@@ -46,6 +64,9 @@
 %patch11 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 if [ "$GNUTARCH" = m68knommu ]
 then
    MAKEOPTS="TARGETS=libtermcap.a"
@@ -53,6 +74,9 @@
 make $MAKEOPTS
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 for i in usr/lib %{_infodir} usr/include etc lib
 do
     mkdir -p ${RPM_BUILD_ROOT}/%{pfx}/$i
@@ -61,7 +85,7 @@
 if [ "$GNUTARCH" = m68knommu ]
 then
 ( cp libtermcap.a ${RPM_BUILD_ROOT}/%{pfx}/lib/
-  cp termcap.h ${RPM_BUILD_ROOT}/%{pfx}/usr/include/
+  cp termcap.h ${RPM_BUILD_ROOT}/%{pfx}%{_prefix}/include/
   cp termcap.info* ${RPM_BUILD_ROOT}/%{pfx}/%{_infodir}
   cd ${RPM_BUILD_ROOT}/%{pfx}
   cd ./%{_infodir}
@@ -71,7 +95,7 @@
 
 else
 export PATH=/sbin:$PATH
-make prefix=${RPM_BUILD_ROOT}/%{pfx}/usr install
+make prefix=${RPM_BUILD_ROOT}/%{pfx}%{_prefix} install
 
 install -c -m644 termcap.src ${RPM_BUILD_ROOT}/%{pfx}/etc/termcap
 cp termcap.info* ${RPM_BUILD_ROOT}/%{pfx}/%{_infodir}
@@ -79,24 +103,36 @@
 ( cd ${RPM_BUILD_ROOT}/%{pfx}
   rm -f ./etc/termcap
   mv ./usr/lib/libtermcap.so* ./lib
-  ln -sf libtermcap.so.2.0.8 ./lib/libtermcap.so.2
+  ln -sf libtermcap.so.%{version} ./lib/libtermcap.so.2
   ln -sf libtermcap.so.2 ./lib/libtermcap.so
   cd usr/lib
-  ln -sf ../../lib/libtermcap.so.2.0.8 libtermcap.so
+  ln -sf ../../lib/libtermcap.so.%{version} libtermcap.so
   cd ../..
-  strip -R .comments --strip-unneeded ./lib/libtermcap.so.2.0.8
+  strip -R .comments --strip-unneeded ./lib/libtermcap.so.%{version}
   cd ./%{_infodir}
   gzip -9nf ./termcap.info*
   chmod 644 ./termcap.info*
 )
 fi
 
+cd %{_builddir}/%{archname}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( -not -type d \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/info, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf ${RPM_BUILD_ROOT}
-rm -rf ${RPM_BUILD_DIR}/termcap-%{version}
+rm -rf ${RPM_BUILD_DIR}/%{archname}-%{version}
 
-%Files
-%defattr(-,root,root)
-%{pfx}/*
 
+%Files -f all_files.lst
+%defattr(-,root,root)
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libusb/libusb.spec ltib/dist/lfs-5.1/libusb/libusb.spec
--- ltib.reference/dist/lfs-5.1/libusb/libusb.spec
+++ ltib/dist/lfs-5.1/libusb/libusb.spec
@@ -11,15 +11,35 @@
 Source          : %{name}-%{version}.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed libusb for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+libusb package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup 
 libtoolize --copy --force
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 # note: I tried version 0.1.10a buy this requires a c++ compiler
 
 # configure can't figure this out in my environment (cross)
@@ -33,13 +53,28 @@
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/libusb/libusb1.spec ltib/dist/lfs-5.1/libusb/libusb1.spec
--- ltib.reference/dist/lfs-5.1/libusb/libusb1.spec
+++ ltib/dist/lfs-5.1/libusb/libusb1.spec
@@ -0,0 +1,72 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define libname libusb
+
+Summary         : A library which allows userspace access to USB devices 
+Name            : %{libname}1
+Version         : 1.0.20
+Release         : 1
+License         : LGPL
+Vendor          : MECT
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+Source          : %{libname}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed down libusb-1.x to just run time libraries
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+libusb-1.x package contents restricted to just the libraries
+that are needed at run time on the target.
+
+
+%Description
+%{summary}.
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{libname}-%{version}
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --disable-udev --disable-build-docs
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make -j1 install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+cd %{_builddir}/%{libname}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/include, d;
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/lkc/lkc.spec ltib/dist/lfs-5.1/lkc/lkc.spec
--- ltib.reference/dist/lfs-5.1/lkc/lkc.spec
+++ ltib/dist/lfs-5.1/lkc/lkc.spec
@@ -20,6 +20,7 @@
 Patch8          : lkc-1.4-config_title-1.patch
 Patch9          : lkc-1.4-config_filename-1.patch
 Patch10         : lkc-1.4-lib.patch
+Patch11         : lkc-1.4-fix_gcc_5.4.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
 
@@ -39,6 +40,7 @@
 %patch8 -p1
 %patch9 -p1
 %patch10 -p1
+%patch11 -p1
 
 %Build
 make -j1 conf mconf
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/lrzsz/lrzsz.spec ltib/dist/lfs-5.1/lrzsz/lrzsz.spec
--- ltib.reference/dist/lfs-5.1/lrzsz/lrzsz.spec
+++ ltib/dist/lfs-5.1/lrzsz/lrzsz.spec
@@ -10,38 +10,72 @@
 Group           : Applications/Communications
 Source          : lrzsz_0.12.21.orig.tar.gz
 Patch0          : lrzsz_0.12.21-4.diff
+Patch1          : lrzsz-0.12.21-1448891584.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+%Package rfs
+Summary         : Trimmed lrzsz for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Communications
+AutoReqProv     : no
+
+%Description rfs
+lrzsz package contents restricted to just the files that
+are needed at run time on the target.
 
 %Description
 %{summary}
 
 %Prep
-%setup -n lrzsz-990823
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{name}-990823
 %patch0 -p1
+%patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 if [ -n "$UCLIBC" ]
 then
     config_opts='ac_cv_lib_intl_gettext=no'
 fi
 eval $config_opts \
-./configure --disable-pubdir \
-            --enable-syslog \
-            --program-transform-name=s/l// --cache-file=config.cache
+./configure --prefix=%{_prefix} --disable-pubdir --enable-syslog --program-transform-name=s/l// --cache-file=config.cache
 touch Makefile.in
 touch stamp-h.in
 make -j1
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
+
 make -j1 install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 
+cd %{_builddir}/%{name}-990823
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/man, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
 
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/lzo/lzo.spec ltib/dist/lfs-5.1/lzo/lzo.spec
--- ltib.reference/dist/lfs-5.1/lzo/lzo.spec
+++ ltib/dist/lfs-5.1/lzo/lzo.spec
@@ -11,14 +11,34 @@
 Source          : lzo-%{version}.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed lzo for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+lzo package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 if [ "$GNUTARCH" = m68knommu ]
 then
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} \
@@ -30,14 +50,28 @@
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/include, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mac_sn/mac_sn.spec ltib/dist/lfs-5.1/mac_sn/mac_sn.spec
--- ltib.reference/dist/lfs-5.1/mac_sn/mac_sn.spec
+++ ltib/dist/lfs-5.1/mac_sn/mac_sn.spec
@@ -0,0 +1,76 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : GUI to set up MAC address of Ethernet cards
+Name            : mac_sn
+Version         : 1.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just runtimes
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target system.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace ../../../../projects/%{name}/ ./
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+test -r Makefile && make clean
+/opt/Trolltech/bin/qmake \
+	-spec qws/linux-g++-mx \
+	"INCLUDEPATH+=$RPM_BUILD_DIR/../../rootfs/usr/include $RPM_BUILD_DIR/../../rootfs/usr/src/linux/include" \
+	"DEFINES+=TARGET_ARM" \
+	"QMAKE_LIBDIR+=$RPM_BUILD_DIR/../../rootfs/usr/lib" \
+	mac_sn.pro
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+install -D -m 0755 mac_sn $RPM_BUILD_ROOT%{pfx}/usr/bin/mac_sn
+
+cd %{_builddir}/%{name}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mect_apps/mect_apps.spec ltib/dist/lfs-5.1/mect_apps/mect_apps.spec
--- ltib.reference/dist/lfs-5.1/mect_apps/mect_apps.spec
+++ ltib/dist/lfs-5.1/mect_apps/mect_apps.spec
@@ -0,0 +1,1602 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define rhtbtr resources-hack-to-build-the-rpm
+
+Summary         : Default HMI application.
+Name            : mect_apps
+Version         : v3.3.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}/local
+AutoReqProv     : no
+
+# TP1043_01_A
+#
+%Package lfs-TP1043_01_A
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1043_01_A/local
+
+%Description lfs-TP1043_01_A
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1043_01_B
+#
+%Package lfs-TP1043_01_B
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1043_01_B/local
+
+%Description lfs-TP1043_01_B
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1043_02_A
+#
+%Package lfs-TP1043_02_A
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1043_02_A/local
+
+%Description lfs-TP1043_02_A
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1043_02_B
+#
+%Package lfs-TP1043_02_B
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1043_02_B/local
+
+%Description lfs-TP1043_02_B
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1070_01_A
+#
+%Package lfs-TP1070_01_A
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1070_01_A/local
+
+%Description lfs-TP1070_01_A
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1070_01_B
+#
+%Package lfs-TP1070_01_B
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1070_01_B/local
+
+%Description lfs-TP1070_01_B
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1070_01_C
+#
+%Package lfs-TP1070_01_C
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1070_01_C/local
+
+%Description lfs-TP1070_01_C
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TP1070_02_F
+#
+%Package lfs-TP1070_02_F
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TP1070_02_F/local
+
+%Description lfs-TP1070_02_F
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPX1070_03_D
+#
+%Package lfs-TPX1070_03_D
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPX1070_03_D/local
+
+%Description lfs-TPX1070_03_D
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPX1070_03_E
+#
+%Package lfs-TPX1070_03_E
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPX1070_03_E/local
+
+%Description lfs-TPX1070_03_E
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_03
+#
+%Package lfs-TPAC1007_03
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_03/local
+
+%Description lfs-TPAC1007_03
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_04_AA
+#
+%Package lfs-TPAC1007_04_AA
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_04_AA/local
+
+%Description lfs-TPAC1007_04_AA
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_04_AB
+#
+%Package lfs-TPAC1007_04_AB
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_04_AB/local
+
+%Description lfs-TPAC1007_04_AB
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_04_AC
+#
+%Package lfs-TPAC1007_04_AC
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_04_AC/local
+
+%Description lfs-TPAC1007_04_AC
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_04_AD
+#
+%Package lfs-TPAC1007_04_AD
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_04_AD/local
+
+%Description lfs-TPAC1007_04_AD
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1007_04_AE
+#
+%Package lfs-TPAC1007_04_AE
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1007_04_AE/local
+
+%Description lfs-TPAC1007_04_AE
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1005
+#
+%Package lfs-TPAC1005
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1005/local
+
+%Description lfs-TPAC1005
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_02_AA
+#
+%Package lfs-TPAC1008_02_AA
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_02_AA/local
+
+%Description lfs-TPAC1008_02_AA
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_02_AB
+#
+%Package lfs-TPAC1008_02_AB
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_02_AB/local
+
+%Description lfs-TPAC1008_02_AB
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_02_AD
+#
+%Package lfs-TPAC1008_02_AD
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_02_AD/local
+
+%Description lfs-TPAC1008_02_AD
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_02_AE
+#
+%Package lfs-TPAC1008_02_AE
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_02_AE/local
+
+%Description lfs-TPAC1008_02_AE
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_02_AF
+#
+%Package lfs-TPAC1008_02_AF
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_02_AF/local
+
+%Description lfs-TPAC1008_02_AF
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_03_AC
+#
+%Package lfs-TPAC1008_03_AC
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_03_AC/local
+
+%Description lfs-TPAC1008_03_AC
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPAC1008_03_AD
+#
+%Package lfs-TPAC1008_03_AD
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPAC1008_03_AD/local
+
+%Description lfs-TPAC1008_03_AD
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPLC050_01_AA
+#
+%Package lfs-TPLC050_01_AA
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPLC050_01_AA/local
+
+%Description lfs-TPLC050_01_AA
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPLC100_01_AA
+#
+%Package lfs-TPLC100_01_AA
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPLC100_01_AA/local
+
+%Description lfs-TPLC100_01_AA
+%{name} package contents limited to just the run-times needed
+on the target.
+
+# TPLC100_01_AB
+#
+%Package lfs-TPLC100_01_AB
+Summary         : Trimmed %{name} to just the run-times needed for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Francesco Mandracci
+Group           : Applications/System
+AutoReqProv     : no
+Prefix          : %{pfx}/TPLC100_01_AB/local
+
+%Description lfs-TPLC100_01_AB
+%{name} package contents limited to just the run-times needed
+on the target.
+
+%description
+%{summary}
+
+%prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace ../../../../projects/%{name}/ ./
+
+# Do not re-generate the systemicons resources (use Windows-specific paths).
+find . -name qrc_systemicons.cpp -exec touch {} \;
+
+
+%build
+export LC_ALL
+LC_ALL=C
+
+export MECT_RFSDIR
+MECT_RFSDIR=$DEV_IMAGE
+export MECT_QT_INSTALL_DIR
+MECT_QT_INSTALL_DIR=/opt/Trolltech
+
+# TP1043_01_A
+#
+d=TP1043_01_A/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1043_01_B
+#
+d=TP1043_01_B/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1043_02_A
+#
+d=TP1043_02_A/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1043_02_B
+#
+d=TP1043_02_B/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1070_01_A
+#
+d=TP1070_01_A/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1070_01_B
+#
+d=TP1070_01_B/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1070_01_C
+#
+d=TP1070_01_C/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TP1070_02_F
+#
+d=TP1070_02_F/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPX1070_03_D
+#
+d=TPX1070_03_D/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPX1070_03_E
+#
+d=TPX1070_03_E/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_03
+#
+d=TPAC1007_03/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_04_AA
+#
+d=TPAC1007_04_AA/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_04_AB
+#
+d=TPAC1007_04_AB/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_04_AC
+#
+d=TPAC1007_04_AC/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_04_AD
+#
+d=TPAC1007_04_AD/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1007_04_AE
+#
+d=TPAC1007_04_AE/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1005
+#
+d=TPAC1005/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_02_AA
+#
+d=TPAC1008_02_AA/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_02_AB
+#
+d=TPAC1008_02_AB/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_02_AD
+#
+d=TPAC1008_02_AD/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_02_AE
+#
+d=TPAC1008_02_AE/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_02_AF
+#
+d=TPAC1008_02_AF/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_03_AC
+#
+d=TPAC1008_03_AC/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPAC1008_03_AD
+#
+d=TPAC1008_03_AD/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPLC050_01_AA
+#
+d=TPLC050_01_AA/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPLC100_01_AA
+#
+d=TPLC100_01_AA/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+# TPLC100_01_AB
+#
+d=TPLC100_01_AB/Simple
+if test -d $d; then
+	cd $d
+
+	$MECT_QT_INSTALL_DIR/bin/lrelease Simple.pro
+	$MECT_QT_INSTALL_DIR/bin/qmake \
+		-spec qws/linux-g++-mx \
+		"INCLUDEPATH+=${MECT_RFSDIR}/usr/include ${MECT_RFSDIR}/usr/src/linux/include" \
+		"DEFINES+=TARGET_ARM" \
+		"QMAKE_LIBDIR+=${MECT_RFSDIR}/usr/lib" \
+		Simple.pro
+	make -j1
+
+	cd -
+fi
+
+
+%install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+# TP1043_01_A
+#
+d=TP1043_01_A/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1043_01_A/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1043_01_A/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1043_01_A/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1043_01_A/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1043_01_A/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1043_01_B
+#
+d=TP1043_01_B/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1043_01_B/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1043_01_B/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1043_01_B/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1043_01_B/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1043_01_B/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1043_02_A
+#
+d=TP1043_02_A/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1043_02_A/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1043_02_A/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1043_02_A/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1043_02_A/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1043_02_A/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1043_02_B
+#
+d=TP1043_02_B/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1043_02_B/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1043_02_B/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1043_02_B/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1043_02_B/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1043_02_B/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1070_01_A
+#
+d=TP1070_01_A/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1070_01_A/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1070_01_A/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1070_01_A/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1070_01_A/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1070_01_A/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1070_01_B
+#
+d=TP1070_01_B/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1070_01_B/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1070_01_B/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1070_01_B/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1070_01_B/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1070_01_B/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1070_01_C
+#
+d=TP1070_01_C/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1070_01_C/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1070_01_C/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1070_01_C/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1070_01_C/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1070_01_C/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TP1070_02_F
+#
+d=TP1070_02_F/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TP1070_02_F/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TP1070_02_F/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TP1070_02_F/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TP1070_02_F/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TP1070_02_F/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPX1070_03_D
+#
+d=TPX1070_03_D/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPX1070_03_D/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPX1070_03_D/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPX1070_03_D/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPX1070_03_D/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPX1070_03_D/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPX1070_03_E
+#
+d=TPX1070_03_E/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                     $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/root/hmi
+	install -m644 -D sounds/Front_Center.wav $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/root/Front_Center.wav
+	install -m644 -D sounds/Front_Left.wav   $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/root/Front_Left.wav
+	install -m644 -D sounds/Front_Right.wav  $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/root/Front_Right.wav
+	install -m644 -D config/Crosstable.csv   $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png       $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini       $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv       $RPM_BUILD_ROOT%{pfx}/TPX1070_03_E/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1007_03
+#
+d=TPAC1007_03/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/data/customtrend/trend1.csv
+
+	install -m644 -D recipes/AnOut/up_and_down.csv  $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/data/recipe/AnOut/up_and_down.csv
+	install -m644 -D recipes/AnOut/sine_wave.csv    $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/data/recipe/AnOut/sine_wave.csv
+	install -m644 -D recipes/DigOut/from_1_to_4.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/data/recipe/DigOut/from_1_to_4.csv
+	install -m644 -D recipes/DigOut/from_1_to_8.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_03/local/data/recipe/DigOut/from_1_to_8.csv
+
+	cd -
+fi
+
+# TPAC1007_04_AA
+#
+d=TPAC1007_04_AA/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AA/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AA/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1007_04_AB
+#
+d=TPAC1007_04_AB/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AB/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AB/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1007_04_AC
+#
+d=TPAC1007_04_AC/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/data/customtrend/trend1.csv
+
+	install -m644 -D recipes/AnOut/up_and_down.csv  $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/data/recipe/AnOut/up_and_down.csv
+	install -m644 -D recipes/AnOut/sine_wave.csv    $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/data/recipe/AnOut/sine_wave.csv
+	install -m644 -D recipes/DigOut/from_1_to_4.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/data/recipe/DigOut/from_1_to_4.csv
+	install -m644 -D recipes/DigOut/from_1_to_8.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AC/local/data/recipe/DigOut/from_1_to_8.csv
+
+	cd -
+fi
+
+# TPAC1007_04_AD
+#
+d=TPAC1007_04_AD/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AD/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AD/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1007_04_AE
+#
+d=TPAC1007_04_AE/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AE/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1007_04_AE/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1005
+#
+d=TPAC1005/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1005/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1005/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1005/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1005/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1005/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPAC1008_02_AA
+#
+d=TPAC1008_02_AA/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_02_AB
+#
+d=TPAC1008_02_AB/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_02_AD
+#
+d=TPAC1008_02_AD/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_02_AE
+#
+d=TPAC1008_02_AE/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_02_AF
+#
+d=TPAC1008_02_AF/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_03_AC
+#
+d=TPAC1008_03_AC/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPAC1008_03_AD
+#
+d=TPAC1008_03_AD/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPLC050_01_AA
+#
+d=TPLC050_01_AA/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPLC050_01_AA/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPLC050_01_AA/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPLC050_01_AA/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPLC050_01_AA/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPLC050_01_AA/local/data/customtrend/trend1.csv
+
+	cd -
+fi
+
+# TPLC100_01_AA
+#
+d=TPLC100_01_AA/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AA/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+# TPLC100_01_AB
+#
+d=TPLC100_01_AB/Simple
+if test -d $d; then
+	cd $d
+
+	install -m755 -D hmi                   $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/root/hmi
+	install -m644 -D config/Crosstable.csv $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/etc/sysconfig/Crosstable.csv
+	install -m644 -D config/splash.png     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/etc/sysconfig/img/splash.png
+	install -m644 -D config/system.ini     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/etc/sysconfig/system.ini
+	install -m644 -D config/trend1.csv     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/data/customtrend/trend1.csv
+	install -m644 -D config/network0.cmg   $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/etc/sysconfig/network0.cmg
+	install -m644 -D config/iomap0.cmg     $RPM_BUILD_ROOT%{pfx}/TPLC100_01_AB/local/etc/sysconfig/iomap0.cmg
+
+	cd -
+fi
+
+
+exit 0
+
+%clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%files
+%defattr(-,root,root)
+%{pfx}/*
+
+%files lfs-TP1043_01_A
+%defattr(-,root,root)
+%{pfx}/TP1043_01_A/local/root/hmi
+%{pfx}/TP1043_01_A/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1043_01_A/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1043_01_A/local/etc/sysconfig/system.ini
+%{pfx}/TP1043_01_A/local/data/customtrend/trend1.csv
+
+%files lfs-TP1043_01_B
+%defattr(-,root,root)
+%{pfx}/TP1043_01_B/local/root/hmi
+%{pfx}/TP1043_01_B/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1043_01_B/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1043_01_B/local/etc/sysconfig/system.ini
+%{pfx}/TP1043_01_B/local/data/customtrend/trend1.csv
+
+%files lfs-TP1043_02_A
+%defattr(-,root,root)
+%{pfx}/TP1043_02_A/local/root/hmi
+%{pfx}/TP1043_02_A/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1043_02_A/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1043_02_A/local/etc/sysconfig/system.ini
+%{pfx}/TP1043_02_A/local/data/customtrend/trend1.csv
+
+%files lfs-TP1043_02_B
+%defattr(-,root,root)
+%{pfx}/TP1043_02_B/local/root/hmi
+%{pfx}/TP1043_02_B/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1043_02_B/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1043_02_B/local/etc/sysconfig/system.ini
+%{pfx}/TP1043_02_B/local/data/customtrend/trend1.csv
+
+%files lfs-TP1070_01_A
+%defattr(-,root,root)
+%{pfx}/TP1070_01_A/local/root/hmi
+%{pfx}/TP1070_01_A/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1070_01_A/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1070_01_A/local/etc/sysconfig/system.ini
+%{pfx}/TP1070_01_A/local/data/customtrend/trend1.csv
+
+%files lfs-TP1070_01_B
+%defattr(-,root,root)
+%{pfx}/TP1070_01_B/local/root/hmi
+%{pfx}/TP1070_01_B/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1070_01_B/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1070_01_B/local/etc/sysconfig/system.ini
+%{pfx}/TP1070_01_B/local/data/customtrend/trend1.csv
+
+%files lfs-TP1070_01_C
+%defattr(-,root,root)
+%{pfx}/TP1070_01_C/local/root/hmi
+%{pfx}/TP1070_01_C/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1070_01_C/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1070_01_C/local/etc/sysconfig/system.ini
+%{pfx}/TP1070_01_C/local/data/customtrend/trend1.csv
+
+%files lfs-TP1070_02_F
+%defattr(-,root,root)
+%{pfx}/TP1070_02_F/local/root/hmi
+%{pfx}/TP1070_02_F/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TP1070_02_F/local/etc/sysconfig/img/splash.png
+%{pfx}/TP1070_02_F/local/etc/sysconfig/system.ini
+%{pfx}/TP1070_02_F/local/data/customtrend/trend1.csv
+
+%files lfs-TPX1070_03_D
+%defattr(-,root,root)
+%{pfx}/TPX1070_03_D/local/root/hmi
+%{pfx}/TPX1070_03_D/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPX1070_03_D/local/etc/sysconfig/img/splash.png
+%{pfx}/TPX1070_03_D/local/etc/sysconfig/system.ini
+%{pfx}/TPX1070_03_D/local/data/customtrend/trend1.csv
+
+%files lfs-TPX1070_03_E
+%defattr(-,root,root)
+%{pfx}/TPX1070_03_E/local/root/hmi
+%{pfx}/TPX1070_03_E/local/root/Front_Center.wav
+%{pfx}/TPX1070_03_E/local/root/Front_Left.wav
+%{pfx}/TPX1070_03_E/local/root/Front_Right.wav
+%{pfx}/TPX1070_03_E/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPX1070_03_E/local/etc/sysconfig/img/splash.png
+%{pfx}/TPX1070_03_E/local/etc/sysconfig/system.ini
+%{pfx}/TPX1070_03_E/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1007_03
+%defattr(-,root,root)
+%{pfx}/TPAC1007_03/local/root/hmi
+%{pfx}/TPAC1007_03/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_03/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_03/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_03/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1007_03/local/data/recipe/AnOut/up_and_down.csv
+%{pfx}/TPAC1007_03/local/data/recipe/AnOut/sine_wave.csv
+%{pfx}/TPAC1007_03/local/data/recipe/DigOut/from_1_to_4.csv
+%{pfx}/TPAC1007_03/local/data/recipe/DigOut/from_1_to_8.csv
+
+%files lfs-TPAC1007_04_AA
+%defattr(-,root,root)
+%{pfx}/TPAC1007_04_AA/local/root/hmi
+%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_04_AA/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_04_AA/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1007_04_AB
+%defattr(-,root,root)
+%{pfx}/TPAC1007_04_AB/local/root/hmi
+%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_04_AB/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_04_AB/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1007_04_AC
+%defattr(-,root,root)
+%{pfx}/TPAC1007_04_AC/local/root/hmi
+%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_04_AC/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_04_AC/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1007_04_AC/local/data/recipe/AnOut/up_and_down.csv
+%{pfx}/TPAC1007_04_AC/local/data/recipe/AnOut/sine_wave.csv
+%{pfx}/TPAC1007_04_AC/local/data/recipe/DigOut/from_1_to_4.csv
+%{pfx}/TPAC1007_04_AC/local/data/recipe/DigOut/from_1_to_8.csv
+
+%files lfs-TPAC1007_04_AD
+%defattr(-,root,root)
+%{pfx}/TPAC1007_04_AD/local/root/hmi
+%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_04_AD/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_04_AD/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1007_04_AE
+%defattr(-,root,root)
+%{pfx}/TPAC1007_04_AE/local/root/hmi
+%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1007_04_AE/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1007_04_AE/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1005
+%defattr(-,root,root)
+%{pfx}/TPAC1005/local/root/hmi
+%{pfx}/TPAC1005/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1005/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1005/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1005/local/data/customtrend/trend1.csv
+
+%files lfs-TPAC1008_02_AA
+%defattr(-,root,root)
+%{pfx}/TPAC1008_02_AA/local/root/hmi
+%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_02_AA/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_02_AA/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_02_AB
+%defattr(-,root,root)
+%{pfx}/TPAC1008_02_AB/local/root/hmi
+%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_02_AB/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_02_AB/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_02_AD
+%defattr(-,root,root)
+%{pfx}/TPAC1008_02_AD/local/root/hmi
+%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_02_AD/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_02_AD/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_02_AE
+%defattr(-,root,root)
+%{pfx}/TPAC1008_02_AE/local/root/hmi
+%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_02_AE/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_02_AE/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_02_AF
+%defattr(-,root,root)
+%{pfx}/TPAC1008_02_AF/local/root/hmi
+%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_02_AF/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_02_AF/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_03_AC
+%defattr(-,root,root)
+%{pfx}/TPAC1008_03_AC/local/root/hmi
+%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_03_AC/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_03_AC/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPAC1008_03_AD
+%defattr(-,root,root)
+%{pfx}/TPAC1008_03_AD/local/root/hmi
+%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/img/splash.png
+%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/system.ini
+%{pfx}/TPAC1008_03_AD/local/data/customtrend/trend1.csv
+%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPAC1008_03_AD/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPLC050_01_AA
+%defattr(-,root,root)
+%{pfx}/TPLC050_01_AA/local/root/hmi
+%{pfx}/TPLC050_01_AA/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPLC050_01_AA/local/etc/sysconfig/img/splash.png
+%{pfx}/TPLC050_01_AA/local/etc/sysconfig/system.ini
+%{pfx}/TPLC050_01_AA/local/data/customtrend/trend1.csv
+
+%files lfs-TPLC100_01_AA
+%defattr(-,root,root)
+%{pfx}/TPLC100_01_AA/local/root/hmi
+%{pfx}/TPLC100_01_AA/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPLC100_01_AA/local/etc/sysconfig/img/splash.png
+%{pfx}/TPLC100_01_AA/local/etc/sysconfig/system.ini
+%{pfx}/TPLC100_01_AA/local/data/customtrend/trend1.csv
+%{pfx}/TPLC100_01_AA/local/etc/sysconfig/iomap0.cmg
+%{pfx}/TPLC100_01_AA/local/etc/sysconfig/network0.cmg
+
+%files lfs-TPLC100_01_AB
+%defattr(-,root,root)
+%{pfx}/TPLC100_01_AB/local/root/hmi
+%{pfx}/TPLC100_01_AB/local/etc/sysconfig/Crosstable.csv
+%{pfx}/TPLC100_01_AB/local/etc/sysconfig/img/splash.png
+%{pfx}/TPLC100_01_AB/local/etc/sysconfig/system.ini
+%{pfx}/TPLC100_01_AB/local/data/customtrend/trend1.csv
+%{pfx}/TPLC100_01_AB/local/etc/sysconfig/iomap0.cmg
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mect_plugins/mect_plugins.spec ltib/dist/lfs-5.1/mect_plugins/mect_plugins.spec
--- ltib.reference/dist/lfs-5.1/mect_plugins/mect_plugins.spec
+++ ltib/dist/lfs-5.1/mect_plugins/mect_plugins.spec
@@ -0,0 +1,117 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Custom Qt plugins for HMI development.
+Name            : mect_plugins
+Version: v3.3.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+URL             : http://www.mect.it/
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just the run-times needed in the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the run-times needed
+on the target.
+
+
+%Description
+%{summary}
+
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n %{name}
+rsync -av --inplace ../../../../projects/%{name}/ ./
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+export MECT_RFSDIR
+MECT_RFSDIR=$DEV_IMAGE
+
+test -r Makefile && make clean
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx qt_atcm.pro
+make -j1
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make -j1 INSTALL_ROOT=$RPM_BUILD_ROOT%{pfx} install
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/lib/libATCMalarms.so
+%{pfx}/usr/lib/libATCMalarms.so.1
+%{pfx}/usr/lib/libATCMalarms.so.1.0
+%{pfx}/usr/lib/libATCMalarms.so.1.0.0
+%{pfx}/usr/lib/libATCMcommon.so
+%{pfx}/usr/lib/libATCMcommon.so.1
+%{pfx}/usr/lib/libATCMcommon.so.1.0
+%{pfx}/usr/lib/libATCMcommon.so.1.0.0
+%{pfx}/usr/lib/libATCMcommunication.so
+%{pfx}/usr/lib/libATCMcommunication.so.1
+%{pfx}/usr/lib/libATCMcommunication.so.1.0
+%{pfx}/usr/lib/libATCMcommunication.so.1.0.0
+%{pfx}/usr/lib/libATCMinputdialog.so
+%{pfx}/usr/lib/libATCMinputdialog.so.1
+%{pfx}/usr/lib/libATCMinputdialog.so.1.0
+%{pfx}/usr/lib/libATCMinputdialog.so.1.0.0
+%{pfx}/usr/lib/libATCMlogger.so
+%{pfx}/usr/lib/libATCMlogger.so.1
+%{pfx}/usr/lib/libATCMlogger.so.1.0
+%{pfx}/usr/lib/libATCMlogger.so.1.0.0
+%{pfx}/usr/lib/libATCMplugin.so
+%{pfx}/usr/lib/libATCMplugin.so.1
+%{pfx}/usr/lib/libATCMplugin.so.1.0
+%{pfx}/usr/lib/libATCMplugin.so.1.0.0
+%{pfx}/usr/lib/libATCMrecipe.so
+%{pfx}/usr/lib/libATCMrecipe.so.1
+%{pfx}/usr/lib/libATCMrecipe.so.1.0
+%{pfx}/usr/lib/libATCMrecipe.so.1.0.0
+%{pfx}/usr/lib/libATCMstore.so
+%{pfx}/usr/lib/libATCMstore.so.1
+%{pfx}/usr/lib/libATCMstore.so.1.0
+%{pfx}/usr/lib/libATCMstore.so.1.0.0
+%{pfx}/usr/lib/libATCMsystem.so
+%{pfx}/usr/lib/libATCMsystem.so.1
+%{pfx}/usr/lib/libATCMsystem.so.1.0
+%{pfx}/usr/lib/libATCMsystem.so.1.0.0
+%{pfx}/usr/lib/libATCMtrend.so
+%{pfx}/usr/lib/libATCMtrend.so.1
+%{pfx}/usr/lib/libATCMtrend.so.1.0
+%{pfx}/usr/lib/libATCMtrend.so.1.0.0
+%{pfx}/usr/lib/libATCMutility.so
+%{pfx}/usr/lib/libATCMutility.so.1
+%{pfx}/usr/lib/libATCMutility.so.1.0
+%{pfx}/usr/lib/libATCMutility.so.1.0.0
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/merge/merge.spec ltib/dist/lfs-5.1/merge/merge.spec
--- ltib.reference/dist/lfs-5.1/merge/merge.spec
+++ ltib/dist/lfs-5.1/merge/merge.spec
@@ -10,40 +10,194 @@
 Group           : System Environment/Utilities
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
-# We have assume the user knows merge file dependencies.
+# We assume that the user knows the dependencies of the merge file(s).
 Autoreqprov     : no
 
+
+%Package rfs
+Summary         : Trimmed merge for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Utilities
+AutoReqProv     : no
+
+%Description rfs
+merge package contents restricted to just the files that are
+needed at run time on the target on the root file system.
+
+%Package lfs
+Summary         : Trimmed merge for local file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Utilities
+Prefix          : %{pfx}/local
+AutoReqProv     : no
+
+%Description lfs
+merge package contents restricted to just the files that are
+needed at run time on the target on the local file system.
+
+
 %Description
-Detects the presence of of merge directory in the top level of the root
-file system builder directory, and if it is present creates a rpm containing
-the directory structure and files beneath the merge directory.
-The purpose of this is to allow the user to add files and directories
-that will get included in the target root file system.
+If a merge directory is detected at the top level of the
+root file system builder directory, it creates an RPM with
+the structure and files of the merge directory.  This allows
+the user to directly add files and directories to the target
+root file system.
 
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
+
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/etc
+chmod 755 $RPM_BUILD_ROOT/%{pfx}/etc
+
 touch $RPM_BUILD_ROOT/%{pfx}/etc/ltib-release
+chmod 666 $RPM_BUILD_ROOT/%{pfx}/etc/ltib-release
 
-for dir in "$PLATFORM_PATH/merge" "$TOP/merge"
-do
-    if [ -d $dir ]
-    then
+for dir in "$PLATFORM_PATH/merge" "$TOP/merge"; do
+    if test -d $dir; then
         cd $dir
-        find . -name CVS -prune -o -perm -444 ! -type b ! -type c -print0 2>/dev/null |  cpio -p0d  --quiet $RPM_BUILD_ROOT/%{pfx}
+        find . -name CVS -prune -o -perm -444 ! -type b ! -type c -print0 2>/dev/null | cpio -p0d --quiet $RPM_BUILD_ROOT%{pfx}
         cd -
     fi
 done
 
+# Symlink /etc/resolv.conf to the RW /local file system.
+( cd $RPM_BUILD_ROOT%{pfx}/etc; ln -sf /local/etc/resolv.conf )
+
+# Symlink /etc/ppp to the RW /local file system.
+( cd $RPM_BUILD_ROOT%{pfx}/etc; ln -sf /local/etc/ppp )
+
+# Create directory /local/root/.ssh
+mkdir -p $RPM_BUILD_ROOT%{pfx}/local/root/.ssh
+# Symlink /etc/dropbear/authorized_keys in /local/root/.ssh
+( cd $RPM_BUILD_ROOT%{pfx}/local/root/.ssh; ln -sf /etc/dropbear/authorized_keys )
+
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
+
 %Files
-%defattr(-,root,root)
-%attr(0777, root, root) %{pfx}/etc/ltib-release
-%{pfx}/*
+%defattr(0644,root,root)
+%{pfx}/etc/asound.conf
+%{pfx}/etc/conf/boa.conf
+%{pfx}/etc/dhclient.conf
+%attr(0600,root,root) %{pfx}/etc/dropbear/authorized_keys
+%{pfx}/etc/fstab
+%{pfx}/etc/group
+%{pfx}/etc/inetd.conf
+%{pfx}/etc/iptables
+%{pfx}/etc/iptables.default
+%{pfx}/etc/ltib-release
+%{pfx}/etc/mdev.conf
+%{pfx}/etc/passwd
+%{pfx}/etc/ppp
+%{pfx}/etc/profile
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/autoexec
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/boa
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/crond
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/iptables
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/mac_sn
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/mdev
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/network
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/openvpn
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/S10setup
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/sdcheck
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/setup
+%attr(0755,root,root) %{pfx}/etc/rc.d/rc.local
+%{pfx}/etc/resolv.conf
+%{pfx}/etc/services
+%attr(0400,root,root) %{pfx}/etc/shadow
+%attr(0755,root,root) %{pfx}/usr/bin/fcrts.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/openvpn-safe.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/ovpn-mect-down.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/ovpn-mect-up.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/rs_notify_alert.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/usb3g.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/wifi.sh
+%{pfx}/local/etc/icinga/nrpe.cfg
+%{pfx}/local/etc/ppp/chat-usb3g
+%attr(0755,root,root) %{pfx}/local/etc/ppp/ip-down
+%attr(0755,root,root) %{pfx}/local/etc/ppp/ip-up
+%{pfx}/local/etc/ppp/peers/usb3g
+%{pfx}/local/etc/resolv.conf
+%{pfx}/local/etc/sysconfig/brightness
+%{pfx}/local/etc/sysconfig/lang_table.csv
+%{pfx}/local/etc/sysconfig/net.conf
+%{pfx}/local/root/make_usb_device
+%dir %attr(0700,root,root) %{pfx}/local/root/.ssh
+%{pfx}/local/root/.ssh/authorized_keys
+
+
+%Files rfs
+%defattr(0644,root,root)
+%{pfx}/etc/asound.conf
+%{pfx}/etc/conf/boa.conf
+%{pfx}/etc/dhclient.conf
+%dir %attr(0700,root,root) %{pfx}/etc/dropbear
+%attr(0600,root,root) %{pfx}/etc/dropbear/authorized_keys
+%{pfx}/etc/fstab
+%{pfx}/etc/group
+%{pfx}/etc/inetd.conf
+%{pfx}/etc/iptables
+%{pfx}/etc/iptables.default
+%{pfx}/etc/ltib-release
+%{pfx}/etc/mdev.conf
+%{pfx}/etc/passwd
+%{pfx}/etc/ppp
+%{pfx}/etc/profile
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/autoexec
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/boa
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/crond
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/iptables
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/mac_sn
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/mdev
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/network
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/openvpn
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/S10setup
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/sdcheck
+%attr(0755,root,root) %{pfx}/etc/rc.d/init.d/setup
+%attr(0755,root,root) %{pfx}/etc/rc.d/rc.local
+%{pfx}/etc/resolv.conf
+%{pfx}/etc/services
+%attr(0400,root,root) %{pfx}/etc/shadow
+%attr(0755,root,root) %{pfx}/usr/bin/fcrts.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/openvpn-safe.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/ovpn-mect-down.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/ovpn-mect-up.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/rs_notify_alert.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/usb3g.sh
+%attr(0755,root,root) %{pfx}/usr/sbin/wifi.sh
+
+%Files lfs
+%defattr(0644,root,root)
+%{pfx}/local/etc/icinga/nrpe.cfg
+%{pfx}/local/etc/ppp/chat-usb3g
+%attr(0755,root,root) %{pfx}/local/etc/ppp/ip-down
+%attr(0755,root,root) %{pfx}/local/etc/ppp/ip-up
+%{pfx}/local/etc/ppp/peers/usb3g
+%{pfx}/local/etc/resolv.conf
+%{pfx}/local/etc/sysconfig/brightness
+%{pfx}/local/etc/sysconfig/lang_table.csv
+%{pfx}/local/etc/sysconfig/net.conf
+%{pfx}/local/root/make_usb_device
+%dir %attr(0700,root,root) %{pfx}/local/root/.ssh
+%{pfx}/local/root/.ssh/authorized_keys
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mtd-utils/mtd-utils.spec ltib/dist/lfs-5.1/mtd-utils/mtd-utils.spec
--- ltib.reference/dist/lfs-5.1/mtd-utils/mtd-utils.spec
+++ ltib/dist/lfs-5.1/mtd-utils/mtd-utils.spec
@@ -2,15 +2,32 @@
 
 Summary		: Memory Technology Device tools
 Name		: mtd-utils
-Version		: 1.5.0
+Version		: 201006
 Release		: 1
 License		: GPL
 Vendor		: Freescale Semiconductor
 Packager	: Ross Wille
 Group		: Applications/System
-Source		: %{name}-%{version}.tar.gz
+Source		: %{name}-%{version}.tar.bz2
+Patch1          : mtd-utils-201006-4K-218-224-support.patch
+Patch2          : mtd-utils-201006-1418122799.patch
+Patch3          : mtd-utils-gcc_v5.4.patch
 BuildRoot	: %{_tmppath}/%{name}
 Prefix		: %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed mtd-utils for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+mtd-utils package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
@@ -20,20 +37,53 @@
   SHA1 d769da93a56590c23ce9430a1d970e31e835ae88
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n %{name}
+%patch1 -p1
+%patch2 -p1
+
+%ifnarch arm
+if test "$(lsb_release -r | cut -f2 | cut -d. -f1)" -gt 14; then
+%patch3 -p1
+fi
+%endif
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make -j1 WITHOUT_XATTR=1
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make -j1 DESTDIR=$RPM_BUILD_ROOT/%{pfx} SBINDIR=%{_prefix}/bin MANDIR=%{_mandir} install
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/include/mtd
-install -m0644 include/mtd/*.h $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/include/mtd
+make -j1 DESTDIR=$RPM_BUILD_ROOT%{pfx} SBINDIR=%{_prefix}/bin MANDIR=%{_mandir} install
+
+mkdir -p $RPM_BUILD_ROOT%{pfx}%{_prefix}/include/mtd
+install -m 0644 include/mtd/*.h $RPM_BUILD_ROOT%{pfx}%{_prefix}/include/mtd
+
+cd %{_builddir}/%{name}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_mandir}, d;
+    \,^%{pfx}%{_prefix}/include, d;
+    \,^%{pfx}%{_bindir}/mkfs.jffs2, d;
+    \,^%{pfx}%{_bindir}/mkfs.ubifs, d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mxc-misc/imx-test.spec ltib/dist/lfs-5.1/mxc-misc/imx-test.spec
--- ltib.reference/dist/lfs-5.1/mxc-misc/imx-test.spec
+++ ltib/dist/lfs-5.1/mxc-misc/imx-test.spec
@@ -2,23 +2,43 @@
 
 Summary         : platform specific unit tests for mxc platform
 Name            : imx-test
-Version         : 2.6.35.3
-Release         : 1.1.0
+Version         : 11.01.00
+Release         : 1
 License         : GPL/Other
 Vendor          : Freescale
 Packager        : Rob Herring
 Group           : Test
-Source          : %{name}-%{version}-%{release}.tar.gz
+Source          : %{name}-%{version}.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed imx-test for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Test
+AutoReqProv     : no
+
+%Description rfs
+imx-test package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
-%setup -n %{name}-%{version}-%{release}
+export LC_ALL
+LC_ALL=C
+
+%setup
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 if [ -z "$PKG_KERNEL_KBUILD_PRECONFIG" ]
 then
       KERNELDIR="$PWD/../linux"
@@ -45,6 +65,9 @@
 make -j1 PLATFORM=$PLATFORM_UPPER INCLUDE="$INCLUDE" test
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 if [ -z "$PKG_KERNEL_KBUILD_PRECONFIG" ]
 then
       KERNELDIR="$PWD/../linux"
@@ -69,9 +92,21 @@
 PLATFORM_UPPER="$(echo $PLATFORM | awk '{print toupper($0)}')"
 make PLATFORM=$PLATFORM_UPPER DESTDIR=$RPM_BUILD_ROOT/%{pfx}/unit_tests install
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
-%defattr(755,root,root)
-%{pfx}/*
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/mysql/mysql.spec ltib/dist/lfs-5.1/mysql/mysql.spec
--- ltib.reference/dist/lfs-5.1/mysql/mysql.spec
+++ ltib/dist/lfs-5.1/mysql/mysql.spec
@@ -13,16 +13,36 @@
 Patch1          : mysql-4.1.12-gcc-4.2.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed mysql for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Daemons
+AutoReqProv     : no
+
+%Description rfs
+mysql package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n  %{name}-%{version}
 %patch0 -p1
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=/usr --host=$CFGHOST --build=%{_build} \
 	--enable-so	\
 	--with-named-curses-libs=-lncurses	\
@@ -35,21 +55,38 @@
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}
 make install prefix=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
-cd $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/mysql
-mv $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/mysql/* ../
-rm mysql -rf
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
 
+cd $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/mysql
+mv * ..
+cd ..
+rmdir mysql
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/man, d;
+    \,^%{pfx}%{_includedir}, d;
+    \,^%{pfx}%{_prefix}/mysql-test/include, d;
+    \,^%{pfx}%{_prefix}/mysql-test, d;
+    \,^%{pfx}%{_prefix}/sql-bench, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
-
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/nagios-plugins/nagios-plugins.spec ltib/dist/lfs-5.1/nagios-plugins/nagios-plugins.spec
--- ltib.reference/dist/lfs-5.1/nagios-plugins/nagios-plugins.spec
+++ ltib/dist/lfs-5.1/nagios-plugins/nagios-plugins.spec
@@ -0,0 +1,71 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define mb_name check_modbus
+%define mb_vers 0.46
+
+Summary         : Host/service/network monitoring plugins for Nagios
+Name            : nagios-plugins
+Version         : 1.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{mb_name}-%{mb_vers}.tar.gz
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -c
+
+cd %{mb_name}-%{mb_vers}
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+cd %{mb_name}-%{mb_vers}
+make
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+cd %{mb_name}-%{mb_vers}
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/check_modbus
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/ncurses/ncurses.spec ltib/dist/lfs-5.1/ncurses/ncurses.spec
--- ltib.reference/dist/lfs-5.1/ncurses/ncurses.spec
+++ ltib/dist/lfs-5.1/ncurses/ncurses.spec
@@ -14,17 +14,37 @@
 Patch2          : ncurses-5.3-wint_t.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed ncurses for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+ncurses package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch0 -p1 
 %patch1 -p1
 %patch2 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 CFLAGS="%{optflags} -DPURE_TERMINFO -DSVR4_CURSES"
 %define optflags $CFLAGS
 if [ "$GNUTARCH" != m68knommu ]
@@ -45,6 +65,9 @@
 mv misc/run_tic.sh.tmp misc/run_tic.sh
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make -j1 install DESTDIR=$RPM_BUILD_ROOT/%{pfx} includedir=%{_prefix}/include/ncurses libdir=%{_prefix}/lib mandir=%{_mandir}
 
@@ -59,8 +82,7 @@
 done
 mv $RPM_BUILD_ROOT/%{pfx}/%{_mandir}/tack.1 $RPM_BUILD_ROOT/%{pfx}/%{_mandir}/man1
 
-if [ "$PKG_NCURSES_WANT_REDUCED_SET" = "y" ]
-then
+if [ "$PKG_NCURSES_WANT_REDUCED_SET" = "y" ]; then
     echo "Only installing minimal terminfo, saving >5Meg"
     USR_SHARE=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}/share
     
@@ -94,7 +116,13 @@
     rm -rf $USR_SHARE/termtemp
 fi
 
+# For alsa-util
+ln -s libncurses.so $RPM_BUILD_ROOT/%{pfx}/usr/lib/libtinfo.so
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
@@ -102,4 +130,34 @@
 %defattr(-,root,root)
 %{pfx}/*
 
-
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/captoinfo
+%{pfx}/usr/bin/clear
+%{pfx}/usr/bin/infocmp
+%{pfx}/usr/bin/infotocap
+%{pfx}/usr/bin/reset
+%{pfx}/usr/bin/tack
+%{pfx}/usr/bin/tic
+%{pfx}/usr/bin/toe
+%{pfx}/usr/bin/tput
+%{pfx}/usr/bin/tset
+%{pfx}/usr/lib/libcurses.so
+%{pfx}/usr/lib/libform.so
+%{pfx}/usr/lib/libform.so.5
+%{pfx}/usr/lib/libform.so.5.3
+%{pfx}/usr/lib/libmenu.so
+%{pfx}/usr/lib/libmenu.so.5
+%{pfx}/usr/lib/libmenu.so.5.3
+%{pfx}/usr/lib/libncurses.so
+%{pfx}/usr/lib/libncurses.so.5
+%{pfx}/usr/lib/libncurses.so.5.3
+%{pfx}/usr/lib/libpanel.so
+%{pfx}/usr/lib/libpanel.so.5
+%{pfx}/usr/lib/libpanel.so.5.3
+%{pfx}/usr/lib/libtinfo.so
+%{pfx}/usr/lib/terminfo
+%{pfx}/usr/share/tabset/std
+%{pfx}/usr/share/tabset/stdcrt
+%{pfx}/usr/share/tabset/vt100
+%{pfx}/usr/share/tabset/vt300
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/nrpe/nrpe.spec ltib/dist/lfs-5.1/nrpe/nrpe.spec
--- ltib.reference/dist/lfs-5.1/nrpe/nrpe.spec
+++ ltib/dist/lfs-5.1/nrpe/nrpe.spec
@@ -0,0 +1,68 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Host/service/network monitoring agent for Nagios
+Name            : nrpe
+Version         : 2.15
+Release         : 1
+License         : GPLv2
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.gz
+Patch1          : nrpe-2.15-fix-crosscompile-configure.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+%patch1 -p1
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --with-ssl-inc=$DEV_IMAGE/usr --with-ssl-lib=$DEV_IMAGE/usr/lib --enable-command-args
+make
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+mkdir -p $RPM_BUILD_ROOT%{pfx}%{_prefix}
+
+make DESTDIR=$RPM_BUILD_ROOT%{pfx} NAGIOS_INSTALL_OPTS= NRPE_INSTALL_OPTS= install
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/nrpe
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/openssl/openssl.spec ltib/dist/lfs-5.1/openssl/openssl.spec
--- ltib.reference/dist/lfs-5.1/openssl/openssl.spec
+++ ltib/dist/lfs-5.1/openssl/openssl.spec
@@ -1,25 +1,47 @@
-%define base %(echo %{_prefix} | sed -e s,/usr.*$,,)
 %define pfx /opt/freescale/rootfs/%{_target_cpu}
 
 Summary         : Secure Sockets Layer toolkit
 Name            : openssl
-Version         : 1.0.1c
+Version         : 1.0.1s
 Release         : 1
 License         : BSD style
 Vendor          : Freescale
 Packager        : Stuart Hughes
 Group           : System Environment/Libraries
 Source          : %{name}-%{version}.tar.gz
+Patch1          : openssl-1.0.1s-fix_parallel_build.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup 
 
+%patch1 -p1
+
 %Build
+export LC_ALL
+LC_ALL=C
+
 case $ENDIAN in
     big)
         XTRA_OPTS="-DB_ENDIAN"
@@ -42,33 +64,52 @@
        OSSL_ARCH="linux-$LINTARCH"
        ;;
 esac
-./Configure $OSSL_ARCH --prefix=%{_prefix} --install_prefix=$RPM_BUILD_ROOT/%{pfx} shared no-asm $XTRA_OPTS
+
+export TARGETMACH
+export TARGETMACH=$CFGHOST
+export BUILDMACH
+export BUILDMACH=%{_build}
+
+./Configure $OSSL_ARCH --prefix=%{_prefix} shared no-asm $XTRA_OPTS
 make -j1
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-#SHLIB_VERSION_NUMBER=1.0.0
-#for i in lib %{_prefix}/lib %{_prefix}/sbin %{_prefix}/include
-#do
-#    mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{base}/$i
-#done
-#VER="`perl -e '$_  = shift; chop; print' %{version}`"
-#for i in libcrypto.so libssl.so
-#do 
-#    cp -a $i.$SHLIB_VERSION_NUMBER $RPM_BUILD_ROOT/%{pfx}/%{base}/lib/
-#    install -d $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib
-#    ln -s ../../lib/$i.$SHLIB_VERSION_NUMBER $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/$i
-#done
-#cp -a apps/openssl $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/sbin
-#cp -Lr include/openssl $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/include
-#mkdir $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/pkgconfig
-#cp openssl.pc $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/pkgconfig/
 
-make install -j1
+make INSTALL_PREFIX=$RPM_BUILD_ROOT/%{pfx} install_sw
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/openssl
+%{pfx}/usr/lib/engines/lib4758cca.so
+%{pfx}/usr/lib/engines/libaep.so
+%{pfx}/usr/lib/engines/libatalla.so
+%{pfx}/usr/lib/engines/libcapi.so
+%{pfx}/usr/lib/engines/libchil.so
+%{pfx}/usr/lib/engines/libcswift.so
+%{pfx}/usr/lib/engines/libgmp.so
+%{pfx}/usr/lib/engines/libgost.so
+%{pfx}/usr/lib/engines/libnuron.so
+%{pfx}/usr/lib/engines/libpadlock.so
+%{pfx}/usr/lib/engines/libsureware.so
+%{pfx}/usr/lib/engines/libubsec.so
+%{pfx}/usr/lib/libcrypto.so
+%{pfx}/usr/lib/libcrypto.so.1.0.0
+%{pfx}/usr/lib/libssl.so
+%{pfx}/usr/lib/libssl.so.1.0.0
+%{pfx}/usr/ssl/certs
+%{pfx}/usr/ssl/openssl.cnf
+%{pfx}/usr/ssl/private
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/openvpn/openvpn.spec ltib/dist/lfs-5.1/openvpn/openvpn.spec
--- ltib.reference/dist/lfs-5.1/openvpn/openvpn.spec
+++ ltib/dist/lfs-5.1/openvpn/openvpn.spec
@@ -0,0 +1,72 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : A full-featured SSL VPN solution
+Name            : openvpn
+Version         : 2.4.4
+Release         : 1
+License         : GPLv2
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+Source          : %{name}-%{version}.tar.xz
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
+
+%Description
+OpenVPN is a robust and highly flexible tunneling application
+that uses all of the encryption, authentication, and
+certification features of the OpenSSL library to securely
+tunnel IP networks over a single UDP or TCP port.  It can
+use the Marcus Franz Xaver Johannes Oberhumer's LZO library
+for compression.
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup 
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --disable-plugin-auth-pam
+
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make -j1 install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/sbin/openvpn
+%{pfx}/usr/lib/openvpn/plugins/openvpn-plugin-down-root.so
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/pjproject/pjproject.spec ltib/dist/lfs-5.1/pjproject/pjproject.spec
--- ltib.reference/dist/lfs-5.1/pjproject/pjproject.spec
+++ ltib/dist/lfs-5.1/pjproject/pjproject.spec
@@ -0,0 +1,129 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : SIP, Media, and NAT Traversal Library
+Name            : pjproject
+Version         : 2.8
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+LD=gcc
+export LD
+
+LDFLAGS="-L$DEV_IMAGE/usr/lib"
+export LDFLAGS
+
+./configure \
+    --prefix=%{_prefix} \
+    --host=$CFGHOST \
+    --build=%{_build} \
+    --enable-shared \
+    --disable-speex-codec \
+    --disable-speex-aec \
+    --disable-ilbc-codec \
+    --disable-g711-codec \
+    --disable-g711-plc \
+    --disable-l16-codec \
+    --disable-video \
+    --disable-bcg729 \
+    --disable-ffmpeg \
+    --disable-libwebrtc \
+    --disable-libyuv \
+    --disable-opencore-amr \
+    --disable-openh264 \
+    --disable-opus \
+    --disable-sdl \
+    --disable-silk \
+    --disable-ssl \
+    --disable-v412 \
+    --disable-v4l2 \
+
+make -j1 dep
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make DESTDIR=$RPM_BUILD_ROOT/%{pfx} install
+install -m 755 -D pjsip-apps/bin/pjsua-arm-none-linux-gnueabi $RPM_BUILD_ROOT/%{pfx}/usr/bin/pjsua
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/pjsua
+%{pfx}/usr/lib/libg7221codec.so
+%{pfx}/usr/lib/libg7221codec.so.2
+%{pfx}/usr/lib/libgsmcodec.so
+%{pfx}/usr/lib/libgsmcodec.so.2
+%{pfx}/usr/lib/libpjlib-util.so
+%{pfx}/usr/lib/libpjlib-util.so.2
+%{pfx}/usr/lib/libpjmedia-audiodev.so
+%{pfx}/usr/lib/libpjmedia-audiodev.so.2
+%{pfx}/usr/lib/libpjmedia-codec.so
+%{pfx}/usr/lib/libpjmedia-codec.so.2
+%{pfx}/usr/lib/libpjmedia.so
+%{pfx}/usr/lib/libpjmedia.so.2
+%{pfx}/usr/lib/libpjmedia-videodev.so
+%{pfx}/usr/lib/libpjmedia-videodev.so.2
+%{pfx}/usr/lib/libpjnath.so
+%{pfx}/usr/lib/libpjnath.so.2
+%{pfx}/usr/lib/libpjsip-simple.so
+%{pfx}/usr/lib/libpjsip-simple.so.2
+%{pfx}/usr/lib/libpjsip.so
+%{pfx}/usr/lib/libpjsip.so.2
+%{pfx}/usr/lib/libpjsip-ua.so
+%{pfx}/usr/lib/libpjsip-ua.so.2
+%{pfx}/usr/lib/libpj.so
+%{pfx}/usr/lib/libpj.so.2
+%{pfx}/usr/lib/libpjsua2.so
+%{pfx}/usr/lib/libpjsua2.so.2
+%{pfx}/usr/lib/libpjsua.so
+%{pfx}/usr/lib/libpjsua.so.2
+%{pfx}/usr/lib/libresample.so
+%{pfx}/usr/lib/libresample.so.2
+%{pfx}/usr/lib/libsrtp.so
+%{pfx}/usr/lib/libsrtp.so.2
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/pkgconfig/pkgconfig.spec ltib/dist/lfs-5.1/pkgconfig/pkgconfig.spec
--- ltib.reference/dist/lfs-5.1/pkgconfig/pkgconfig.spec
+++ ltib/dist/lfs-5.1/pkgconfig/pkgconfig.spec
@@ -10,6 +10,7 @@
 Group           : Development/Tools
 Source          : pkg-config-%{version}.tar.gz
 Patch0          : pkg-config-0.21-prefix_mungling.patch
+Patch1          : pkg-config-0.21-gcc_5.4.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
 
@@ -19,12 +20,13 @@
 %Prep
 %setup -n pkg-config-%{version}
 %patch0 -p1
+%patch1 -p1
 
 %Build
 # don't add --build as glib will fail for a host build due to 
 # stupid incorrect cross compile detection
 ./configure --prefix=%{_prefix} --host=$CFGHOST
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 %Install
 rm -rf $RPM_BUILD_ROOT
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/ppp/ppp.spec ltib/dist/lfs-5.1/ppp/ppp.spec
--- ltib.reference/dist/lfs-5.1/ppp/ppp.spec
+++ ltib/dist/lfs-5.1/ppp/ppp.spec
@@ -13,16 +13,36 @@
 Patch1          : ppp-2.4.3-hspeed.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed ppp for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Daemons
+AutoReqProv     : no
+
+%Description rfs
+ppp package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup 
 %patch0 -p1
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --mandir=%{_mandir}
 if [ "$PKG_PPP_WANT_FILTER" = "y" ]
 then
@@ -34,15 +54,29 @@
 
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make -j1 install INSTALL=install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/var/lock
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( -not -type d \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}/share/man, d;
+    \,^%{pfx}/include, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%attr(4554,root,root)  %{pfx}//lib/pppd/2.4.4/pppoatm.so
-%attr(4554,root,root)  %{pfx}//lib/pppd/2.4.4/rp-pppoe.so
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/prelink/prelink.spec ltib/dist/lfs-5.1/prelink/prelink.spec
--- ltib.reference/dist/lfs-5.1/prelink/prelink.spec
+++ ltib/dist/lfs-5.1/prelink/prelink.spec
@@ -0,0 +1,35 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : ELF prelinking utility to speed up dynamic linking.
+Name            : prelink
+Version         : 20130503
+Release         : 1
+License         : GPLv2+
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System/Tools
+URL             : https://people.redhat.com/jakub/prelink/
+Source          : %{name}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+
+%Description
+%{summary}
+
+%Prep
+%setup -n %{name}
+
+%Build
+./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
+make
+
+%Install
+rm -rf $RPM_BUILD_ROOT
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+%Clean
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/qt/qt-embedded.spec ltib/dist/lfs-5.1/qt/qt-embedded.spec
--- ltib.reference/dist/lfs-5.1/qt/qt-embedded.spec
+++ ltib/dist/lfs-5.1/qt/qt-embedded.spec
@@ -1,165 +1,163 @@
 %define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define archivename qt-everywhere-opensource-src
 
 Summary         : Qt
-Name            : qt-everywhere-opensource-src
-Version         : 4.6.0
-Release         : 0
-License         : GNU GPL
+Name            : qt-embedded
+Version         : 4.8.5
+Release         : 1
+License         : LGPL v2.1
 Vendor          : Freescale
 Packager        : Rogerio Pimentel
 Group           : System Environment/Libraries
-Source          : %{name}-%{version}.tar.gz
-BuildRoot       : %{_tmppath}/%{name}
+URL             : http://get.qt.nokia.com/qt/source/%{archivename}-%{version}.tar.gz
+Source          : %{archivename}-%{version}.tar.gz
+Patch1          : %{archivename}-%{version}-1394522957.patch
+Patch2          : %{archivename}-%{version}-1420823826.patch
+Patch3          : %{archivename}-%{version}-1420823825.patch
+BuildRoot       : %{_tmppath}/%{name}-%{version}
 Prefix          : %{pfx}
-URL             : http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.6.0.tar.gz
+AutoReqProv     : no
+
+
+%if %{?toolchain:0}%{!?toolchain:1}
+
+%Package rfs
+Summary         : Trimmed qt-embedded for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+qt-embedded package contents restricted to just the files that
+are needed at run time on the target.
+
+%endif
+
 
 %Description
 %{summary}
 
 %Prep
-%setup
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{archivename}-%{version}
 
 #Checking what packages are available
 
 export XTRA_OPTS=""
 export XTRA_OPTS_CONFIG=""
 
-if [ -n "$PKG_QT_PHONON" ]
-then
-    export XTRA_OPTS="$XTRA_OPTS -multimedia -phonon -phonon-backend -lgstreamer-0.10"
-    export XTRA_OPTS_CONFIG="$XTRA_OPTS_CONFIG -lgstreamer-0.10 -lxml2 -lasound"
-fi
-
-#if PKG_AMD_GPU_BIN_MX51 is already installed, uncomment the following line to add OpenGLES 2 support
-#export XTRA_OPTS_CONFIG="$XTRA_OPTS_CONFIG -lGLESv2 -lEGL -lgsl -lc2d -lpanel2"
-
-#if PKG_MBX_BIN is already installed, uncomment the following line to add OpenGLES 1.1 support
-#export XTRA_OPTS_CONFIG="$XTRA_OPTS_CONFIG -lEGL -lEGL"
-
 mkdir mkspecs/qws/linux-g++-mx
 initscript=mkspecs/qws/linux-g++-mx/qmake.conf
 cat > $initscript << EOF
+include(../..//common/gcc-base-unix.conf)
+include(../..//common/g++-unix.conf)
+include(../../common/linux.conf)
+include(../../common/qws.conf)
+
 #
 # qmake configuration for building with arm-none-linux-gnueabi-g++
 #
 
-QMAKE_CC		= arm-none-linux-gnueabi-gcc
-QMAKE_CFLAGS		+= -pipe
-QMAKE_CFLAGS_DEPS	+= -M
-QMAKE_CFLAGS_WARN_ON	+= -Wall -W
-QMAKE_CFLAGS_WARN_OFF	+= -w
-QMAKE_CFLAGS_RELEASE	+= -O2
-QMAKE_CFLAGS_DEBUG	+= -g
-QMAKE_CFLAGS_SHLIB	+= -fPIC
-QMAKE_CFLAGS_STATIC_LIB	+= -fPIC
-QMAKE_CFLAGS_YACC	+= -Wno-unused -Wno-parentheses
-QMAKE_CFLAGS_HIDESYMS   += -fvisibility=hidden
-QMAKE_CFLAGS_PRECOMPILE += -x c-header -c \${QMAKE_PCH_INPUT} -o \${QMAKE_PCH_OUTPUT}
-QMAKE_CFLAGS_USE_PRECOMPILE += -include \${QMAKE_PCH_OUTPUT_BASE}
-
-QMAKE_CXX		= arm-none-linux-gnueabi-g++
-QMAKE_CXXFLAGS		+= \$\$QMAKE_CFLAGS
-QMAKE_CXXFLAGS_DEPS	+= \$\$QMAKE_CFLAGS_DEPS
-QMAKE_CXXFLAGS_WARN_ON	+= \$\$QMAKE_CFLAGS_WARN_ON
-QMAKE_CXXFLAGS_WARN_OFF	+= \$\$QMAKE_CFLAGS_WARN_OFF
-QMAKE_CXXFLAGS_RELEASE	+= \$\$QMAKE_CFLAGS_RELEASE
-QMAKE_CXXFLAGS_DEBUG	+= \$\$QMAKE_CFLAGS_DEBUG
-QMAKE_CXXFLAGS_SHLIB	+= \$\$QMAKE_CFLAGS_SHLIB
-QMAKE_CXXFLAGS_STATIC_LIB += \$\$QMAKE_CFLAGS_STATIC_LIB
-QMAKE_CXXFLAGS_YACC	+= \$\$QMAKE_CFLAGS_YACC
-QMAKE_CXXFLAGS_HIDESYMS += \$\$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
-QMAKE_CXXFLAGS_PRECOMPILE += -x c++-header -c \${QMAKE_PCH_INPUT} -o \${QMAKE_PCH_OUTPUT}
-QMAKE_CXXFLAGS_USE_PRECOMPILE = \$\$QMAKE_CFLAGS_USE_PRECOMPILE
-
-QMAKE_LINK		= arm-none-linux-gnueabi-g++
-QMAKE_LINK_SHLIB	= arm-none-linux-gnueabi-g++
-QMAKE_LINK_C		= arm-none-linux-gnueabi-gcc
-QMAKE_LINK_C_SHLIB	= arm-none-linux-gnueabi-gcc
-QMAKE_LFLAGS		+=
-QMAKE_LFLAGS_RELEASE	+= -Wl,-O1
-QMAKE_LFLAGS_DEBUG	+=
-QMAKE_LFLAGS_APP	+=
-QMAKE_LFLAGS_SHLIB	+= -shared
-QMAKE_LFLAGS_PLUGIN	+= \$\$QMAKE_LFLAGS_SHLIB
-QMAKE_LFLAGS_SONAME	+= -Wl,-soname,
-QMAKE_LFLAGS_THREAD	+=
-QMAKE_LFLAGS_NOUNDEF	+= -Wl,--no-undefined
-QMAKE_RPATH		= -Wl,-rpath,
+QMAKE_CC                       = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-gcc
+QMAKE_CFLAGS                  += -pipe
+QMAKE_CFLAGS_DEPS             += -M
+QMAKE_CFLAGS_WARN_ON          += -Wall -W
+QMAKE_CFLAGS_WARN_OFF         += -w
+QMAKE_CFLAGS_RELEASE          += -O2
+QMAKE_CFLAGS_DEBUG            += -g
+QMAKE_CFLAGS_SHLIB            += -fPIC
+QMAKE_CFLAGS_STATIC_LIB       += -fPIC
+QMAKE_CFLAGS_YACC             += -Wno-unused -Wno-parentheses
+QMAKE_CFLAGS_HIDESYMS         += -fvisibility=hidden
+#QMAKE_CFLAGS_PRECOMPILE       += -x c-header -c \${QMAKE_PCH_INPUT} -o \${QMAKE_PCH_OUTPUT}
+#QMAKE_CFLAGS_USE_PRECOMPILE   += -include \${QMAKE_PCH_OUTPUT_BASE}
+
+QMAKE_CXX                      = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-g++
+QMAKE_CXXFLAGS                += \$\$QMAKE_CFLAGS
+QMAKE_CXXFLAGS_DEPS           += \$\$QMAKE_CFLAGS_DEPS
+QMAKE_CXXFLAGS_WARN_ON        += \$\$QMAKE_CFLAGS_WARN_ON
+QMAKE_CXXFLAGS_WARN_OFF       += \$\$QMAKE_CFLAGS_WARN_OFF
+QMAKE_CXXFLAGS_RELEASE        += \$\$QMAKE_CFLAGS_RELEASE
+QMAKE_CXXFLAGS_DEBUG          += \$\$QMAKE_CFLAGS_DEBUG
+QMAKE_CXXFLAGS_SHLIB          += \$\$QMAKE_CFLAGS_SHLIB
+QMAKE_CXXFLAGS_STATIC_LIB     += \$\$QMAKE_CFLAGS_STATIC_LIB
+QMAKE_CXXFLAGS_YACC           += \$\$QMAKE_CFLAGS_YACC
+QMAKE_CXXFLAGS_HIDESYMS       += \$\$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
+#QMAKE_CXXFLAGS_PRECOMPILE     += -x c++-header -c \${QMAKE_PCH_INPUT} -o \${QMAKE_PCH_OUTPUT}
+#QMAKE_CXXFLAGS_USE_PRECOMPILE  = \$\$QMAKE_CFLAGS_USE_PRECOMPILE
+
+QMAKE_LINK                     = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-g++
+QMAKE_LINK_SHLIB               = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-g++
+QMAKE_LINK_C                   = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-gcc
+QMAKE_LINK_C_SHLIB             = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-gcc
+QMAKE_LFLAGS                  +=
+QMAKE_LFLAGS_RELEASE          += -Wl,-O1
+QMAKE_LFLAGS_DEBUG            +=
+QMAKE_LFLAGS_APP              +=
+QMAKE_LFLAGS_SHLIB            += -shared
+QMAKE_LFLAGS_PLUGIN           += \$\$QMAKE_LFLAGS_SHLIB
+QMAKE_LFLAGS_SONAME           += -Wl,-soname,
+QMAKE_LFLAGS_THREAD           +=
+QMAKE_LFLAGS_NOUNDEF          += -Wl,--no-undefined
+QMAKE_LFLAGS_RPATH             = -Wl,-rpath,
 
-QMAKE_PCH_OUTPUT_EXT    = .gch
+QMAKE_PCH_OUTPUT_EXT           = .gch
 
 # -Bsymbolic-functions (ld) support
-QMAKE_LFLAGS_BSYMBOLIC_FUNC = -Wl,-Bsymbolic-functions
-QMAKE_LFLAGS_DYNAMIC_LIST = -Wl,--dynamic-list,
+QMAKE_LFLAGS_BSYMBOLIC_FUNC    = -Wl,-Bsymbolic-functions
+QMAKE_LFLAGS_DYNAMIC_LIST      = -Wl,--dynamic-list,
 
-QMAKE_CFLAGS_THREAD	+= -D_REENTRANT
-QMAKE_CXXFLAGS_THREAD	+= \$\$QMAKE_CFLAGS_THREAD
+QMAKE_CFLAGS_THREAD           += -D_REENTRANT
+QMAKE_CXXFLAGS_THREAD         += \$\$QMAKE_CFLAGS_THREAD
 
-QMAKE_INCDIR          = $RPM_BUILD_DIR/../../rootfs/usr/include $RPM_BUILD_DIR/../../rootfs/usr/include/glib-2.0 \
-			$RPM_BUILD_DIR/../../rootfs/usr/lib/glib-2.0/include/ $RPM_BUILD_DIR/../../rootfs/usr/include/gstreamer-0.10/ \
-			$RPM_BUILD_DIR/../../rootfs/usr/include/libxml2/ $RPM_BUILD_DIR/../../rootfs/usr/include/freetype2
-QMAKE_LIBDIR          = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_X11      =
-QMAKE_LIBDIR_X11      =
-QMAKE_INCDIR_QT       = \$\$[QT_INSTALL_HEADERS]
-QMAKE_LIBDIR_QT       = \$\$[QT_INSTALL_LIBS]
-QMAKE_INCDIR_OPENGL   = $RPM_BUILD_DIR/../../rootfs/usr/include/GL
-QMAKE_LIBDIR_OPENGL   = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_POWERVR  = $RPM_BUILD_DIR/../../rootfs/usr/include
-QMAKE_INCDIR_OPENGL_ES1 = $RPM_BUILD_DIR/../../rootfs/usr/include/GLES
-QMAKE_LIBDIR_OPENGL_ES1 = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_OPENGL_ES1CL = $RPM_BUILD_DIR/../../rootfs/usr/include/GLES
-QMAKE_LIBDIR_OPENGL_ES1CL = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_OPENGL_ES2 = $RPM_BUILD_DIR/../../rootfs/usr/include/GLES2
-QMAKE_LIBDIR_OPENGL_ES2 = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_EGL      = $RPM_BUILD_DIR/../../rootfs/usr/include/GL
-QMAKE_LIBDIR_EGL      = $RPM_BUILD_DIR/../../rootfs/usr/lib
-QMAKE_INCDIR_OPENVG   =
-QMAKE_LIBDIR_OPENVG   =
-
-QMAKE_LIBS            = -lglib-2.0 -lgthread-2.0 -lz -lgmodule-2.0 -lgobject-2.0 -lts -lfreetype $XTRA_OPTS_CONFIG
-QMAKE_LIBS_DYNLOAD    = -ldl
-QMAKE_LIBS_X11        =
-QMAKE_LIBS_X11SM      =
-QMAKE_LIBS_NIS        = -lnsl
-QMAKE_LIBS_EGL        = -lEGL
-QMAKE_LIBS_OPENGL     = -lGLU -lGL
-QMAKE_LIBS_OPENGL_QT  = -lGL
-QMAKE_LIBS_OPENGL_ES1 = -lGLESv1_CM
-QMAKE_LIBS_OPENGL_ES1CL = -lGLES_CL
-QMAKE_LIBS_OPENGL_ES2 = -lGLESv2
-QMAKE_LIBS_OPENVG     = -lOpenVG
-QMAKE_LIBS_THREAD     = -lpthread
-QMAKE_LIBS_EGL	      = -lEGL
-
-QMAKE_MOC             = \$\$[QT_INSTALL_BINS]/moc
-QMAKE_UIC             = \$\$[QT_INSTALL_BINS]/uic
-
-QMAKE_AR              = arm-none-linux-gnueabi-ar cqs
-QMAKE_OBJCOPY         = arm-none-linux-gnueabi-objcopy
-QMAKE_RANLIB          = arm-none-linux-gnueabi-ranlib
-
-QMAKE_TAR             = tar -cf
-QMAKE_GZIP            = gzip -9f
-
-QMAKE_COPY            = cp -f
-QMAKE_COPY_FILE       = \$(COPY)
-QMAKE_COPY_DIR        = \$(COPY) -r
-QMAKE_MOVE            = mv -f
-QMAKE_DEL_FILE        = rm -f
-QMAKE_DEL_DIR         = rmdir
-QMAKE_STRIP           = arm-none-linux-gnueabi-strip
-QMAKE_STRIPFLAGS_LIB += --strip-unneeded
-QMAKE_CHK_DIR_EXISTS  = test -d
-QMAKE_MKDIR           = mkdir -p
-QMAKE_INSTALL_FILE    = install -m 644 -p
-QMAKE_INSTALL_PROGRAM = install -m 755 -p
-
-MAKEFILE_GENERATOR      = UNIX
-TEMPLATE                = app
-CONFIG                 += qt warn_on release incremental link_prl
-QT                     += core gui network
-QMAKE_INCREMENTAL_STYLE = sublib
+%if %{?toolchain:1}%{!?toolchain:0}
+QMAKE_INCDIR                   = %{toolchain_install_dir}/include %{toolchain_install_dir}/include/glib-2.0 %{toolchain_install_dir}/lib/glib-2.0/include/
+QMAKE_LIBDIR                   = %{toolchain_install_dir}/lib
+QMAKE_LIBS                     =
+%else
+QMAKE_INCDIR                   = $DEV_IMAGE/usr/include $DEV_IMAGE/usr/include/glib-2.0 $DEV_IMAGE/usr/lib/glib-2.0/include/
+QMAKE_LIBDIR                   = $DEV_IMAGE/usr/lib
+QMAKE_LIBS                     = -lglib-2.0 -lgthread-2.0 -lz -lgmodule-2.0 -lgobject-2.0 -lts -lfreetype
+%endif
+QMAKE_INCDIR_X11               =
+QMAKE_LIBDIR_X11               =
+QMAKE_LIBS_DYNLOAD             = -ldl
+QMAKE_LIBS_X11                 =
+QMAKE_LIBS_X11SM               =
+QMAKE_LIBS_NIS                 = -lnsl
+QMAKE_LIBS_THREAD              = -lpthread
+
+
+QMAKE_MOC                      = \$\$[QT_INSTALL_BINS]/moc
+QMAKE_UIC                      = \$\$[QT_INSTALL_BINS]/uic
+
+QMAKE_AR                       = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-ar cqs
+QMAKE_OBJCOPY                  = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-objcopy
+QMAKE_RANLIB                   = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-ranlib
+
+QMAKE_TAR                      = tar -cf
+QMAKE_GZIP                     = gzip -9f
+
+QMAKE_COPY                     = cp -f
+QMAKE_COPY_FILE                = \$(COPY)
+QMAKE_COPY_DIR                 = \$(COPY) -r
+QMAKE_MOVE                     = mv -f
+QMAKE_DEL_FILE                 = rm -f
+QMAKE_DEL_DIR                  = rmdir
+QMAKE_STRIP                    = /opt/CodeSourcery/bin/arm-none-linux-gnueabi-strip
+QMAKE_CHK_DIR_EXISTS           = test -d
+QMAKE_MKDIR                    = mkdir -p
+QMAKE_INSTALL_FILE             = install -m 644 -p
+QMAKE_INSTALL_PROGRAM          = install -m 755 -p
+
+MAKEFILE_GENERATOR             = UNIX
+TEMPLATE                       = app
+CONFIG                        += qt warn_on release incremental link_prl
+QT                            += core gui
+QMAKE_INCREMENTAL_STYLE        = sublib
 
 load(qt_config)
 EOF
@@ -173,10 +171,15 @@
 
 EOF
 chmod 744 $initscript
+%patch1 -p1
+%patch2 -p1
+%patch3 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
 
-export PATH=$UNSPOOF_PATH
+test -n "$UNSPOOF_PATH" && export PATH=$UNSPOOF_PATH
 
 # Unset compiler to prevent gcc being used when the cross
 # tools should be used. (Trolltech issue# 138807)
@@ -185,32 +188,116 @@
 # Unset PLATFORM because this is used as host machine.
 unset PLATFORM
 
-#if PKG_AMD_GPU_BIN_MX51 is already installed, uncomment the following line to add OpenGLES 2 support
-#export XTRA_OPTS="$XTRA_OPTS -opengl es2"
-
-#if PKG_MBX_BIN is already installed, uncomment the following line to add OpenGLES 1.1 support
-#export XTRA_OPTS="$XTRA_OPTS -opengl es1"
+./configure \
+%if %{?toolchain:1}%{!?toolchain:0}
+	--prefix=%{toolchain_install_dir} \
+%else
+	--prefix=${DEV_IMAGE}/usr/local/Trolltech \
+	-plugin-sql-mysql \
+	-qt-mouse-tslib \
+%endif
+	-xplatform qws/linux-g++-mx \
+	-confirm-license \
+	-embedded arm \
+	-fast \
+	-fontconfig \
+	-host-little-endian \
+	-little-endian \
+	-no-3dnow \
+	-no-accessibility \
+	-no-declarative \
+	-no-javascript-jit \
+	-no-largefile \
+	-nomake demos \
+	-nomake examples \
+	-no-mmx \
+	-no-multimedia \
+	-no-phonon \
+	-no-phonon-backend \
+	-no-qt3support \
+	-no-script \
+	-no-scripttools \
+	-no-sse \
+	-no-sse2 \
+	-no-sse3 \
+	-no-ssse3 \
+	-no-stl \
+	-no-svg \
+	-no-webkit \
+	-no-xmlpatterns \
+	-opensource \
+	-plugin-sql-sqlite \
+	-qt-gfx-linuxfb \
+	-qt-gfx-transformed \
+	-qt-gfx-vnc \
+	-qt-kbd-tty \
+	-openssl -continue \
+	-release \
+	-shared \
+	-sm \
+	-v \
+	$XTRA_OPTS
 
-./configure --prefix=$RPM_BUILD_DIR/../../rootfs/usr/local/Trolltech -embedded arm -xplatform qws/linux-g++-mx -release \
-	-qt-gfx-linuxfb -qt-kbd-tty -qt-mouse-tslib -little-endian -host-little-endian -fontconfig -sm -v -opensource -confirm-license $XTRA_OPTS
+make -j$(nproc)
 
-make
 
 %Install
+export LC_ALL
+LC_ALL=C
 
-export PATH=$UNSPOOF_PATH
-install -d $RPM_BUILD_ROOT/%{pfx}/usr/local/Trolltech
-install -d $RPM_BUILD_ROOT/%{pfx}/usr/lib
-
-cp -a demos $RPM_BUILD_ROOT/%{pfx}/usr/local/Trolltech
-cp -a examples $RPM_BUILD_ROOT/%{pfx}/usr/local/Trolltech
-cp -a lib/* $RPM_BUILD_ROOT/%{pfx}/usr/lib
+test -n "$UNSPOOF_PATH" && export PATH=$UNSPOOF_PATH
 
-export PATH=$SPOOF_PATH
+%if %{?toolchain:1}%{!?toolchain:0}
+
+make INSTALL_ROOT=%{buildroot} install
+
+%else
+
+install -d $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib
+cp -a lib/* $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib
+for l in "" $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libQt*.a $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib/libQt*.so.%{version}; do
+    test -z "$l" && continue
+    test -r "$l" && $TOOLCHAIN_PATH/bin/${TOOLCHAIN_PREFIX}strip --strip-unneeded "$l"
+done
+test -x plugins/sqldrivers/libqsqlite.so && install -m 644 plugins/sqldrivers/libqsqlite.so $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib
+test -x plugins/sqldrivers/libqsqlmysql.so && install -m 644 plugins/sqldrivers/libqsqlmysql.so $RPM_BUILD_ROOT/%{pfx}%{_prefix}/lib
+
+%endif
+
+%if %{?toolchain:0}%{!?toolchain:1}
+
+cd %{_builddir}/%{archivename}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_libdir}/[^/]*\.prl$, d;
+    \,^%{pfx}%{_libdir}/libQtTest, d;
+    \,^%{pfx}%{_libdir}/libQt3Support, d;
+    \,^%{pfx}%{_libdir}/libQtWebKit, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
+
+%endif
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
+%if %{?toolchain:1}%{!?toolchain:0}
+
+
 %Files
 %defattr(-,root,root)
-%{pfx}/*
+%{toolchain_install_dir}/*
+
+%else
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
+
+%endif
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/qwt/qwt-multiaxes.spec ltib/dist/lfs-5.1/qwt/qwt-multiaxes.spec
--- ltib.reference/dist/lfs-5.1/qwt/qwt-multiaxes.spec
+++ ltib/dist/lfs-5.1/qwt/qwt-multiaxes.spec
@@ -0,0 +1,93 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define variant multiaxes
+
+Summary         : Qwt widget library with multiaxes capability
+Name            : qwt
+Version         : 6.1
+Release         : 1_%{variant}
+License         : GNU LGPLv2.1
+Vendor          : Qwt Widget Library
+Packager        : Mihai Lazarescu
+Group           : Development/Libraries
+URL             : svn://svn.code.sf.net/p/qwt/code/branches/%{name}-%{version}-%{variant}
+Source          : %{name}-%{version}-%{variant}.tar.bz2
+Patch1          : qwt-6.0.1-multiaxes-1381834981.patch
+Patch2          : qwt-6.1.0-multiaxes-1418122118.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+#Patch1          : qwt-6.0.1-1381834981.patch : put libQtSVG dependent object under conditional compilation
+
+
+%Package rfs
+Summary         : Trimmed for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/Libraries
+AutoReqProv     : no
+
+%Description rfs
+qwt-multiaxes package contents restricted to just the files
+that are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{name}-%{version}-%{variant}
+%patch1 -p1
+%patch2 -p1 
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+cp qwt.pro qwt.pro.orig
+awk '{if ($0 ~ /QwtDesigner/ || $0 ~ /QwtExamples/) {getline; getline;} else {print $0;}}' qwt.pro.orig > qwt.pro
+
+cp qwtconfig.pri qwtconfig.pri.orig
+awk '{if ($0 ~ /\/usr\/local\//) {print "    QWT_INSTALL_PREFIX    = /usr/";} else{print $0;}}' qwtconfig.pri.orig > qwtconfig.pri
+
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx
+
+make \
+    sub-src-all-ordered \
+    sub-textengines-all-ordered \
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make \
+    install \
+    sub-src-install_subtargets-ordered \
+    sub-textengines-install_subtargets-ordered \
+    install_qwtspec \
+    INSTALL_ROOT=$RPM_BUILD_ROOT/%{pfx} \
+
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/features, d;
+    \,^%{pfx}%{_includedir}, d;
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/qwt/qwt.spec ltib/dist/lfs-5.1/qwt/qwt.spec
--- ltib.reference/dist/lfs-5.1/qwt/qwt.spec
+++ ltib/dist/lfs-5.1/qwt/qwt.spec
@@ -0,0 +1,80 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Qwt package
+Name            : qwt
+Version         : 6.1.0
+Release         : 1
+License         : GNU LGPLv2.1
+Vendor          : Qwt Widget Library
+Packager        : Bergamaschini Emiliano
+Group           : Development/Libraries
+URL             : http://freefr.dl.sourceforge.net/project/qwt/qwt/6.0.1/%{name}-%{version}.tar.bz2
+Source          : %{name}-%{version}.tar.bz2
+Patch1          : qwt-6.0.1-1381834981.patch
+Patch2          : qwt-6.1.0-1418122118.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+#Patch1          : qwt-6.0.1-1381834981.patch : put libQtSVG dependent object under conditional compilation
+
+
+%Package rfs
+Summary         : Trimmed qwt for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/Libraries
+AutoReqProv     : no
+
+%Description rfs
+qwt package contents restricted to just the files that are
+needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+%setup
+%patch1 -p1
+%patch2 -p1 
+
+%Build
+cp qwt.pro qwt.pro.orig
+awk '{if ($0 ~ /QwtDesigner/ || $0 ~ /QwtExamples/) {getline; getline;} else {print $0;}}' qwt.pro.orig > qwt.pro
+
+cp qwtconfig.pri qwtconfig.pri.orig
+awk '{if ($0 ~ /\/usr\/local\//) {print "    QWT_INSTALL_PREFIX    = /usr/";} else{print $0;}}' qwtconfig.pri.orig > qwtconfig.pri
+
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx
+
+make \
+    sub-src-all-ordered \
+    sub-textengines-all-ordered \
+
+%Install
+rm -rf $RPM_BUILD_ROOT
+
+make \
+    install \
+    sub-src-install_subtargets-ordered \
+    sub-textengines-install_subtargets-ordered \
+    install_qwtspec \
+    INSTALL_ROOT=$RPM_BUILD_ROOT/%{pfx}\
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_prefix}/doc, d;
+    \,^%{pfx}%{_includedir}, d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+rm -rf $RPM_BUILD_ROOT
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/rpm/rpm-fs.spec ltib/dist/lfs-5.1/rpm/rpm-fs.spec
--- ltib.reference/dist/lfs-5.1/rpm/rpm-fs.spec
+++ ltib/dist/lfs-5.1/rpm/rpm-fs.spec
@@ -83,7 +83,7 @@
 ./configure --prefix=%{_prefix} --localstatedir=$var --sysconfdir=$etc \
 --without-python --without-javaglue
 
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 
 %Install
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/rsync/rsync.spec ltib/dist/lfs-5.1/rsync/rsync.spec
--- ltib.reference/dist/lfs-5.1/rsync/rsync.spec
+++ ltib/dist/lfs-5.1/rsync/rsync.spec
@@ -12,26 +12,61 @@
 Patch1          : rsync-2.6.5-va_copy-2.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed rsync for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+rsync package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 rsync_cv_HAVE_GETTIMEOFDAY_TZ=yes \
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install prefix=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}/usr/man, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/sftp-server/sftp-server-openssl.spec ltib/dist/lfs-5.1/sftp-server/sftp-server-openssl.spec
--- ltib.reference/dist/lfs-5.1/sftp-server/sftp-server-openssl.spec
+++ ltib/dist/lfs-5.1/sftp-server/sftp-server-openssl.spec
@@ -0,0 +1,118 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define aname openssh
+%define avers 4.3p2
+
+Summary         : sftp-server using SSH protocol versions 1 and 2
+Name            : sftp-server
+Version         : %{avers}
+Release         : 1
+License         : BSD
+Vendor          : Avid Technology
+Packager        : Fritz Mueller
+Group           : Applications/Internet
+Source          : %{aname}-%{avers}.tar.gz
+Source1         : openssl-0.9.8g.tar.gz
+Patch0          : openssl-md4_size_t.patch
+Patch1          : openssl-md5_size_t.patch
+Patch2          : openssl-sha_size_t.patch
+Patch3          : openssl-0.9.8g-lib64.patch
+Patch4          : openssl-0.9.8g-ripemd_size_t.patch
+Patch5          : openssl-0.9.8g-sec.patch
+Patch6          : openssl-0.9.8g-cryptodev.patch
+Patch7          : openssh-4.3p2-static-sftp-server.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed sftp-server for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+sftp-server package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c
+%setup -T -D -a 0
+%setup -T -D -a 1
+%patch7 -p1
+cd openssl-0.9.8g
+%patch0 -p1
+%patch1 -p1
+%patch2 -p1
+%patch3 -p1
+%patch4 -p1
+%patch5 -p1
+%patch6 -p1
+
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+cd $RPM_BUILD_DIR/$RPM_PACKAGE_NAME-$RPM_PACKAGE_VERSION/openssl-0.9.8g
+case $ENDIAN in
+    big)
+        XTRA_OPTS="-DB_ENDIAN"
+        ;;
+    little)
+        XTRA_OPTS="-DL_ENDIAN"
+        ;;
+    *)
+        echo "Please set the ENDIAN environment variable to big|little"
+        ;;
+esac
+case "$LINTARCH" in
+    arm|m68k*)
+       OSSL_ARCH="linux-generic32"
+       ;;
+    powerpc*)
+       OSSL_ARCH="linux-ppc"
+       ;;
+    *)
+       OSSL_ARCH="linux-$LINTARCH"
+       ;;
+esac
+./Configure $OSSL_ARCH --prefix=%{_prefix} shared no-asm $XTRA_OPTS --with-cryptodev 
+make -j`grep -c ^processor /proc/cpuinfo` build_crypto
+
+cd $RPM_BUILD_DIR/$RPM_PACKAGE_NAME-$RPM_PACKAGE_VERSION/openssh-4.3p2
+LD=gcc ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --with-zlib=$DEV_IMAGE/usr --with-ssl-dir=$RPM_BUILD_DIR/$RPM_PACKAGE_NAME-$RPM_PACKAGE_VERSION/openssl-0.9.8g --with-ldflags="-L$RPM_BUILD_DIR/$RPM_PACKAGE_NAME-$RPM_PACKAGE_VERSION/openssl-0.9.8g" --config-cache
+make -j`grep -c ^processor /proc/cpuinfo` sysconfdir=%{_sysconfdir}/ssh sftp-server
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+cd $RPM_BUILD_DIR/$RPM_PACKAGE_NAME-$RPM_PACKAGE_VERSION/openssh-4.3p2
+make -j1 install-sftp-server sysconfdir=%{_sysconfdir}/ssh DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+cd -
+
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/libexec/sftp-server
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/sftp-server/sftp-server.spec ltib/dist/lfs-5.1/sftp-server/sftp-server.spec
--- ltib.reference/dist/lfs-5.1/sftp-server/sftp-server.spec
+++ ltib/dist/lfs-5.1/sftp-server/sftp-server.spec
@@ -0,0 +1,67 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define aname openssh
+%define avers 4.3p2
+
+Summary         : sftp-server using SSH protocol versions 1 and 2
+Name            : sftp-server
+Version         : %{avers}
+Release         : 1
+License         : BSD
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+Source          : %{aname}-%{avers}.tar.gz
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed sftp-server for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/Internet
+AutoReqProv     : no
+
+%Description rfs
+sftp-server package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{aname}-%{avers}
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+LD=gcc ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --with-zlib=$DEV_IMAGE/usr/lib --with-ldflags=-L$DEV_IMAGE/usr/lib
+make -j`grep -c ^processor /proc/cpuinfo` sysconfdir=%{_sysconfdir}/ssh sftp-server
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+make -j1 DESTDIR=$RPM_BUILD_ROOT/%{pfx} sysconfdir=%{_sysconfdir}/ssh install
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/libexec/sftp-server
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/skell/skell.spec ltib/dist/lfs-5.1/skell/skell.spec
--- ltib.reference/dist/lfs-5.1/skell/skell.spec
+++ ltib/dist/lfs-5.1/skell/skell.spec
@@ -9,20 +9,104 @@
 Packager        : Steve Papacharalambous/Stuart Hughes
 Group           : System Environment/Utilities
 Source          : %{name}-%{version}.tar.gz
+Source2         : rootfs_patch-1.2.tar.bz2
+Source3         : skell-local-1.6.tar.bz2
+Source4         : gdbserver
 Patch1          : skell-1.18-dropbear_args.patch
-Patch2          : skell-1.17-imx.patch
-Patch3          : skell-1.16-imx-fsl-gstplugin.patch
+Patch2          : skell-1.18-imx.patch
+Patch3          : skell-1.18-imx-fsl-gstplugin.patch
 Patch4          : skell-1.19-imx-fsl-gnome.patch
 Patch5          : skell-1.19-imx-hal-messagebus.patch
-Patch6          : skell-1.18-imx-add-ttymxc2n3.patch
-Patch7          : skell-1.18-imx-add-ttymxc4n5.patch
+Patch6          : skell-1.18-mect-config.patch
+Patch7          : skell-1.18-1317731895.patch
+Patch8          : skell-1.18-1318337638.patch
+Patch9          : skell-1.18-1319030600.patch
+Patch10         : skell-1.18-1328695400.patch
+Patch11         : skell-1.18-1329225205.patch
+Patch14         : skell-1.18-1349102220.patch
+Patch16         : skell-1.18-1416848812.patch
+Patch17         : skell-1.18-1418999072.patch
+Patch18         : skell-1.18-1420825964.patch
+Patch19         : skell-1.18-1421745467.patch
+Patch20         : skell-1.18-1421838801.patch
+Patch21         : skell-1.18-1423222246.patch
+Patch22         : skell-1.18-1427985138.patch
+Patch23         : skell-1.18-1428680350.patch
+Patch24         : skell-1.18-1429172043.patch
+Patch25         : skell-1.18-1431590614.patch
+Patch26         : skell-1.18-mect-ld-xenomai-libs.patch
+Patch27         : skell-1.18-mect-remove-inittab.patch
+Patch28         : skell-1.18-mect-remove-issue.patch
+Patch29         : skell-1.18-mect-remove-rc.local.patch
+Patch31         : skell-mect-dev-fixes-in-init.d.patch
+Patch32         : skell-1.18-1448375293.patch
+Patch33         : skell-1.18-1448558592.patch
+Patch34         : skell-1.18-1453482173.patch
+Patch35         : skell-1.18-1453824311.patch
+Patch36         : skell-1.18-remove_resolv_conf.patch
+Patch37         : skell-1.18-remove_network.patch
+Patch38         : skell-1.18-remove_mdev_conf.patch
+Patch39         : skell-1.18-remove_sdcheck.patch
+Patch40         : skell-1.18-remove_net_conf.patch
+Patch41         : skell-1.18-limit_to_skell_creation.patch
+Patch42         : skell-1.18-remove_home_dir.patch
+Patch43         : skell-1.18-create_local_and_its_tree.patch
+Patch44         : skell-1.18-create_local_update.patch
+Patch45         : skell-1.18-move_etc_profile_to_merge.patch
+Patch46         : skell-1.18-remove_boa_rc_script.patch
+Patch47         : skell-1.18-no_fstab.patch
+Patch48         : skell-1.18-remove_passwd_group.patch
+Patch49         : skell-1.18-remove_services.patch
+Patch50         : skell-1.18-remove_shadow.patch
+Patch51         : skell-1.18-remove-rc-mdev-script.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+# skell-1.18-mect-config.patch : prepare a skell with read only partition and data partition
+# skell-1.18-1317731895.patch  : add the environment variable for touchscreen and QT, remove rc.conf because is already created by sysconfig package
+# skell-1.18-1318337638.patch  : disable httpd and create the character device /dev/buzzer
+# skell-1.18-1328695400.patch  : add the autoexec script
+# skell-1.18-1329225205.patch  : fix the LCD calibration sync problem, add the MAC configuration at power-on
+#Patch12          : skell-1.18-1332342531.patch add S10setup script to file system 
+#Patch13          : skell-1.18-1333039892.patch modified S10setup script
+#Patch14          : skell-1.18-1349102220.patch modified S10setup script, added root password
+#Patch15          : skell-1.18-1353931133.patch modified S10setup script
+#Patch16          : skell-1.18-1355479713.patch modified S10setup to work with the autoexec logic. Added S10setup and autoexec in /usr/bin
+#Patch22          : skell-1.18-1427985138.patch remove the unecessary sleep at boot scripts and change the command to detect the usb
+#Patch25          : skell-1.18-1431590614.patch set the backglight first of all into the autoexec script
+
+
+%Package rfs
+Summary         : Trimmed skell for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Utilities
+AutoReqProv     : no
+
+%Description rfs
+skell package contents restricted to just the files that are
+needed at run time on the target.
+
+%Package lfs
+Summary         : Skeleton for local file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Utilities
+Prefix          : %{pfx}/local
+AutoReqProv     : no
+
+%Description lfs
+Basic contents of the local file system.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 %patch2 -p1
@@ -31,24 +115,180 @@
 %patch5 -p1
 %patch6 -p1
 %patch7 -p1
+%patch8 -p1
+%patch9 -p1
+%patch10 -p1
+%patch11 -p1
+%patch14 -p1
+%patch16 -p1
+%patch17 -p1
+%patch18 -p1
+%patch19 -p1
+%patch20 -p1
+%patch21 -p1
+%patch22 -p1
+%patch23 -p1
+%patch24 -p1
+%patch25 -p1
+%patch26 -p1
+%patch27 -p1
+%patch28 -p1
+%patch29 -p1
+%patch31 -p1
+%patch32 -p1
+%patch33 -p1
+%patch34 -p1
+%patch35 -p1
+%patch36 -p1
+%patch37 -p1
+%patch38 -p1
+%patch39 -p1
+%patch40 -p1
+%patch41 -p1
+%patch42 -p1
+%patch43 -p1
+%patch44 -p1
+%patch45 -p1
+%patch46 -p1
+%patch47 -p1
+%patch48 -p1
+%patch49 -p1
+%patch50 -p1
+%patch51 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
+DESTDIR=$RPM_BUILD_ROOT%{pfx} 
 
 %Install
+export LC_ALL
+LC_ALL=C
+
+DESTDIR=$RPM_BUILD_ROOT%{pfx} 
+
 rm -rf $RPM_BUILD_ROOT
-make DESTDIR=$RPM_BUILD_ROOT/%{pfx} install
-if [ -z "$PKG_SKELL_WANT_TERMINFO" ]
-then
-    rm -rf $RPM_BUILD_ROOT/%{pfx}/usr/share/terminfo
-fi
+
+make DESTDIR=$RPM_BUILD_ROOT%{pfx} install
+
+test -z "$PKG_SKELL_WANT_TERMINFO" && rm -rf $RPM_BUILD_ROOT%{pfx}%{_prefix}/share/terminfo
+
+tar xjvf %{SOURCE2} -C $RPM_BUILD_ROOT%{pfx}
+tar xjvf %{SOURCE3} -C $RPM_BUILD_ROOT%{pfx}
+install -m 755 -D %{SOURCE4} $RPM_BUILD_ROOT%{pfx}%{_bindir}/`basename %{SOURCE4}`
+
+# TODO: compile md5sum and symlink it to sing (if necessary).
+ln -s sign $RPM_BUILD_ROOT%{pfx}/usr/bin/md5sum
 
 %Clean
-rm -rf $RPM_BUILD_ROOT
+export LC_ALL
+LC_ALL=C
+
+sudo rm -rf $RPM_BUILD_ROOT
+
 
 %Files
 %defattr(-,root,root)
-%attr(0666, root, root) %dev(c, 5, 0) %{pfx}/dev/tty
-%attr(0600, root, root) %dev(c, 5, 1) %{pfx}/dev/console
-%attr(0666, root, root) %dev(c, 1, 3) %{pfx}/dev/null
-%attr(0755, root, root) %{pfx}/usr/bin/startx
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/bin
+%{pfx}/control
+%{pfx}/dev
+%{pfx}/etc/devfsd.conf
+%{pfx}/etc/exports
+%{pfx}/etc/host.conf
+%{pfx}/etc/hosts
+%{pfx}/etc/hosts.allow
+%{pfx}/etc/hosts.deny
+%{pfx}/etc/inputrc
+%{pfx}/etc/issue.net
+%{pfx}/etc/ld.so.conf
+%{pfx}/etc/mime.types
+%{pfx}/etc/modprobe.conf
+%{pfx}/etc/nsswitch.conf
+%{pfx}/etc/printcap
+%{pfx}/etc/protocols
+%{pfx}/etc/rc.d/init.d/depmod
+%{pfx}/etc/rc.d/init.d/devfsd
+%{pfx}/etc/rc.d/init.d/dhcp
+%{pfx}/etc/rc.d/init.d/dhcpd
+%{pfx}/etc/rc.d/init.d/dropbear
+%{pfx}/etc/rc.d/init.d/filesystems
+%{pfx}/etc/rc.d/init.d/hostname
+%{pfx}/etc/rc.d/init.d/inetd
+%{pfx}/etc/rc.d/init.d/modules
+%{pfx}/etc/rc.d/init.d/mount-proc-sys
+%{pfx}/etc/rc.d/init.d/portmap
+%{pfx}/etc/rc.d/init.d/settime
+%{pfx}/etc/rc.d/init.d/smb
+%{pfx}/etc/rc.d/init.d/sshd
+%{pfx}/etc/rc.d/init.d/syslog
+%{pfx}/etc/rc.d/init.d/udev
+%{pfx}/etc/rc.d/init.d/usbmode
+%{pfx}/etc/rc.d/rc.modules
+%{pfx}/etc/rc.d/rcS
+%{pfx}/etc/rc.d/rc.serial
+%{pfx}/etc/securetty
+%{pfx}/etc/shells
+%{pfx}/etc/sysctl.conf
+%{pfx}/etc/udhcpd.conf
+%{pfx}/lib/modules
+%{pfx}/local/control
+%{pfx}/local/data/alarms
+%{pfx}/local/data/customstore
+%{pfx}/local/data/recipe
+%{pfx}/local/data/store
+%{pfx}/local/data/trends
+%{pfx}/local/root
+%{pfx}/local/sd_card
+%{pfx}/local/update
+%{pfx}/mnt/cdrom
+%{pfx}/mnt/floppy
+%{pfx}/mnt/nfs
+%{pfx}/mnt/rwfs
+%{pfx}/mnt/src
+%{pfx}/opt
+%{pfx}/proc
+%{pfx}/root
+%{pfx}/sbin
+%{pfx}/sys
+%{pfx}/tmp
+%{pfx}/update
+%{pfx}/usr/bin/gdbserver
+%{pfx}/usr/bin/md5sum
+%{pfx}/usr/bin/stop
+%{pfx}/usr/bin/stop
+%{pfx}/usr/lib
+%{pfx}/usr/share/udhcpc/default.script
+%{pfx}/var
+%{pfx}/var/ftp/bin
+%{pfx}/var/ftp/etc
+%{pfx}/var/ftp/lib
+%{pfx}/var/ftp/pub
+%{pfx}/var/lib
+%{pfx}/var/lock
+%{pfx}/var/log/lastlog
+%{pfx}/var/mail
+%{pfx}/var/run
+%{pfx}/var/spool/lpd
+%{pfx}/var/spool/mail
+%{pfx}/var/tmp
+%{pfx}/var/www/cgi-bin/test_cgi
+%{pfx}/var/www/html/index.html
+%{pfx}/var/www/icons
+
+%Files lfs
+%defattr(-,root,root)
+%{pfx}/local/control
+%{pfx}/local/data/alarms
+%{pfx}/local/data/customstore
+%{pfx}/local/data/recipe
+%{pfx}/local/data/store
+%{pfx}/local/data/trends
+%{pfx}/local/retentive
+%{pfx}/local/root
+%{pfx}/local/sd_card
+%{pfx}/local/update
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/splash/splash.spec ltib/dist/lfs-5.1/splash/splash.spec
--- ltib.reference/dist/lfs-5.1/splash/splash.spec
+++ ltib/dist/lfs-5.1/splash/splash.spec
@@ -0,0 +1,67 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : HMI splash screen
+Name            : splash
+Version         : 1.0
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just runtimes
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents limited to just the files
+needed at run time on the target system.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup -T -c -n SDcard
+rsync -av --inplace ../../../../projects/splash/ ./
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+test -r Makefile && make clean
+/opt/Trolltech/bin/qmake -spec qws/linux-g++-mx
+make -j1
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+install -D -m 0755 splash $RPM_BUILD_ROOT%{pfx}/usr/bin/splash
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/usr/bin/splash
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/sqlite/sqlite.spec ltib/dist/lfs-5.1/sqlite/sqlite.spec
--- ltib.reference/dist/lfs-5.1/sqlite/sqlite.spec
+++ ltib/dist/lfs-5.1/sqlite/sqlite.spec
@@ -12,26 +12,61 @@
 Source          : %{name}-amalgamation-%{version}.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed sqlite for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+sqlite package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 SQLite is a software library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine.
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build}
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-find $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/ -name "*.la" | xargs rm -f
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_includedir}, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/sysconfig/modeps.spec ltib/dist/lfs-5.1/sysconfig/modeps.spec
--- ltib.reference/dist/lfs-5.1/sysconfig/modeps.spec
+++ ltib/dist/lfs-5.1/sysconfig/modeps.spec
@@ -10,32 +10,70 @@
 Group           : System Environment/Base
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed modeps for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+modeps package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/lib/modules
+mkdir -p $RPM_BUILD_ROOT%{pfx}/lib/modules
 if [ -f $DEV_IMAGE/boot/vmlinux ]
 then 
-    # generate modules.conf
+    # generate modules.dep
     KERNEL_VER=`strings $DEV_IMAGE/boot/vmlinux | perl -n -e 'print($1), exit(0) if m,Linux version ([\S]+),'`
     if [ -n "$KERNEL_VER" ]
     then
-        mkdir -p $RPM_BUILD_ROOT/%{pfx}/lib/modules/$KERNEL_VER
-        depmod.pl -b $DEV_IMAGE/lib/modules/$KERNEL_VER -F $DEV_IMAGE/boot/System.map --stdout > $RPM_BUILD_ROOT/%{pfx}/lib/modules/$KERNEL_VER/modules.dep
+        mkdir -p $RPM_BUILD_ROOT%{pfx}/lib/modules/$KERNEL_VER
+        #depmod.pl -b $DEV_IMAGE/lib/modules/$KERNEL_VER -F $DEV_IMAGE/boot/System.map --stdout > $RPM_BUILD_ROOT/%{pfx}/lib/modules/$KERNEL_VER/modules.dep
+	# TODO: depmod should be added to host tools insted of relying on the host one.
+	sudo depmod -a -b $DEV_IMAGE -F $DEV_IMAGE/boot/System.map $KERNEL_VER
+	install -m 644 $DEV_IMAGE/lib/modules/$KERNEL_VER/modules.* $RPM_BUILD_ROOT%{pfx}/lib/modules/$KERNEL_VER/
     fi
 fi
 
+cd %{_builddir}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    \,/modules\.alias$, p;
+    \,/modules\.dep$, p;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/sysconfig/sysconfig-mx.spec ltib/dist/lfs-5.1/sysconfig/sysconfig-mx.spec
--- ltib.reference/dist/lfs-5.1/sysconfig/sysconfig-mx.spec
+++ ltib/dist/lfs-5.1/sysconfig/sysconfig-mx.spec
@@ -8,97 +8,100 @@
 Vendor		: Freescale
 Packager	: Stuart Hughes
 Group		: System Environment/Base
+Source          : inittab
 BuildRoot	: %{_tmppath}/%{name}
 Prefix		: %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed sysconfig for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+sysconfig package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
-#%setup
+export LC_ALL
+LC_ALL=C
+
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
+
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/etc/rc.d
 
-if [ "$SYSCFG_START_SYSLOG" = "y" ]
-then
-    syslog=syslog
-fi
-if [ "$SYSCFG_START_UDEV" = "y" ]
-then
-    udev=udev
-fi
-if [ "$SYSCFG_START_MDEV" = "y" ]
-then
-    mdev=mdev
-fi
-if [ "$SYSCFG_START_DEVFSD" = "y" ]
-then
-    devfsd=devfsd
-fi
-if [ "$SYSCFG_START_NETWORK" = "y" ]
-then
-    network=network
-fi
-if [ "$SYSCFG_START_INETD" = "y" ]
-then
-    inetd=inetd
-fi
-if [ "$SYSCFG_START_PORTMAP" = "y" ]
-then
-    portmap=portmap
-fi
-if [ "$SYSCFG_START_DROPBEAR_SSH" = "y" ]
-then
-    dropbear=dropbear
-fi
-if [ "$SYSCFG_START_SSHD" = "y" ]
-then
-    sshd=sshd
+test  "$SYSCFG_START_SYSLOG"        =  "y"  &&  syslog=syslog
+test  "$SYSCFG_START_UDEV"          =  "y"  &&  udev=udev
+test  "$SYSCFG_START_MDEV"          =  "y"  &&  mdev=mdev
+test  "$SYSCFG_START_DEVFSD"        =  "y"  &&  devfsd=devfsd
+test  "$SYSCFG_START_NETWORK"       =  "y"  &&  network=network
+test  "$SYSCFG_START_INETD"         =  "y"  &&  inetd=inetd
+test  "$SYSCFG_START_PORTMAP"       =  "y"  &&  portmap=portmap
+test  "$SYSCFG_START_DROPBEAR_SSH"  =  "y"  &&  dropbear=dropbear
+test  "$SYSCFG_START_SSHD"          =  "y"  &&  sshd=sshd
+test  "$SYSCFG_START_BOA"           =  "y"  &&  boa=boa
+test  "$SYSCFG_START_VSFTPD"        =  "y"  &&  vsftpd=vsftpd
+test  "$SYSCFG_SETTIME"             =  "y"  &&  settime=settime
+test  "$SYSCFG_START_DHCPD"         =  "y"  &&  dhcpd=dhcp
+test  "$SYSCFG_START_SAMBA"         =  "y"  &&  smb=smb
+test  "$SYSCFG_START_WATCHDOG"      =  "y"  &&  watchdog=watchdog
+test  "$SYSCFG_START_GTK2"          =  "y"  &&  gtk2=gtk2
+test  "$SYSCFG_START_PANGO"         =  "y"  &&  pango=pango
+test  "$SYSCFG_START_FSLGNOME"      =  "y"  &&  fslgnome=fslgnome
+test  "$SYSCFG_START_S10SETUP"      =  "y"  &&  S10setup=S10setup
+test  "$SYSCFG_START_OPENVPN"       =  "y"  &&  openvpn=openvpn
+if test "$SYSCFG_START_AUTOEXEC" = "y"; then
+        autoexec=autoexec
+	sdcheck=sdcheck
+	usbmode=usbmode
 fi
-if [ "$SYSCFG_START_BOA" = "y" ]
-then
-    boa=boa
-fi
-if [ "$SYSCFG_SETTIME" = "y" ]
-then
-    settime=settime
-fi
-if [ "$SYSCFG_START_DHCPD" = "y" ]
-then
-    dhcpd=dhcp
-fi
-if [ "$SYSCFG_START_SAMBA" = "y" ]
-then
-    smb=smb
-fi
-if [ "$SYSCFG_START_WATCHDOG" = "y" ]
-then
-	watchdog=watchdog
-fi
-if [ "$SYSCFG_START_GTK2" = "y" ]
-then
-	gtk2=gtk2
+
+if test "$SYSCFG_START_TELNET" = "y"; then
+	telnetd=telnetd
+
+	mkdir -p $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/init.d
+
+	cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/init.d/telnetd
+#!/bin/sh
+
+test -x /usr/sbin/telnetd || exit 0
+
+if test "$1" = "stop" -o "$1" = "restart"; then
+	echo "Stopping the telnet daemon: "
+	killall telnetd
 fi
-if [ "$SYSCFG_START_PANGO" = "y" ]
-then
-	pango=pango
+
+if test "$1" = "start" -o "$1" = "restart"; then
+	echo "Starting the telnet daemon: "
+	/usr/sbin/telnetd
 fi
-if [ "$SYSCFG_START_FSLGNOME" = "y" ]
-then
-        fslgnome=fslgnome
+EOF
+	chmod +x $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/init.d/telnetd
 fi
 
 cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc.conf
-all_services="mount-proc-sys mdev udev hostname devfsd depmod modules filesystems syslog network inetd portmap dropbear sshd boa smb dhcpd settime fslgnome watchdog bluetooth gtk2 pango"
-all_services_r="pango gtk2 bluetooth watchdog fslgnome settime dhcpd smb boa sshd dropbear portmap inetd network syslog filesystems modules depmod devfsd hostname udev mdev mount-proc-sys"
-
-cfg_services="mount-proc-sys $mdev $udev hostname $devfsd depmod modules filesystems $syslog $network $inetd $portmap $dropbear $sshd $boa $smb $dhcpd $settime $fslgnome $watchdog $bluetooth $gtk2 $pango"
+all_services="mount-proc-sys mdev udev hostname devfsd depmod modules filesystems sdcheck syslog network iptables inetd portmap setup dropbear sshd boa vsftpd smb dhcpd settime fslgnome watchdog bluetooth gtk2 pango telnetd usbmode S10setup autoexec openvpn crond"
+all_services_r="crond openvpn autoexec S10setup usbmode telnetd pango gtk2 bluetooth watchdog fslgnome settime dhcpd smb vsftpd boa sshd dropbear setup portmap inetd iptables network syslog sdcheck filesystems modules depmod devfsd hostname udev mdev mount-proc-sys"
 
-cfg_services_r="$pango $gtk2 $bluetooth $watchdog $fslgnome $settime $dhcpd $smb $boa $sshd $dropbear $portmap $inetd $network $syslog filesystems modules depmod $devfsd hostname $udev $mdev mount-proc-sys"
+cfg_services="mount-proc-sys $mdev $udev hostname $devfsd depmod modules filesystems $usbmode $network iptables $inetd $portmap setup $sdcheck $autoexec $dropbear $sshd $boa $vsftpd $telnetd $syslog $smb $dhcpd $settime $fslgnome $watchdog $bluetooth $gtk2 $pango $S10setup $openvpn crond"
+cfg_services_r="crond $openvpn $autoexec $sdcheck $S10setup $usbmode $pango $gtk2 $bluetooth $watchdog $fslgnome $settime $dhcpd $smb $syslog $telnetd $vsftpd $boa $sshd $dropbear setup $portmap $inetd iptables $network filesystems modules depmod $devfsd hostname $udev $mdev mount-proc-sys"
 
 export HOSTNAME="${SYSCFG_HOSTNAME:-$PLATFORM}"
 export NTP_SERVER="$SYSCFG_NTP_SERVER"
@@ -145,74 +148,17 @@
     fi
 done
 
-if [ "$PKG_BUSYBOX" = "y" -a "$PKG_SYSVINIT" != "y" ]
-then
+if test "$PKG_BUSYBOX" = "y" -a "$PKG_SYSVINIT" != "y"; then
     # BusyBox init
-    if [ "$SYSCFG_WANT_LOGIN_TTY" = "y" ]
-    then
+    if test "$SYSCFG_WANT_LOGIN_TTY" = "y"; then
 	sys_login=`echo "$SYSCFG_LOGING_TTY" | sed 's/\\\\\\\\n/\n/'`
     else
 	sys_login="::respawn:-/bin/sh"
     fi
-
-    cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc_mxc.S
-#!/bin/bash
-#
-if grep -sq ttymxc0 /proc/cmdline; then
-	/sbin/getty -L ttymxc0 115200 vt100
-elif grep -sq ttymxc1 /proc/cmdline; then
-	/sbin/getty -L ttymxc1 115200 vt100
-elif grep -sq ttymxc2 /proc/cmdline; then
-	/sbin/getty -L ttymxc2 115200 vt100
-elif grep -sq ttymxc3 /proc/cmdline; then
-	/sbin/getty -L ttymxc3 115200 vt100
-else
-	sleep 100000
-fi
-EOF
-chmod +x $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc_mxc.S
-
-cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc_gpu.S
-#!/bin/bash
-CPUREV=\$(cat /proc/cpuinfo | grep Revision | awk '{print \$3}' | awk '{print substr(\$0,1,2)}')
-FILEVG=/usr/lib/libOpenVG.so
-FILEVG3D=/usr/lib/libOpenVG_3D.so
-FILEVG355=/usr/lib/libOpenVG_355.so
-if  [ -e \$FILEVG3D ] && [ -e \$FILEVG355 ]
-then
-  if  [ \$CPUREV == "61" ] || [ \$CPUREV == "63" ] || [ \$CPUREV == "60" ] && [ -e  \$FILEVG ]
-  then
-        rm -f \$FILEVG
-  fi
-  if [ \$CPUREV == "61" ]
-  then
-        ln -s \$FILEVG3D \$FILEVG
-  fi
-  if [ \$CPUREV == "63" ]
-  then
-        ln -s \$FILEVG355 \$FILEVG
-  fi
-  if [ \$CPUREV == "60" ]
-  then
-        ln -s \$FILEVG355 \$FILEVG
-  fi
-fi
-EOF
-chmod +x $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc_gpu.S
-
-    cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/inittab
-# see busybox-1.00rc2/examples/inittab for more examples
-::sysinit:/etc/rc.d/rcS
-$sys_login
-::sysinit:/etc/rc.d/rc_gpu.S
-::ctrlaltdel:/sbin/reboot
-::shutdown:/etc/rc.d/rcS stop
-::restart:/sbin/init
-EOF
+    install -m 644 %{SOURCE0} $RPM_BUILD_ROOT/%{pfx}/etc/inittab
 else
     # SysVInit
-    if [ "$SYSCFG_WANT_LOGIN_TTY" = "y" ]
-    then
+    if test "$SYSCFG_WANT_LOGIN_TTY" = "y"; then
 	run_level=3
     else
 	run_level=1
@@ -237,80 +183,31 @@
 EOF
 fi
 
-cat <<'EOF' > $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc.local
-#!/bin/sh
-#
-# This script will be executed *after* all the other init scripts.
-# You can put your own initialization stuff in here
-if [ -x "/usr/bin/rpm" -a -e "/tmp/ltib" ]
-then
-    echo "rebuilding rpm database"
-    rm -rf /tmp/ltib
-    rpm --rebuilddb
-fi
-
-# fix up permissions
-if [ -d /home/user ]
-then
-    chown -R user.user /home/user
-fi
-
-# Add nodes when running under the hypervisor and static devices
-if [ -r /sys/class/misc/fsl-hv/dev -a ! -r /dev/fsl-hv ]
-then
-   echo "creating hypervisor nodes"
-   DEVID=`cat /sys/class/misc/fsl-hv/dev`
-   if [ -n "$DEVID" ]
-   then
-       MAJOR="${DEVID%%:*}"
-       MINOR="${DEVID##*:}"
-
-       if [ \( "$MAJOR" -gt 0 \) -a \( "$MINOR" -gt 0 \) ]
-       then
-	   rm -f /dev/fsl-hv
-	   mknod /dev/fsl-hv c $MAJOR $MINOR
-       fi
-   fi
-   for i in 0 1 2 3 4 5 6 7
-   do
-       mknod /dev/hvc$i c 229 $i
-   done
-fi
-
-# add the fm device nodes
-if [ -n "$(cat /proc/devices | grep fm | sed 's/\([0-9]*\).*/\1/')" -a ! -r /dev/fm0 ]
-then
-    echo "creating fman device nodes"
-    cd /usr/share/doc/fmd-uspace-01.01/test/
-    sh fm_dev_create
-    cd -
-fi
-
-for i in 0 1 2; do
-    if [ -e /sys/class/graphics/fb$i ]; then
-        chmod 0666 /sys/class/graphics/fb$i/pan
-    fi
-done
-
-EOF
-chmod +x $RPM_BUILD_ROOT/%{pfx}/etc/rc.d/rc.local
-
 cat <<EOF > $RPM_BUILD_ROOT/%{pfx}/etc/issue
-$( gcc --version | grep 'gcc')
+
+$(gcc --version | grep gcc)
 root filesystem built on $(date -R)
-Freescale Semiconductor, Inc.
+MECT s.r.l. http://www.mect.it/
 
 EOF
 
 # The kernel attempts to run /init (not /sbin/init!) from initramfs images
-if [ "$SYSCFG_DEPLOYMENT_STYLE" = "INITRAMFS" ]
-then
-    ln -s /sbin/init $RPM_BUILD_ROOT/%{pfx}/init
-fi
+test "$SYSCFG_DEPLOYMENT_STYLE" = "INITRAMFS" && ln -s /sbin/init $RPM_BUILD_ROOT/%{pfx}/init
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
-%{pfx}/*
+%{pfx}/etc/inittab
+%{pfx}/etc/issue
+%{pfx}/etc/rc.d/rc.conf
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}/etc/inittab
+%{pfx}/etc/issue
+%{pfx}/etc/rc.d/rc.conf
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/tcp_wrappers/tcp_wrappers.spec ltib/dist/lfs-5.1/tcp_wrappers/tcp_wrappers.spec
--- ltib.reference/dist/lfs-5.1/tcp_wrappers/tcp_wrappers.spec
+++ ltib/dist/lfs-5.1/tcp_wrappers/tcp_wrappers.spec
@@ -16,11 +16,28 @@
 Patch4          : tcp_wrappers-7.6-uclibc-strerror.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Daemons
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just the files that
+are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n %{name}_%{version}
 %patch0 -p1
 %patch1 -p1
@@ -29,6 +46,9 @@
 %patch4 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 if [ -n "$UCLIBC" ]
 then 
     make REAL_DAEMON_DIR=/usr/sbin STYLE=-DPROCESS_OPTIONS linux-uclibc
@@ -37,6 +57,9 @@
 fi
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 for i in sbin lib include
 do
@@ -49,8 +72,22 @@
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
 %defattr(-,root,root)
 %{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}%{_libdir}/libwrap.so
+%{pfx}%{_libdir}/libwrap.so.0
+%{pfx}%{_libdir}/libwrap.so.0.7.6
+%{pfx}%{_sbindir}/safe_finger
+%{pfx}%{_sbindir}/tcpd
+%{pfx}%{_sbindir}/tcpdchk
+%{pfx}%{_sbindir}/tcpdmatch
+%{pfx}%{_sbindir}/try-from
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/texinfo/texinfo.spec ltib/dist/lfs-5.1/texinfo/texinfo.spec
--- ltib.reference/dist/lfs-5.1/texinfo/texinfo.spec
+++ ltib/dist/lfs-5.1/texinfo/texinfo.spec
@@ -31,7 +31,7 @@
 else
               ./configure --prefix=%{_prefix} --host=$CFGHOST --build=%{_build} --mandir=%{_mandir}
 fi
-make
+make -j`grep -c ^processor /proc/cpuinfo`
 
 %Install
 rm -rf $RPM_BUILD_ROOT
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/tslib/tslib.spec ltib/dist/lfs-5.1/tslib/tslib.spec
--- ltib.reference/dist/lfs-5.1/tslib/tslib.spec
+++ ltib/dist/lfs-5.1/tslib/tslib.spec
@@ -13,14 +13,32 @@
 Patch2          : tslib-1.0-mx-pre_gen-2.patch
 Patch3          : tslib-1.0-mx-pre_config.patch
 Patch4          : tslib-1.0-glibc-2.7.x-open-O_CREAT-lack-parameter.patch
-Patch5          : tslib-1.0-change-input-raw.c-to-support-multi-touch.patch
+Patch5          : tslib-1.0-1394538963.patch
+Patch6          : tslib-1.0-1417198155.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed tslib for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Libraries
+AutoReqProv     : no
+
+%Description rfs
+tslib package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1 
 %patch2 -p1 
@@ -35,15 +53,19 @@
 if [ `echo ${LIBC_VERSION} | cut -d '.' -f 1` -eq 2 -a `echo ${LIBC_VERSION} | cut -d '.' -f 2` -ge 7 ]; then
 %patch4 -p1
 fi
-%patch5 -p1
 
 touch aclocal.m4
 sleep 1
 find . -name Makefile.in | xargs touch
 sleep 1
 touch configure
+%patch5 -p1
+%patch6 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 #sed -i s/AS_HELP_STRING/AC_HELP_STRING/ configure.ac
 #./autogen.sh
 chmod +x ./configure
@@ -52,18 +74,34 @@
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/*.la
-rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/lib/ts/*.la
+
 # Remove unused platform binaries
 for so in arctic2.so collie.so corgi.so h3600.so mk712.so; do
 	rm -f $RPM_BUILD_ROOT/%{pfx}/%{_prefix}/usr/lib/ts/$so
 done
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_includedir}, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/u-boot/u-boot-common.tmpl ltib/dist/lfs-5.1/u-boot/u-boot-common.tmpl
--- ltib.reference/dist/lfs-5.1/u-boot/u-boot-common.tmpl
+++ ltib/dist/lfs-5.1/u-boot/u-boot-common.tmpl
@@ -18,7 +18,8 @@
     make HOSTCC="$BUILDCC" CROSS_COMPILE=$TOOLCHAIN_PREFIX O=$BUILD_DIR distclean
 fi
 make HOSTCC="$BUILDCC" CROSS_COMPILE=$TOOLCHAIN_PREFIX O=$BUILD_DIR $PKG_U_BOOT_CONFIG_TYPE
-make HOSTCC="$BUILDCC" HOSTSTRIP="$BUILDSTRIP" \
+make -j`grep -c ^processor /proc/cpuinfo` \
+     HOSTCC="$BUILDCC" HOSTSTRIP="$BUILDSTRIP" \
      CROSS_COMPILE=$TOOLCHAIN_PREFIX $PKG_U_BOOT_BUILD_ARGS \
      O=$BUILD_DIR all
 
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/u-boot/u-boot.spec ltib/dist/lfs-5.1/u-boot/u-boot.spec
--- ltib.reference/dist/lfs-5.1/u-boot/u-boot.spec
+++ ltib/dist/lfs-5.1/u-boot/u-boot.spec
@@ -17,16 +17,25 @@
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup 
 %patch0 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 PKG_U_BOOT_CONFIG_TYPE=${PKG_U_BOOT_CONFIG_TYPE:-TQM823L_config}
 make HOSTCC="$BUILDCC" CROSS_COMPILE=$TOOLCHAIN_PREFIX $PKG_U_BOOT_CONFIG_TYPE
 make HOSTCC="$BUILDCC" HOSTSTRIP="$BUILDSTRIP" \
      CROSS_COMPILE=$TOOLCHAIN_PREFIX $PKG_U_BOOT_BUILD_ARGS all
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 mkdir -p $RPM_BUILD_ROOT/%{pfx}/boot
 for i in u-boot.bin u-boot
@@ -35,6 +44,9 @@
 done
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 %Files
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/udev/udev.spec ltib/dist/lfs-5.1/udev/udev.spec
--- ltib.reference/dist/lfs-5.1/udev/udev.spec
+++ ltib/dist/lfs-5.1/udev/udev.spec
@@ -25,12 +25,9 @@
 Patch13         : udev-117-mxc-ipu-dev-privilege.patch
 Patch14         : udev-117-mxc-vpu.patch
 Patch15         : udev-117-chg-to-attrs.patch
-Patch16         : udev-117-add_p1003_egalax.patch
-Patch17         : udev-117-add-galcore-and-asrc.patch
-Patch18	        : udev-117-change-mxc-galcore-to-galcore.patch
-
 BuildRoot	: %{_tmppath}/%{name}
 Prefix		: %{pfx}
+AutoReqProv     : no
 
 # List of extra things to build, which must be
 # passed to make at build time and install time.
@@ -38,10 +35,26 @@
 # it once.
 %define extras "extras/volume_id extras/path_id extras/usb_id extras/firmware"
 
+
+%Package rfs
+Summary         : Trimmed udev for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+udev package contents restricted to just the files that are
+needed at run time on the target.
+
+
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch0 -p1
 %patch1 -p1
@@ -59,17 +72,20 @@
 %patch13 -p1
 %patch14 -p1
 %patch15 -p1
-%patch16 -p1
-%patch17 -p1
-%patch18 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make EXTRAS=%{extras}
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-make install EXTRAS=%{extras} DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-install -m 644 etc/udev/packages/40-alsa.rules $RPM_BUILD_ROOT/%{pfx}/etc/udev/rules.d
+make install EXTRAS=%{extras} DESTDIR=$RPM_BUILD_ROOT%{pfx}
+install -m 644 etc/udev/packages/40-alsa.rules $RPM_BUILD_ROOT%{pfx}/etc/udev/rules.d
 
 # To avoid duplication removed as skell installs this and all the
 # other init scripts.
@@ -78,12 +94,12 @@
 
 if [ "$PKG_UDEV_WANT_IMX" = "y" ]
 then
-	install -m 644 etc/udev/ltib/??-imx*.rules $RPM_BUILD_ROOT/%{pfx}/etc/udev/rules.d
+	install -m 644 etc/udev/ltib/??-imx*.rules $RPM_BUILD_ROOT%{pfx}/etc/udev/rules.d
 fi
 
 if [ "$PKG_UDEV_WANT_AUTOMOUNT" = "y" ]
 then
-	install -m 644 etc/udev/ltib/65-automount.rules $RPM_BUILD_ROOT/%{pfx}/etc/udev/rules.d
+	install -m 644 etc/udev/ltib/65-automount.rules $RPM_BUILD_ROOT%{pfx}/etc/udev/rules.d
 fi
 
 if [ "$PKG_UDEV_WANT_NON_RAID" = "y" ]
@@ -95,13 +111,26 @@
 	# capacity incorrectly.
 
 	perl -pi -e 's/vol_id /vol_id --skip-raid /' \
-		$RPM_BUILD_ROOT/%{pfx}/etc/udev/rules.d/*
+		$RPM_BUILD_ROOT%{pfx}/etc/udev/rules.d/*
 fi
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_libdir}/pkgconfig, d;
+    \,^%{pfx}%{_mandir}, d;
+    \,^%{pfx}%{_includedir}, d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/unzip/unzip.spec ltib/dist/lfs-5.1/unzip/unzip.spec
--- ltib.reference/dist/lfs-5.1/unzip/unzip.spec
+++ ltib/dist/lfs-5.1/unzip/unzip.spec
@@ -12,24 +12,59 @@
 Source          : unzip552.tar.gz
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed unzip for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+unzip package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup -n unzip-5.52
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make -f unix/Makefile linux_noasm
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install prefix=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}/usr/man, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/usb_modeswitch/usb_modeswitch.spec ltib/dist/lfs-5.1/usb_modeswitch/usb_modeswitch.spec
--- ltib.reference/dist/lfs-5.1/usb_modeswitch/usb_modeswitch.spec
+++ ltib/dist/lfs-5.1/usb_modeswitch/usb_modeswitch.spec
@@ -0,0 +1,79 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : USB Modeswitch gets mobile broadband cards in operational mode
+Name            : usb-modeswitch
+Version         : 2.3.0
+Release         : 1
+License         : LGPL
+Vendor          : MECT
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.bz2
+Source1         : usb_modeswitch_helper
+Requires        : usb-modeswitch-data
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed down to just the run time files
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Requires        : usb-modeswitch-data-rfs
+AutoReqProv     : no
+
+%Description rfs
+%name} package contents trimmed to just the files
+that are needed at run time on the target.
+
+
+%Description
+%{summary}.
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+make
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+# Target install-static does not depend on external Tcl interpreter/libs.
+make install-static DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+install -m755 -D %{SOURCE1} $RPM_BUILD_ROOT/%{pfx}/usr/sbin/$(basename %{SOURCE1})
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_sbindir}/usb_modeswitch_dispatcher, d;
+    \,^%{pfx}%{_sysconfdir}, d;
+    \,^%{pfx}/%{_lib}, d;
+    \,^%{pfx}%{_localstatedir}/%{_lib}, d;
+    \,^%{pfx}%{_mandir}, d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/usb_modeswitch/usb_modeswitch_data.spec ltib/dist/lfs-5.1/usb_modeswitch/usb_modeswitch_data.spec
--- ltib.reference/dist/lfs-5.1/usb_modeswitch/usb_modeswitch_data.spec
+++ ltib/dist/lfs-5.1/usb_modeswitch/usb_modeswitch_data.spec
@@ -0,0 +1,108 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : Data for the USB Modeswitch tool
+Name            : usb-modeswitch-data
+Version         : 20160112
+Release         : 1
+License         : LGPL
+Vendor          : MECT
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+Source          : %{name}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed down to just the run time files
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%name} package contents trimmed to just the files
+that are needed at run time on the target.
+
+
+%Description
+%{summary}.
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make install DESTDIR=$RPM_BUILD_ROOT/%{pfx}
+
+#########################################################
+# FIXME: THIS BREAKS SUPPORT FOR OTHER 05c6:1000 DEVICES!
+#########################################################
+#
+# Add support for 05c6:1000 --> 05c6:6000
+#
+# http://www.draisberghof.de/usb_modeswitch/bb/viewtopic.php?f=3&t=2565
+#
+# usb_modeswitch -W -v 05c6 -p 1000 -K
+#
+# «I don't think it is possible to add the generic 05c6:1000
+# to a distributed usb_modeswitch data package, the vendor,
+# product, or manufacturer strings are unfortunately not unique.
+# There is however nothing preventing you from using a
+# proprietary config file on your own computer, it should
+# contain:
+# 
+# TargetVendor=0x05c6
+# TargetProduct=0x6000
+# 
+# StandardEject=1
+# 
+# The file should be named 05c6:1000 and placed in the
+# /etc/usb_modeswitch.d directory.»
+#
+cd $RPM_BUILD_ROOT%{pfx}/usr/share/usb_modeswitch
+cat > 05c6:1000 <<EOM
+TargetVendor=0x05c6
+TargetProduct=0x6000
+
+StandardEject=1
+EOM
+
+# Compact the mode switching databse.
+cd $RPM_BUILD_ROOT%{pfx}/usr/share/usb_modeswitch
+BZIP2=-9 tar cjf %{_tmppath}/configPack.tar.bz2 *
+rm -rf *
+mv %{_tmppath}/configPack.tar.bz2 .
+
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_sysconfdir}, d;
+    \,^%{pfx}/%{_lib}/udev, d;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/wifi-drivers/wifi-drivers.spec ltib/dist/lfs-5.1/wifi-drivers/wifi-drivers.spec
--- ltib.reference/dist/lfs-5.1/wifi-drivers/wifi-drivers.spec
+++ ltib/dist/lfs-5.1/wifi-drivers/wifi-drivers.spec
@@ -0,0 +1,170 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+%define src_arch backports
+
+Summary         : Wi-Fi drivers ported from newer kernels.
+Name            : wifi-drivers
+Version         : 3.12.8
+Release         : 1
+License         : GPL
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Kernel
+URL             : http://www.kernel.org/pub/linux/kernel/projects/backports/stable/v%{version}/%{src_arch}-%{version}-%{release}.tar.xz
+Source          : %{src_arch}-%{version}-%{release}.tar.xz
+Source1         : linux-firmware-20171215-82.git2451bb22.fc27.noarch.rpm
+Patch1          : backports-3.12.8-1-no_power_save_mode.patch
+Patch2          : backports-3.12.8-1-no_depmod.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package common-rfs
+Summary         : Common run time files for backported drivers.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Kernel
+AutoReqProv     : no
+
+%Description common-rfs
+%name} package contents trimmed to just the common files that
+are needed at run time on the target by the backported driver.
+
+%Package ath9k_htc-rfs
+Summary         : Run time files for the ath9k_htc driver.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Kernel
+Requires        : %{name}-common-rfs
+AutoReqProv     : no
+
+%Description ath9k_htc-rfs
+%name} package contents trimmed to just the files that are
+needed at run time on the target for the ath9k_htc driver.
+
+%Package rt5370-rfs
+Summary         : Run time files for the rt5370 driver.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Kernel
+Requires        : %{name}-common-rfs
+AutoReqProv     : no
+
+%Description rt5370-rfs
+%name} package contents trimmed to just the files that are
+needed at run time on the target for the driver for the
+RT5370 chipset.
+
+
+%Description
+%{name} provides drivers released on newer kernels
+backported for usage on older kernels.
+
+
+#################################################################
+%Prep
+export LC_ALL=C
+
+%setup -n %{src_arch}-%{version}-%{release}
+%patch1 -p1
+%patch2 -p1
+
+
+#################################################################
+%Build
+export LC_ALL=C
+
+export PATH=$UNSPOOF_PATH
+
+make -j$(nproc) \
+    prefix=%{_prefix} \
+    CROSS_COMPILE=${TOOLCHAIN_PATH}/bin/${TOOLCHAIN_PREFIX} \
+    ARCH=$LINTARCH \
+    KLIB=${TOP}/rootfs/lib/modules/%{kversion} \
+    KLIB_BUILD=${TOP}/rpm/BUILD/linux \
+    defconfig-wifi
+
+make -j$(nproc) \
+    prefix=%{_prefix} \
+    CROSS_COMPILE=${TOOLCHAIN_PATH}/bin/${TOOLCHAIN_PREFIX} \
+    ARCH=$LINTARCH \
+    KLIB=${TOP}/rootfs/lib/modules/%{kversion} \
+    KLIB_BUILD=${TOP}/rpm/BUILD/linux \
+    oldconfig
+
+export PATH=$SPOOF_PATH
+
+make -j$(nproc) \
+    prefix=%{_prefix} \
+    CROSS_COMPILE=${TOOLCHAIN_PATH}/bin/${TOOLCHAIN_PREFIX} \
+    ARCH=$LINTARCH \
+    KLIB=${RPM_BUILD_ROOT}%{pfx} \
+    KLIB_BUILD=${TOP}/rpm/BUILD/linux \
+
+
+#################################################################
+%Install
+export LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+mkdir -p $RPM_BUILD_ROOT%{pfx}
+
+# Firmware for rtl8192cu driver
+cd $RPM_BUILD_ROOT%{pfx}
+
+# Use the host rpm2cpio since the LTIB rpm2cpio is too old.
+ATHFW=htc_9271.fw
+RTFW=rt2870.bin
+/usr/bin/rpm2cpio %{SOURCE1} | cpio -diuv \*/${ATHFW} \*/${RTFW}
+install -D -m 644 usr/lib/firmware/${ATHFW} $RPM_BUILD_ROOT%{pfx}/lib/firmware/${ATHFW}
+install -D -m 644 usr/lib/firmware/${RTFW} $RPM_BUILD_ROOT%{pfx}/lib/firmware/${RTFW}
+
+rm -rf usr      # Make sure it holds ONLY the cpio output!
+cd -
+
+mkdir -p $RPM_BUILD_ROOT%{pfx}/usr/sbin
+
+make \
+    prefix=%{_prefix} \
+    CROSS_COMPILE=${TOOLCHAIN_PATH}/bin/${TOOLCHAIN_PREFIX} \
+    ARCH=$LINTARCH \
+    KLIB=${RPM_BUILD_ROOT}%{pfx} \
+    KLIB_BUILD=${TOP}/rpm/BUILD/linux \
+    install
+
+
+#################################################################
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+#################################################################
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files common-rfs
+%defattr(-,root,root)
+%{pfx}/lib/modules/2.6.35.3/updates/compat/compat.ko
+%{pfx}/lib/modules/2.6.35.3/updates/net/mac80211/mac80211.ko
+%{pfx}/lib/modules/2.6.35.3/updates/net/wireless/cfg80211.ko
+
+%Files ath9k_htc-rfs
+%defattr(-,root,root)
+%{pfx}/lib/firmware/htc_9271.fw
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/ath/ath.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/ath/ath9k/ath9k.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/ath/ath9k/ath9k_common.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/ath/ath9k/ath9k_htc.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/ath/ath9k/ath9k_hw.ko
+
+%Files rt5370-rfs
+%defattr(-,root,root)
+%{pfx}/lib/firmware/rt2870.bin
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/rt2x00/rt2800lib.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/rt2x00/rt2800usb.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/rt2x00/rt2x00lib.ko
+%{pfx}/lib/modules/2.6.35.3/updates/drivers/net/wireless/rt2x00/rt2x00usb.ko
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/wireless-tools/wireless-tools.spec ltib/dist/lfs-5.1/wireless-tools/wireless-tools.spec
--- ltib.reference/dist/lfs-5.1/wireless-tools/wireless-tools.spec
+++ ltib/dist/lfs-5.1/wireless-tools/wireless-tools.spec
@@ -8,28 +8,64 @@
 Vendor          : Freescale
 Packager        : Stuart Hughes
 Group           : System Environment/Base
-Source          : wireless_tools.%{version}.tar.gz
+Source          : %{name}.%{version}.tar.gz
 Patch1          : wireless-tools-29-tc-segv.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment/Base
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents restricted to just
+the files that are needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
-%setup -n wireless_tools.%{version}
+export LC_ALL
+LC_ALL=C
+
+%setup -n %{name}.%{version}
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 make
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 make install PREFIX=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
 
+cd %{_builddir}/%{name}.%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_includedir}, d;
+    \,^%{pfx}%{_prefix}/man, d;
+' all_files.lst > rfs_files.lst
+
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
-%Files
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/wpa_supplicant/wpa_supplicant.spec ltib/dist/lfs-5.1/wpa_supplicant/wpa_supplicant.spec
--- ltib.reference/dist/lfs-5.1/wpa_supplicant/wpa_supplicant.spec
+++ ltib/dist/lfs-5.1/wpa_supplicant/wpa_supplicant.spec
@@ -7,13 +7,28 @@
 License         : GPL
 Vendor          : Freescale
 Packager        : Sam Yang
-Group           : Application/System
+Group           : Applications/System
 Source          : %{name}-%{version}.tar.gz
+Patch1          : wpa_supplicant-0.5.9-install_prefix.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed %{name} to just the runtimes needed on the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/System
+AutoReqProv     : no
+
+%Description rfs
+%{name} package contents reduced to just the runtimes
+that are needed on the target.
+
 
 %Description
-wpa_supplicant is an implementation of the WPA Supplicant component,
+%{name} is an implementation of the WPA Supplicant component,
 i.e., the part that runs in the client stations. It implements WPA key
 negotiation with a WPA Authenticator and EAP authentication with
 Authentication Server. In addition, it controls the roaming and IEEE
@@ -22,9 +37,16 @@
 %{summary}
 
 %Prep
-%setup 
+export LC_ALL
+LC_ALL=C
+
+%setup
+%patch1 -p1 
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 #Create .config file for build
 cat > .config << EOF
 #CONFIG_DRIVER_HOSTAP=n
@@ -62,33 +84,31 @@
 CONFIG_L2_PACKET=linux
 EOF
 
-#Create a default ap config file
-cat > ap_config.conf << EOF
-ctrl_interface=/var/run/wpa_supplicant
-update_config=1
-
-network={
-        ssid="cisco-2"
-        key_mgmt=NONE
-        auth_alg=OPEN
-        disabled=1
-        id_str="p2"
-}
-EOF
-
-make CONFIG_L2_PACKET=linux
+make CONFIG_L2_PACKET=linux prefix=%{_prefix}
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
+
 make install CONFIG_L2_PACKET=linux prefix=%{_prefix} DESTDIR=$RPM_BUILD_ROOT/%{pfx}
-mkdir -p  $RPM_BUILD_ROOT/%{pfx}/usr/etc/unifi
-cp ap_config.conf $RPM_BUILD_ROOT/%{pfx}/usr/etc/unifi
 
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    p;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
 %defattr(-,root,root)
-%{pfx}/*
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/xenomai/xenomai.spec ltib/dist/lfs-5.1/xenomai/xenomai.spec
--- ltib.reference/dist/lfs-5.1/xenomai/xenomai.spec
+++ ltib/dist/lfs-5.1/xenomai/xenomai.spec
@@ -0,0 +1,150 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : xenomai - Real Time extension for the Linux kernel
+Name            : xenomai
+Version         : 2.6.0
+Release         : 1
+License         : GPL
+Vendor          : Freescale
+Packager        : Mect
+Group           : System Environment
+Source          : %{name}-%{version}.tar.bz2
+Patch0          : xenomai-2.6.0-mect_rts_ioctl.patch
+Patch1          : xenomai-2.6.0-backport_rs485.patch
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed xenomai for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : System Environment
+AutoReqProv     : no
+
+%Description rfs
+xenomai package contents restricted to just the files that
+are needed at run time on the target.
+
+
+%Description
+%{summary}
+
+#The Prep target is performed together with the kernel if kernel with ipipe is selected.
+#  %{name}-%{version}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%patch0 -p1
+%patch1 -p1
+
+./configure CFLAGS="-march=armv5te" LDFLAGS="-march=armv5te" --build=%{_build} --host=$CFGHOST
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+make DESTDIR=$RPM_BUILD_ROOT%{pfx} all
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make DESTDIR=$RPM_BUILD_ROOT%{pfx} install
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files
+%defattr(-,root,root)
+%{pfx}/*
+
+%Files rfs
+%defattr(-,root,root)
+%{pfx}%{_prefix}/xenomai/lib/libanalogy.so
+%{pfx}%{_prefix}/xenomai/lib/libanalogy.so.1
+%{pfx}%{_prefix}/xenomai/lib/libanalogy.so.1.0.0
+%{pfx}%{_prefix}/xenomai/lib/libnative.so
+%{pfx}%{_prefix}/xenomai/lib/libnative.so.3
+%{pfx}%{_prefix}/xenomai/lib/libnative.so.3.0.0
+%{pfx}%{_prefix}/xenomai/lib/libpsos.so
+%{pfx}%{_prefix}/xenomai/lib/libpsos.so.0
+%{pfx}%{_prefix}/xenomai/lib/libpsos.so.0.0.0
+%{pfx}%{_prefix}/xenomai/lib/libpthread_rt.so
+%{pfx}%{_prefix}/xenomai/lib/libpthread_rt.so.1
+%{pfx}%{_prefix}/xenomai/lib/libpthread_rt.so.1.0.0
+%{pfx}%{_prefix}/xenomai/lib/librtdm.so
+%{pfx}%{_prefix}/xenomai/lib/librtdm.so.1
+%{pfx}%{_prefix}/xenomai/lib/librtdm.so.1.0.0
+%{pfx}%{_prefix}/xenomai/lib/libuitron.so
+%{pfx}%{_prefix}/xenomai/lib/libuitron.so.0
+%{pfx}%{_prefix}/xenomai/lib/libuitron.so.0.0.0
+%{pfx}%{_prefix}/xenomai/lib/libvrtx.so
+%{pfx}%{_prefix}/xenomai/lib/libvrtx.so.0
+%{pfx}%{_prefix}/xenomai/lib/libvrtx.so.0.0.0
+%{pfx}%{_prefix}/xenomai/lib/libvxworks.so
+%{pfx}%{_prefix}/xenomai/lib/libvxworks.so.1
+%{pfx}%{_prefix}/xenomai/lib/libvxworks.so.1.0.0
+%{pfx}%{_prefix}/xenomai/lib/libxenomai.so
+%{pfx}%{_prefix}/xenomai/lib/libxenomai.so.0
+%{pfx}%{_prefix}/xenomai/lib/libxenomai.so.0.0.0
+### TODO Remove all below.
+%{pfx}%{_prefix}/xenomai/bin/arith
+%{pfx}%{_prefix}/xenomai/bin/check-vdso
+%{pfx}%{_prefix}/xenomai/bin/clocktest
+%{pfx}%{_prefix}/xenomai/bin/cmd_bits
+%{pfx}%{_prefix}/xenomai/bin/cmd_read
+%{pfx}%{_prefix}/xenomai/bin/cmd_write
+%{pfx}%{_prefix}/xenomai/bin/cond-torture-native
+%{pfx}%{_prefix}/xenomai/bin/cond-torture-posix
+%{pfx}%{_prefix}/xenomai/bin/cyclictest
+%{pfx}%{_prefix}/xenomai/bin/dohell
+%{pfx}%{_prefix}/xenomai/bin/insn_bits
+%{pfx}%{_prefix}/xenomai/bin/insn_read
+%{pfx}%{_prefix}/xenomai/bin/insn_write
+%{pfx}%{_prefix}/xenomai/bin/irqloop
+%{pfx}%{_prefix}/xenomai/bin/klatency
+%{pfx}%{_prefix}/xenomai/bin/latency
+%{pfx}%{_prefix}/xenomai/bin/mutex-torture-native
+%{pfx}%{_prefix}/xenomai/bin/mutex-torture-posix
+%{pfx}%{_prefix}/xenomai/bin/rtcanrecv
+%{pfx}%{_prefix}/xenomai/bin/rtcansend
+%{pfx}%{_prefix}/xenomai/bin/rtdm
+%{pfx}%{_prefix}/xenomai/bin/switchtest
+%{pfx}%{_prefix}/xenomai/bin/wakeup-time
+%{pfx}%{_prefix}/xenomai/bin/wf_generate
+%{pfx}%{_prefix}/xenomai/bin/wrap-link.sh
+%{pfx}%{_prefix}/xenomai/bin/xeno
+%{pfx}%{_prefix}/xenomai/bin/xeno-config
+%{pfx}%{_prefix}/xenomai/bin/xeno-regression-test
+%{pfx}%{_prefix}/xenomai/bin/xeno-test
+%{pfx}%{_prefix}/xenomai/bin/xeno-test-run
+%{pfx}%{_prefix}/xenomai/bin/xeno-test-run-wrapper
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_native.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_posix.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_psos+.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_rtdm.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_uitron.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_vrtx.pc
+%{pfx}%{_prefix}/xenomai/lib/pkgconfig/libxenomai_vxworks.pc
+%{pfx}%{_prefix}/xenomai/lib/posix.wrappers
+%{pfx}%{_prefix}/xenomai/sbin/analogy_config
+%{pfx}%{_prefix}/xenomai/sbin/rtcanconfig
+%{pfx}%{_prefix}/xenomai/sbin/rtps
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/native+posix/mq_select
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/native/heap
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/native/leaks
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/native/mayday
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/native/tsc
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/posix/leaks
+%{pfx}%{_prefix}/xenomai/share/xenomai/regression/posix/shm
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/zip30/zip30.spec ltib/dist/lfs-5.1/zip30/zip30.spec
--- ltib.reference/dist/lfs-5.1/zip30/zip30.spec
+++ ltib/dist/lfs-5.1/zip30/zip30.spec
@@ -0,0 +1,70 @@
+%define pfx /opt/freescale/rootfs/%{_target_cpu}
+
+Summary         : A file compression utility.
+Name            : zip
+Version         : 3.0.0
+Release         : 0
+License         : BSD
+Vendor          : Mect srl
+Packager        : Monica Donno
+Group           : Applications/File
+Source          : %{name}-%{version}.tar.bz2
+BuildRoot       : %{_tmppath}/%{name}
+Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed zip to just the runtimes needed on the root file system.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Applications/File
+AutoReqProv     : no
+
+%Description rfs
+zip package contents restricted to just the files that are
+needed at run time on the target.
+
+
+%Description
+%{summary}
+
+%Prep
+export LC_ALL
+LC_ALL=C
+
+%setup
+
+%Build
+export LC_ALL
+LC_ALL=C
+
+make -f unix/Makefile generic_gcc
+
+
+%Install
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+make -f unix/Makefile install PREFIX=$RPM_BUILD_ROOT/%{pfx}/%{_prefix}
+$TOOLCHAIN_PATH/bin/${TOOLCHAIN_PREFIX}strip --strip-unneeded $RPM_BUILD_ROOT/%{pfx}%{_prefix}/bin/zip
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed -n '
+    \,^%{pfx}%{_bindir}/zip, p;
+' all_files.lst > rfs_files.lst
+
+%Clean
+export LC_ALL
+LC_ALL=C
+
+rm -rf $RPM_BUILD_ROOT
+
+
+%Files -f all_files.lst
+%defattr(-,root,root)
+
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
diff -aurN '--exclude=*-orig.spec' '--exclude=*.bak' '--exclude=*.swp' ltib.reference/dist/lfs-5.1/zlib/zlib.spec ltib/dist/lfs-5.1/zlib/zlib.spec
--- ltib.reference/dist/lfs-5.1/zlib/zlib.spec
+++ ltib/dist/lfs-5.1/zlib/zlib.spec
@@ -12,15 +12,35 @@
 Patch1          : zlib-1.2.3-arflags-1.patch
 BuildRoot       : %{_tmppath}/%{name}
 Prefix          : %{pfx}
+AutoReqProv     : no
+
+
+%Package rfs
+Summary         : Trimmed zlib for root file system requirements.
+Vendor          : MECT s.r.l.
+Packager        : Mihai Lazarescu
+Group           : Development/Libraries
+AutoReqProv     : no
+
+%Description rfs
+zlib package contents restricted to just the files that are
+needed at run time on the target.
+
 
 %Description
 %{summary}
 
 %Prep
+export LC_ALL
+LC_ALL=C
+
 %setup
 %patch1 -p1
 
 %Build
+export LC_ALL
+LC_ALL=C
+
 ./configure --prefix=%{_prefix} --shared
 mv Makefile Makefile.shared
 ./configure --prefix=%{_prefix}
@@ -29,17 +49,31 @@
 make -f Makefile.static
 
 %Install
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
-mkdir -p $RPM_BUILD_ROOT/%{pfx}/%{_prefix}
-make -f Makefile.shared install prefix=${RPM_BUILD_ROOT}/%{pfx}/%{_prefix}
-make -f Makefile.static install prefix=${RPM_BUILD_ROOT}/%{pfx}/%{_prefix}
+mkdir -p $RPM_BUILD_ROOT%{pfx}%{_prefix}
+make -f Makefile.shared install prefix=${RPM_BUILD_ROOT}%{pfx}%{_prefix}
+make -f Makefile.static install prefix=${RPM_BUILD_ROOT}%{pfx}%{_prefix}
+
+cd %{_builddir}/%{name}-%{version}
+( cd $RPM_BUILD_ROOT > /dev/null; find .%{pfx} \( \( -not -type d \) -o \( -type d -empty \) \) -print | sed 's/^\.//' ) > all_files.lst
+sed '
+    \,^%{pfx}%{_mandir}, d;
+    \,^%{pfx}%{_includedir}, d;
+    /\.l\?a$/ d;
+' all_files.lst > rfs_files.lst
 
 %Clean
+export LC_ALL
+LC_ALL=C
+
 rm -rf $RPM_BUILD_ROOT
 
 
-%Files
+%Files -f all_files.lst
 %defattr(-,root,root)
-%{pfx}/*
-
 
+%Files rfs -f rfs_files.lst
+%defattr(-,root,root)
