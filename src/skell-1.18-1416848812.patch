diff --exclude CVS --exclude .git -uNr skell-1.18/Makefile skell-1.18.modified/Makefile
--- skell-1.18/Makefile	2014-11-24 18:06:52.601688981 +0100
+++ skell-1.18.modified/Makefile	2014-11-24 17:59:23.993497213 +0100
@@ -32,5 +32,6 @@
 	rm -rf home
 	mkdir -p local/home
 	ln -s local/home
-	cd -
+	cd $(RPM_BUILD_DIR)/skell-1.18
+	#cd -
 
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/profile skell-1.18.modified/etc/profile
--- skell-1.18/etc/profile	2014-11-24 18:06:52.601688981 +0100
+++ skell-1.18.modified/etc/profile	2014-11-24 11:16:02.766796305 +0100
@@ -26,3 +26,22 @@
 export QT_QWS_FONTDIR=/usr/lib/fonts
 export POINTERCAL_FILE=$TSLIB_CALIBFILE
 
+# application variables
+if [ -e /local/path.conf ]
+then
+	export LOCAL_ETC_DIR=`grep BaseEtcDir /local/path.conf | awk '{print $2}'`
+else
+	export LOCAL_ETC_DIR=""
+fi
+
+if [ "$LOCAL_ETC_DIR" == "" ]
+then
+	export LOCAL_ETC_DIR=/local/etc/sysconfig
+fi
+
+if [ $LOCAL_ETC_DIR == "/local/etc/sysconfig" ]
+then
+	export LOCAL_ROOT_DIR=/local/root
+else
+	export LOCAL_ROOT_DIR=/local/sd_card/root
+fi
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/S10setup skell-1.18.modified/etc/rc.d/init.d/S10setup
--- skell-1.18/etc/rc.d/init.d/S10setup	2014-11-24 18:06:52.605690982 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/S10setup	2014-11-24 11:16:19.554789605 +0100
@@ -7,20 +7,29 @@
 
 mntdir=/tmp/mnt
 
+LOCAL_ETC_DIR=`grep BaseEtcDir /local/path.conf | awk '{print $2}'`
+if [ "$LOCAL_ETC_DIR" == "" ]
+then
+	LOCAL_ETC_DIR="/local/etc/sysconfig"
+fi
+
 [ -d $mntdir ] || { mntdir=/tmp/mnt; /bin/mkdir $mntdir; }
 [ -d $mntdir ] || exit 1
 sleep 2
-dmesg > $mntdir/log
+dmesg_log=/tmp/log
+dmesg > $dmesg_log
 logfile=$mntdir/update.log
-
+UPDATE_DESCR_FILE=/local/kindofupdate.lck
+  
 start() {
-    
+ 
+	rm -f $UPDATE_DESCR_FILE
     echo -n "Checking for configuration USB key...  "
     sleep 1
     echo "" | tee $logfile
-	usb_string=`awk '/sd[a-z]: sd[a-z]/ ' < $mntdir/log`
+	usb_string=`awk '/sd[a-z]: sd[a-z]/ ' < $dmesg_log`
 	if [ -z "$usb_string" ]; then
-		usb_string=`awk '/sd[a-z]:/ ' < $mntdir/log`
+		usb_string=`awk '/sd[a-z]:/ ' < $dmesg_log`
 	fi
 
 	echo "Found scsi device: $usb_string" | tee -a $logfile
@@ -58,8 +67,8 @@
 
 	else
 		echo "no usb key found in dmesg" | tee -a $logfile
-		echo "exit from configuration script" 	| tee -a $logfile
-		return
+		#echo "exit from configuration script" 	| tee -a $logfile
+		#return
 	fi
 
     echo -n "Starting the configuration process...  "
@@ -68,14 +77,53 @@
         /bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW.  Aborting device reset." | tee -a $logfile; return; }
         /bin/rm -f $mntdir/reset.conf
 
-        # Just remove all configuration files
-        /bin/rm -f /local/etc/sysconfig/errors
-        /bin/rm -f /local/etc/sysconfig/history
-        /bin/rm -f /local/etc/sysconfig/mantainance
+        # Just apply factory defaults
+	FACTORY_DATA="/local/factory_data.tar.gz"
+	if [ -e $FACTORY_DATA ]
+	then
+	tar xzf /local/$FACTORY_DATA -C /
+	if [ $? == 0 ]
+	then
+		chown root:root -R /local
+		#reset also network configuration and put factory_test with exe permission
+		chmod +x /local/root/factory_test
+		sed -i /IPADDR0/d  "$LOCAL_ETC_DIR/net.conf"
+		sed -i /NETMASK0/d  "$LOCAL_ETC_DIR/net.conf"
+		sed -i /GATEWAY0/d  "$LOCAL_ETC_DIR/net.conf"
+		sed -i /NAMESERVER01/d  "$LOCAL_ETC_DIR/net.conf"
+		sed -i /NAMESERVER02/d  "$LOCAL_ETC_DIR/net.conf"
+		sed -i '2i\IPADDR0=192.168.5.211' "$LOCAL_ETC_DIR/net.conf"
+		sed -i '3i\NETMASK0=255.255.255.0' "$LOCAL_ETC_DIR/net.conf"
+		sed -i '4i\GATEWAY0=192.168.5.10' "$LOCAL_ETC_DIR/net.conf"
+		sed -i '5i\NAMESERVER01=' "$LOCAL_ETC_DIR/net.conf"
+		sed -i '6i\NAMESERVER02=' "$LOCAL_ETC_DIR/net.conf"
+
+		echo "The target has been reset." | tee -a $logfile
+		echo "RESET" >> $UPDATE_DESCR_FILE
+	else
+		echo "Error in restoring defaults" | tee -a $logfile
+	fi
+	sync
+	else
+	echo "Error missing factory data" | tee -a $logfile
+	fi
+
 
 		#Eventually add other configuration files to be removed for reset operations
 		echo " Reset done!" | tee -a $logfile
 
+    else if [ `ls /local | grep sysupdate | wc -l` -eq  1 ]; then
+    
+		echo " Found one sysupdate!" | tee -a $logfile
+		countsys=1
+		sysupdatename=`ls /local | grep sysupdate`
+		/bin/mount -orw,remount / 2>/dev/null || { echo ""; echo "Cannot mount the root RW.  Aborting update process." | tee -a $logfile; return; }	
+		/usr/bin/dos2unix /local/$sysupdatename 2>&1 | tee -a $logfile
+		/bin/sh /local/$sysupdatename 2>&1 | tee -a $logfile
+		echo " Update '/local/$sysupdatename' applied!!!" | tee -a $logfile
+		rm -f /local/$sysupdatename
+		echo "SYSUPDATE" >> $UPDATE_DESCR_FILE
+ 
 	else if [ `ls $mntdir | grep sysupdate_ | wc -l` -eq  1 ]; then
     
 		echo " Found one sysupdate!" | tee -a $logfile
@@ -85,8 +133,7 @@
 		/usr/bin/dos2unix $mntdir/$sysupdatename 2>&1 | tee -a $logfile
 		/bin/sh $mntdir/$sysupdatename 2>&1 | tee -a $logfile
 		echo " Update '$mntdir/$sysupdatename' applied!!!" | tee -a $logfile
-		/local/root/application -v | tee -a $logfile
-		killall application
+		echo "SYSUPDATE" >> $UPDATE_DESCR_FILE
 
     else if [ -f $mntdir/sysupdate.sh ] && [ $countsys -eq 0 ]; then
     	echo " Performing standard sysupdate!" | tee -a $logfile
@@ -94,41 +141,52 @@
 		/usr/bin/dos2unix $mntdir/sysupdate.sh 2>&1 | tee -a $logfile
         /bin/sh $mntdir/sysupdate.sh 2>&1 | tee -a $logfile
 		echo " Update '$mntdir/sysupdate.sh' applied!!!" | tee -a $logfile
+		echo "SYSUPDATE" >> $UPDATE_DESCR_FILE
     else
         # Perform any other configurations
 		/bin/mount -orw,remount $mntdir 2>/dev/null || { echo ""; echo "Cannot mount the USB device RW. Configuration files will be not deleted."; }
-
-		if [ -f $mntdir/database.txt ]; then
-			echo " Found the database list file '$mntdir/database.txt'" | tee -a $logfile
-			/usr/bin/dos2unix $mntdir/database.txt 2>&1 | tee -a $logfile
-			if [ -f $mntdir/`cat $mntdir/database.txt` ]; then
-				echo " Found database file '$mntdir/`cat $mntdir/database.txt`'" | tee -a $logfile
-				/bin/cp $mntdir/`cat $mntdir/database.txt` /local/etc/sysconfig/val01.sqlite 2>&1 | tee -a $logfile
-				/bin/cp /local/etc/sysconfig/val01.sqlite /local/etc/sysconfig/val01.sqlite.factory 2>&1 | tee -a $logfile
-				echo " Database '$mntdir/`cat $mntdir/database.txt`' updated!" | tee -a $logfile
-			else
-				echo "Error: cannot found database file $mntdir/`cat database.txt`.  Aborting update process."
-			fi
-		else
-        	if [ -f $mntdir/val01.sqlite ]; then
-				echo " Found database file ' $mntdir/val01.sqlite'" | tee -a $logfile
-            	/bin/cp $mntdir/val01.sqlite /local/etc/sysconfig 2>&1 | tee -a $logfile
-				/bin/cp /local/etc/sysconfig/val01.sqlite /local/etc/sysconfig/val01.sqlite.factory 2>&1 | tee -a $logfile
-				echo " Database '$mntdir/val01.sqlite' updated!" | tee -a $logfile
-    	    fi
-		fi
        
         if [ -f $mntdir/application.conf ]; then
 			echo " Found a new configuration file '$mntdir/application.conf'" | tee -a $logfile
 			/usr/bin/dos2unix $mntdir/application.conf 2>&1 | tee -a $logfile
-            /bin/cp $mntdir/application.conf /local/etc/sysconfig 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/application.conf $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
 			echo " Configuration file '$mntdir/application.conf' updated!" | tee -a $logfile
+			echo "APPLICATION CONF" >> $UPDATE_DESCR_FILE
+        fi
+        if [ -f $mntdir/atn01.conf ]; then
+			echo " Found a new configuration file '$mntdir/atn01.conf'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/atn01.conf 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/atn01.conf $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
+			echo " Configuration file '$mntdir/atn01.conf' updated!" | tee -a $logfile
+			echo "ATN01 CONF" >> $UPDATE_DESCR_FILE
+        fi
+        if [ -f $mntdir/Crosstable.csv ]; then
+			echo " Found a new configuration file '$mntdir/Crosstable.csv'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/Crosstable.csv 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/Crosstable.csv $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
+			echo " Configuration file '$mntdir/Crosstable.csv' updated!" | tee -a $logfile
+			echo "CROSSTABLE" >> $UPDATE_DESCR_FILE
+        fi
+        if [ -f $mntdir/Commpar.csv ]; then
+			echo " Found a new configuration file '$mntdir/Commpar.csv'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/Commpar.csv 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/Commpar.csv $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
+			echo " Configuration file '$mntdir/Commpar.csv' updated!" | tee -a $logfile
+			echo "COMMPAR" >> $UPDATE_DESCR_FILE
+        fi
+        if [ -f $mntdir/Alarms.csv ]; then
+			echo " Found a new configuration file '$mntdir/Alarms.csv'" | tee -a $logfile
+			/usr/bin/dos2unix $mntdir/Alarms.csv 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/Alarms.csv $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
+			echo " Configuration file '$mntdir/Alarms.csv' updated!" | tee -a $logfile
+			echo "ALARMS" >> $UPDATE_DESCR_FILE
         fi
         if [ -f $mntdir/net.conf ]; then
 			echo " Found a new network configuration file '$mntdir/net.conf'" | tee -a $logfile
 			/usr/bin/dos2unix $mntdir/net.conf 2>&1 | tee -a $logfile
-            /bin/cp $mntdir/net.conf /local/etc/sysconfig 2>&1 | tee -a $logfile
+            /bin/cp $mntdir/net.conf $LOCAL_ETC_DIR 2>&1 | tee -a $logfile
 			echo " Network configuration file '$mntdir/net.conf' updated!" | tee -a $logfile
+			echo "NETWORK" >> $UPDATE_DESCR_FILE
         fi
         if [ -f $mntdir/autoexec ]; then
 			echo " Found a new autoexec file file '$mntdir/autoexec'" | tee -a $logfile
@@ -137,44 +195,48 @@
 			/bin/cp $mntdir/autoexec /usr/bin/autoexec 2>&1 | tee -a $logfile
 			/bin/mount -oro,remount / 2>&1 | tee -a $logfile
 			echo " Autoexec file '$mntdir/autoexec' updated!" | tee -a $logfile
-        fi
-
-	    if [ -f $mntdir/licence.txt ]; then
-			echo " Found licence file..."
-            /bin/cp $mntdir/licence.txt /local/etc/sysconfig/hw.info 2>&1 | tee -a $logfile
-			echo " Licence applyed"
+			echo "AUTOEXEC" >> $UPDATE_DESCR_FILE
         fi
     fi
     fi
     fi
+    fi
     #Sync for ubifs
     /bin/sync
-    /bin/umount $mntdir
+	if [ -n "$usb_string" ]; then
+    	/bin/umount $mntdir
+	fi
  
     echo "  Done."
 }
+
 stop() {
-    :
+#echo -n "Shutting down 'S10setup'... "
+#start-stop-daemon  -K -q -x /usr/bin/S10setup
+echo "Done."
 }
+
 restart() {
-        stop
-        start
-}	
+stop
+sleep 1
+start
+}
 
 case "$1" in
-  start)
-        start
-        ;;
-  stop)
-        stop
-        ;;
-  restart|reload)
-        restart
-        ;;
-  *)
-        echo $"Usage: $0 {start|stop|restart}"
+start)
+    start
+;;
+stop)
+    stop
+;;
+restart)
+    restart
+;;
+*)
+  echo $"Usage: $0 {start|stop|restart}"
         exit 1
+    ;;
+    
 esac
 
-exit $?
 
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/autoexec skell-1.18.modified/etc/rc.d/init.d/autoexec
--- skell-1.18/etc/rc.d/init.d/autoexec	2014-11-24 18:06:52.605690982 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/autoexec	2014-11-24 11:16:10.302790239 +0100
@@ -1,5 +1,29 @@
 #!/bin/sh
 
+if [ -e /local/path.conf ]
+then
+	LOCAL_ETC_DIR=`grep BaseEtcDir /local/path.conf | awk '{print $2}'`
+else
+	LOCAL_ETC_DIR=""
+fi
+
+if [ "$LOCAL_ETC_DIR" == "" ]
+then
+	LOCAL_ETC_DIR="/local/etc/sysconfig"
+fi
+
+if [ $LOCAL_ETC_DIR == "/local/etc/sysconfig" ]
+then
+	LOCAL_ROOT_DIR="/local/root"
+else
+	LOCAL_ROOT_DIR="/local/sd_card/root"
+fi
+
+echo "-------------------------------------------"
+echo LOCAL_ROOT_DIR: $LOCAL_ROOT_DIR
+echo LOCAL_ETC_DIR: $LOCAL_ETC_DIR
+echo "-------------------------------------------"
+
 start() {
 
 # ts variable
@@ -7,7 +31,7 @@
 export TSLIB_PLUGINDIR=/usr/lib/ts
 export TSLIB_TSDEVICE=/dev/input/ts0
 export TSLIB_CONSOLEDEVICE=none
-export TSLIB_CALIBFILE=/local/etc/sysconfig/pointercal
+export TSLIB_CALIBFILE=$LOCAL_ETC_DIR/pointercal
 
 # qt variable
 export QWS_MOUSE_PROTO=tslib:$TSLIB_TSDEVICE
@@ -21,16 +45,88 @@
 	echo "Done."
 fi
 
-if [ -x /usr/bin/autoexec ]; then
-	echo -n "Starting 'autoexec'... "
-	start-stop-daemon  -S -b -q -x /usr/bin/autoexec
+# Check if we are updating the system, if yes wait
+usb_string=`df | cut -d ' ' -f1 | grep /dev/sd`
+
+while [ "${usb_string:0:7}" == "/dev/sd" ]
+do
+	sleep 1
+	echo "waiting for usb umount"
+	usb_string=`df | cut -d ' ' -f1 | grep /dev/sd`
+	
+done
+
+echo "NO update are running now,so go on...."
+
+# fix for the remount read-only problem after updates
+touch /root/cucu
+if [ $? -eq 0 ]; then 
+	echo -n "filesystem in read/write. Set it in read only... "
+	rm /root/cucu
+	mount -oro,remount /
+	echo "done."
+fi 
+
+# set the brightness
+if [ -e $LOCAL_ETC_DIR/brightness ]
+then
+	source $LOCAL_ETC_DIR/brightness
+else
+	echo 70 > /sys/devices/platform/mxs-bl.0/backlight/mxs-bl/brightness
+fi
+echo "setting brightness level at `cat /sys/devices/platform/mxs-bl.0/backlight/mxs-bl/brightness`"
+
+# if date is equal 1970 statr the set time tool
+if [ `date '+%Y'` -eq "1970" ]; then                          
+	echo "setting time ..."  
+	if [ -x $LOCAL_ROOT_DIR/setup_time ]; then                                                           
+		$LOCAL_ROOT_DIR/setup_time -qws > /dev/null 2>&1 
+	fi                                                       
+fi                                                                                                                 
+echo "time set."
+
+if [ -x $LOCAL_ROOT_DIR/systool ] && [ ! -x $LOCAL_ROOT_DIR/factory_test ]
+then
+	echo "Starting systool application."
+	$LOCAL_ROOT_DIR/systool -qws > /dev/null 2>&1
+	echo "Done."
+fi
+
+# if factory test is preset and executable, start it
+if [ -x $LOCAL_ROOT_DIR/factory_test ]
+then
+	echo "Starting test application."
+	$LOCAL_ROOT_DIR/factory_test -qws > /dev/null 2>&1 &
 	echo "Done."
+elif [ -x /local/root/keyGenerator ]
+then
+	echo "Starting keyGenerator application."
+	/local/root/keyGenerator -qws > /dev/null 2>&1 &
+elif [ -x $LOCAL_ROOT_DIR/fcrts ]
+then
+	echo "Starting applications."
+	$LOCAL_ROOT_DIR/fcrts > /dev/null 2>&1 & 
+	if [ -x $LOCAL_ROOT_DIR/safe_hmi ]; then 
+		sleep 2
+		$LOCAL_ROOT_DIR/safe_hmi > /dev/null 2>&1 &
+
+	elif [ -x $LOCAL_ROOT_DIR/hmi ]; then 
+		sleep 2
+		$LOCAL_ROOT_DIR/hmi -qws > /dev/null 2>&1 &
+	fi
+elif [ -x $LOCAL_ROOT_DIR/chooser ]
+then
+	echo "Starting chooser."
+	$LOCAL_ROOT_DIR/chooser -qws > /dev/null 2>&1 &
 fi
+
+echo "Done."
+
 }
 
 stop() {
 echo -n "Shutting down 'autoexec'... "
-start-stop-daemon  -K -q -x /usr/bin/autoexec
+killall -q keyGenerator factory_test chooser safe_hmi fcrts hmi 
 echo "Done."
 }
 
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/boa skell-1.18.modified/etc/rc.d/init.d/boa
--- skell-1.18/etc/rc.d/init.d/boa	2014-11-24 18:06:52.601688981 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/boa	2014-11-24 16:09:38.030927740 +0100
@@ -1,6 +1,6 @@
 #! /bin/sh
 
-INDEXFILE=/local/www/index.html
+INDEXFILE=`grep DocumentRoot /etc/boa.conf | grep -v "#" | cut -d\  -f2`/index.html
 CGIFILE=index.cgi
 if [ -f $INDEXFILE ]; then
 /bin/rm -f $INDEXFILE
@@ -57,4 +57,3 @@
     ;;
     
 esac
-
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/network skell-1.18.modified/etc/rc.d/init.d/network
--- skell-1.18/etc/rc.d/init.d/network	2014-11-24 18:06:52.605690982 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/network	2014-11-24 11:16:15.138792634 +0100
@@ -1,5 +1,13 @@
 #!/bin/sh
-	
+
+# the net info shouldn't be moved with sdcard data 
+LOCAL_ETC_DIR=`grep BaseEtcDir /local/path.conf | awk '{print $2}'`
+if [ "$LOCAL_ETC_DIR" == "" ]
+then
+	LOCAL_ETC_DIR="/local/etc/sysconfig"
+fi
+
+LOCAL_CONFIGFILE=$LOCAL_ETC_DIR/net.conf
 CONFIGFILE=/local/etc/sysconfig/net.conf
 
 if [ ! -x /sbin/ifconfig ]
@@ -17,12 +25,17 @@
     fi
 
     echo "Setting up networking on loopback device: "
-    ifconfig lo 127.0.0.1
-    route add -net 127.0.0.0 netmask 255.0.0.0 lo
+    /sbin/ifconfig lo 127.0.0.1
+    /sbin/route add -net 127.0.0.0 netmask 255.0.0.0 lo
+
+    if [ -e $LOCAL_CONFIGFILE  ]
+    then
+        source $LOCAL_CONFIGFILE
+    fi
 
     if [ -e $CONFIGFILE  ]
     then
-        source $CONFIGFILE
+		eval `grep MAC $CONFIGFILE`
     fi
 
     # in case the config file contain only one network config, use it as config 0
@@ -46,20 +59,20 @@
 	then
 		GATEWAY0=$GATEWAY
 	fi
-	if [ -z $NAMESERVER0 ] && [ -n $NAMESERVER ]
+	if [ -z $NAMESERVER01 ] && [ -n $NAMESERVER ]
 	then
-		NAMESERVER0=$NAMESERVER
+		NAMESERVER01=$NAMESERVER
 	fi
 	if [ -n $BOOTPROTO ] && [ "$BOOTPROTO" = "[DHCP]" ]
 	then
 		IPADDR0="dhcp"
 	fi
 
-    if [ -n "$NAMESERVER0" ]
+    if [ -n "$NAMESERVER01" ]
     then
 	/bin/mount -oremount,rw /
     fi
-    if [ -n "$NAMESERVER1" ]
+    if [ -n "$NAMESERVER11" ]
     then
 	/bin/mount -oremount,rw /
     fi
@@ -82,7 +95,7 @@
         echo "Setting up networking on $INTERFACE0: "
         if [ -n "$MAC0" ]
         then
-			ifconfig $INTERFACE0 hw ether $MAC0
+			/sbin/ifconfig $INTERFACE0 hw ether $MAC0
 		fi
         if [ "$IPADDR0" = "dhcp" ]
         then
@@ -94,17 +107,28 @@
             fi
         else  
             # non-dhcp network startup
-            ifconfig $INTERFACE0 $IPADDR0 netmask $NETMASK0
+            /sbin/ifconfig $INTERFACE0 $IPADDR0 netmask $NETMASK0
 
             if [ -n "$GATEWAY0" ]
             then 
                 echo "Adding static route for default gateway to $GATEWAY0: "
-                route add default gateway $GATEWAY0 $INTERFACE0
+                /sbin/route add default gateway $GATEWAY0 $INTERFACE0
             fi
-            if [ -n "$NAMESERVER0" ]
+            if [ -n "$NAMESERVER01" ]
             then
-                echo "Setting nameserver to $NAMESERVER0 in /etc/resolv.conf: "
-                echo "nameserver $NAMESERVER0" >> /etc/resolv.conf
+                echo "Setting nameserver to $NAMESERVER01 in /etc/resolv.conf: "
+                if [ `awk '{print $2}' /etc/resolv.conf  | grep -c $NAMESERVER01` -eq 0 ]
+                then
+                	echo "nameserver $NAMESERVER01" >> /etc/resolv.conf
+                fi 
+            fi
+            if [ -n "$NAMESERVER02" ]
+            then
+                echo "Setting nameserver to $NAMESERVER02 in /etc/resolv.conf: "
+                if [ `awk '{print $2}' /etc/resolv.conf  | grep -c $NAMESERVER02` -eq 0 ]
+                then
+                	echo "nameserver $NAMESERVER02" >> /etc/resolv.conf
+                fi
             fi
         fi
     fi
@@ -113,32 +137,43 @@
         echo "Setting up networking on $INTERFACE1: "
         if [ -n "$MAC1" ]
         then
-			ifconfig $INTERFACE1 hw ether $MAC1
-		fi
+			/sbin/ifconfig $INTERFACE1 hw ether $MAC1
+	fi
         if [ "$IPADDR1" = "dhcp" ]
         then
             $SYSCFG_DHCPC_CMD $INTERFACE1
         else  
             # non-dhcp network startup
-            ifconfig $INTERFACE1 $IPADDR1 netmask $NETMASK1
+            /sbin/ifconfig $INTERFACE1 $IPADDR1 netmask $NETMASK1
 
             if [ -n "$GATEWAY1" ]
             then 
                 echo "Adding static route for default gateway to $GATEWAY1: "
-                route add default gateway $GATEWAY1 $INTERFACE1
+                /sbin/route add default gateway $GATEWAY1 $INTERFACE1
+            fi
+            if [ -n "$NAMESERVER11" ]
+            then
+                echo "Setting nameserver to $NAMESERVER11 in /etc/resolv.conf: "
+                if [ `awk '{print $2}' /etc/resolv.conf  | grep -c $NAMESERVER11` -eq 0 ]
+                then
+                	echo "nameserver $NAMESERVER11" >> /etc/resolv.conf
+                fi
             fi
-            if [ -n "$NAMESERVER1" ]
+            if [ -n "$NAMESERVER12" ]
             then
-                echo "Setting nameserver to $NAMESERVER1 in /etc/resolv.conf: "
-                echo "nameserver $NAMESERVER1" >> /etc/resolv.conf
+                echo "Setting nameserver to $NAMESERVER12 in /etc/resolv.conf: "
+                if [ `awk '{print $2}' /etc/resolv.conf  | grep -c $NAMESERVER12` -eq 0 ]
+                then
+                	echo "nameserver $NAMESERVER12" >> /etc/resolv.conf
+                fi
             fi
         fi
     fi
-    if [ -n "$NAMESERVER0" ]
+    if [ -n "$NAMESERVER01" ]
     then
 	/bin/mount -oremount,ro /
     fi
-    if [ -n "$NAMESERVER1" ]
+    if [ -n "$NAMESERVER11" ]
     then
 	/bin/mount -oremount,ro /
     fi
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/sdcheck skell-1.18.modified/etc/rc.d/init.d/sdcheck
--- skell-1.18/etc/rc.d/init.d/sdcheck	1970-01-01 01:00:00.000000000 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/sdcheck	2014-11-24 11:28:54.971107117 +0100
@@ -0,0 +1,142 @@
+#!/bin/sh
+
+mntdir=/local/sd_card
+LICENCE_FILE=$mntdir"/.licence"
+APPLICATION="application"
+STORAGE="extrastorage"
+SD_MODE="allinflash"
+
+start() {
+
+#Mounting SD card under /local/sd_card directory
+dmesg_log=/tmp/log
+dmesg > $dmesg_log
+sd_string=`awk '/mmcblk[0-9]: p[0-9]/'  < $dmesg_log`
+/bin/rm -f $dmesg_log
+
+echo "Found sd card device: $sd_string"
+if [ -n "$sd_string" ]; then
+	mntpoint=${sd_string//[: ]/}
+	echo "mount point:$mntpoint"
+
+if [ -n "$mntpoint" ]; then
+	[ -d $mntdir ] || { mntdir=/local/sd_card; /bin/mkdir $mntdir; }
+	if /bin/mount -orw /dev/$mntpoint $mntdir 2>/dev/null; then
+		echo "mounted sd card device in $mntpoint"
+		# check if a licence file exist and check if it is valid
+		if [ -e $LICENCE_FILE ]
+		then
+			CID=`cat /sys/block/mmcblk0/device/cid`
+			if [ "`echo $CID$STORAGE | sign | awk '{print $1}'`" == "`cat $LICENCE_FILE`" ]
+			then
+				echo "Valid licence as data storage"
+				SD_MODE="storage"
+			elif [ "`echo $CID$APPLICATION | sign | awk '{print $1}'`" == "`cat $LICENCE_FILE`" ]
+			then
+				echo "Valid licence as application application"
+				SD_MODE="application"
+			else
+				echo "Invalid licence"
+				#/bin/umount /dev/$mntpoint
+				#echo "sd card unmounted"
+			fi
+		else
+			echo "No licence"
+			#/bin/umount /dev/$mntpoint
+			#echo "sd card unmounted"
+		fi
+	else
+		echo "cannot mount $mntpoint into $mntdir"
+	fi
+else
+	echo "no valid sd card mountpoint found"
+fi
+else
+	echo "no card found"
+fi
+
+if [ "$SD_MODE" == "storage" ]
+then
+	echo "storage mode"
+	echo "BaseEtcDir: /local/etc/sysconfig" > /local/path.conf
+	echo "BaseDataDir: /local/sd_card/data" >> /local/path.conf
+	echo "/local/path.conf updated"
+	if [ "`readlink /control`" != "/local/control" ] || [ "`readlink /root`" != "/local/root" ]
+	then
+		mount -orw,remount / 2>/dev/null
+		cd / 2>/dev/null
+		rm /control 2>/dev/null
+		ln -s /local/control /control 2>/dev/null
+		rm /root 2>/dev/null
+		ln -s /local/root /root 2>/dev/null
+		cd - 2>/dev/null
+		mount -oro,remount / 2>/dev/null
+		echo "update link"
+	fi
+elif [ "$SD_MODE" == "application" ]
+then
+	echo "application mode"
+	echo "BaseEtcDir: /local/sd_card/etc/sysconfig" > /local/path.conf
+	echo "BaseDataDir: /local/sd_card/data" >> /local/path.conf
+	echo "/local/path.conf updated"
+	if [ "`readlink /control`" != "/local/sd_card/control" ] || [ "`readlink /root`" != "/local/sd_card/root" ]
+	then
+		mount -orw,remount / 2>/dev/null
+		cd / 2>/dev/null
+		rm /control 2>/dev/null
+		ln -s /local/sd_card/control /control 2>/dev/null
+		rm /root 2>/dev/null
+		ln -s /local/sd_card/root /root 2>/dev/null
+		cd - 2>/dev/null
+		mount -oro,remount / 2>/dev/null
+		echo "update link"
+	fi
+else
+	echo "all-in-flash mode"
+	echo "BaseEtcDir: /local/etc/sysconfig" > /local/path.conf
+	echo "BaseDataDir: /local/data" >> /local/path.conf
+	echo "/local/path.conf updated"
+	if [ "`readlink /control`" != "/local/control" ] || [ "`readlink /root`" != "/local/root" ]
+	then
+		mount -orw,remount / 2>/dev/null
+		cd / 2>/dev/null
+		rm /control 2>/dev/null
+		ln -s /local/control /control 2>/dev/null
+		rm /root 2>/dev/null
+		ln -s /local/root /root 2>/dev/null
+		cd - 2>/dev/null
+		mount -oro,remount / 2>/dev/null
+		echo "update link"
+	fi
+fi
+
+}
+
+stop() {
+	/bin/umount $mntdir
+	echo "Done."
+}
+
+restart() {
+stop
+sleep 1
+start
+}
+
+case "$1" in
+start)
+    start
+;;
+stop)
+    stop
+;;
+restart)
+    restart
+;;
+*)
+  echo $"Usage: $0 {start|stop|restart}"
+        exit 1
+    ;;
+    
+esac
+
diff --exclude CVS --exclude .git -uNr skell-1.18/etc/rc.d/init.d/usbmode skell-1.18.modified/etc/rc.d/init.d/usbmode
--- skell-1.18/etc/rc.d/init.d/usbmode	1970-01-01 01:00:00.000000000 +0100
+++ skell-1.18.modified/etc/rc.d/init.d/usbmode	2014-11-24 11:23:39.221315640 +0100
@@ -0,0 +1,48 @@
+#!/bin/sh
+
+start() {
+BACKING_FILE=/local/root/backing_file
+
+if [ -e /local/etc/sysconfig/atn01.conf ] && [ "`grep -c "USBmode: Device" /local/etc/sysconfig/atn01.conf`" != "0" ] && [ -e $BACKING_FILE ]
+then
+	echo "Use the USB in device mode"
+
+	modprobe g_file_storage file=$BACKING_FILE
+	return $?
+else
+	echo "Use the USB in host mode"
+fi
+}
+
+stop() {
+	if [ `lsmod | grep -q g_file_storage` ] 
+	then
+		echo "removing g_file_storage..."
+		modprobe -r g_file_storage
+	fi
+	echo "Done."
+}
+
+restart() {
+stop
+sleep 1
+start
+}
+
+case "$1" in
+start)
+    start
+;;
+stop)
+    stop
+;;
+restart)
+    restart
+;;
+*)
+  echo $"Usage: $0 {start|stop|restart}"
+        exit 1
+    ;;
+    
+esac
+
diff --exclude CVS --exclude .git -uNr skell-1.18/usr/bin/startx skell-1.18.modified/usr/bin/startx
--- skell-1.18/usr/bin/startx	2008-12-02 17:33:40.000000000 +0100
+++ skell-1.18.modified/usr/bin/startx	1970-01-01 01:00:00.000000000 +0100
@@ -1,7 +0,0 @@
-#!/bin/sh
-
-Xfbdev -ac -mouse mouse -keybd keyboard &
-sleep 3
-DISPLAY=:0 twm
-killall Xfbdev
-
