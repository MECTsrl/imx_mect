#!/bin/sh

test -z "$ACTION" && exit 0

if test "$DEVTYPE" = "usb_device"; then
    test -z "$DEVPATH" && exit 0

    if test "$ACTION" = "add"; then
        ms_vendor="$(cat /sys${DEVPATH}/idVendor)"
        ms_product="$(cat /sys${DEVPATH}/idProduct)"
        test \( -z "$ms_vendor" \) -o \( -z "$ms_product" \) && exit 1

        ms_data="$(tar Oxjf /usr/share/usb_modeswitch/configPack.tar.bz2 ${ms_vendor}:${ms_product} 2>/dev/null)"
        if test -n "$ms_data"; then
            usb_modeswitch -v $ms_vendor -p $ms_product -f "$ms_data"
        else
	    modprobe -r option
            sleep 5     # Allow other drivers take over the new device (e.g., Wi-Fi).
            modprobe option

            optconf=/sys/bus/usb-serial/drivers/option1/new_id
            for n in $(seq 1 1 5); do
                if test -f "$optconf"; then
                    echo "$ms_vendor $ms_product" > "$optconf"

                    sleep 1

                    /usr/sbin/usb3g.sh start

                    break
                fi

                sleep 1
            done
        fi
    elif test "$ACTION" = "remove"; then
        modprobe -r option
    else
        exit 0
    fi
elif test \( "$MDEV" = "ttyUSB0" \) -o \( "$MDEV" = "ttyUSB1" \) -o \( "$MDEV" = "ttyUSB2" \); then
    test "$SUBSYSTEM" = "usb-serial" || exit 0

    if test "$ACTION" = "add"; then
        /usr/sbin/usb3g.sh start
    elif test "$ACTION" = "remove"; then
        /usr/sbin/usb3g.sh stop
    else
        exit 0
    fi
else
    exit 0
fi
